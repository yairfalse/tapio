id: oom-cascade
name: OOM Cascade Pattern
category: memory
severity: high
description: "Detects memory pressure that will cascade across pods on the same node"
enabled: true
min_confidence: 0.7
time_window: 5m
base_confidence: 0.85

conditions:
  - event_type: kernel
    match:
      type: contains
      field: semantic.intent
      value: "oom-kill"
    required: true
    
  - event_type: metric
    match:
      type: threshold
      field: attributes.memory_usage_percent
      threshold: 85
      operator: ">"
    aggregation:
      type: avg
      window: 5m
      threshold: 85
    required: false
    
  - event_type: system
    match:
      type: exact
      field: type
      value: "kernel"
    required: false
    
prediction_template:
  type: failure
  message: "Memory pressure will cascade to other pods on the same node within 10 minutes"
  impact: "Multiple pods on the same node will experience OOM kills"
  severity: high
  time_horizon: "10m"
  potential_impacts:
    - "Pod evictions on affected nodes"
    - "Service degradation due to pod restarts"
    - "Cascading failures across dependent services"
  recommended_actions:
    - "Increase memory limits for affected pods"
    - "Evict non-critical pods from the node"
    - "Scale down non-essential services"

remediation:
  auto_remediation: false
  manual_steps:
    - "Identify pods with high memory usage: kubectl top pods --all-namespaces"
    - "Increase memory limits: kubectl set resources deployment <deployment> --limits=memory=2Gi"
    - "If critical, drain node: kubectl drain <node> --ignore-daemonsets --delete-emptydir-data"
  preventative_steps:
    - "Set appropriate resource limits and requests for all pods"
    - "Implement horizontal pod autoscaling based on memory metrics"
    - "Monitor memory usage trends and scale proactively"
  runbooks:
    - "https://runbooks.tapio.io/memory/oom-cascade-mitigation"

metadata:
  tags:
    - memory
    - oom
    - cascade
    - kernel
  references:
    - "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
    - "https://kubernetes.io/docs/tasks/administer-cluster/out-of-resource/"