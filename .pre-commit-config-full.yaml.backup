# Tapio Lightweight Pre-commit Configuration for Refactor Phase
# Focuses on essential checks without blocking development

repos:
  # Fast formatting checks on changed files only
  - repo: local
    hooks:
      - id: go-fmt-changed
        name: Go Format (Changed Files Only)
        entry: bash -c 'files=$(echo "$@" | tr " " "\n" | grep "\.go$" | tr "\n" " "); [ -n "$files" ] && gofmt -l $files | wc -l | xargs test 0 -eq || true'
        language: system
        files: '\.go$'
        pass_filenames: true
      
      - id: go-imports-changed
        name: Go Imports (Changed Files Only)  
        entry: bash -c 'files=$(echo "$@" | tr " " "\n" | grep "\.go$" | tr "\n" " "); [ -n "$files" ] && goimports -l $files | wc -l | xargs test 0 -eq || true'
        language: system
        files: '\.go$'
        pass_filenames: true

  # Essential checks on changed files only
  - repo: local
    hooks:
      - id: no-panic-changed
        name: No panic() in changed files
        entry: bash -c 'files=$(echo "$@" | tr " " "\n" | grep "\.go$" | tr "\n" " "); [ -n "$files" ] && ! grep "panic(" $files | grep -v "init()" | grep -v "_test.go" || true'
        language: system
        files: '\.go$'
        pass_filenames: true
      
      - id: compile-changed
        name: Compile changed packages
        entry: bash -c 'changed_pkgs=$(echo "$@" | xargs -I {} dirname {} | sort -u | xargs -I {} echo "./{}"); [ -n "$changed_pkgs" ] && go build $changed_pkgs || echo "Warning: Build issues in changed packages"'
        language: system
        files: '\.go$'
        pass_filenames: true

  # Quick syntax validation
  - repo: local  
    hooks:
      - id: go-vet-changed
        name: Go Vet (Changed Packages Only)
        entry: bash -c 'changed_pkgs=$(echo "$@" | xargs -I {} dirname {} | sort -u | xargs -I {} echo "./{}"); [ -n "$changed_pkgs" ] && go vet $changed_pkgs || echo "Warning: Vet issues in changed packages"'
        language: system
        files: '\.go$'
        pass_filenames: true