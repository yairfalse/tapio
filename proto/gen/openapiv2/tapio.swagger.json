{
  "swagger": "2.0",
  "info": {
    "title": "tapio/v1/common.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventService"
    },
    {
      "name": "CollectorService"
    },
    {
      "name": "CorrelationService"
    },
    {
      "name": "ObservabilityService"
    },
    {
      "name": "TapioService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/analyze": {
      "post": {
        "summary": "AnalyzeEvents performs on-demand correlation analysis",
        "operationId": "TapioService_AnalyzeEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AnalyzeEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AnalyzeEventsRequest"
            }
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/collector/server-info": {
      "get": {
        "summary": "GetServerInfo returns server capabilities and configuration",
        "operationId": "CollectorService_GetServerInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "client_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supported_features",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CollectorService"
        ]
      }
    },
    "/v1/collector/{collector_id}": {
      "delete": {
        "summary": "UnregisterCollector removes a collector from the system",
        "operationId": "CollectorService_UnregisterCollector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UnregisterCollectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collector_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "description": "Force removal even if active",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CollectorService"
        ]
      }
    },
    "/v1/collector/{collector_id}/config": {
      "get": {
        "summary": "GetConfig retrieves dynamic collector configuration",
        "operationId": "CollectorService_GetConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collector_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "Optional: specific version",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CollectorService"
        ]
      },
      "put": {
        "summary": "UpdateConfig updates collector configuration dynamically",
        "operationId": "CollectorService_UpdateConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collector_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectorServiceUpdateConfigBody"
            }
          }
        ],
        "tags": [
          "CollectorService"
        ]
      }
    },
    "/v1/collector/{collector_id}/metrics": {
      "get": {
        "summary": "GetMetrics retrieves collector performance metrics",
        "operationId": "CollectorService_GetMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCollectorMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collector_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "time_window",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metric_names",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include_histograms",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "CollectorService"
        ]
      }
    },
    "/v1/collectors": {
      "get": {
        "summary": "ListCollectors lists all registered collectors",
        "operationId": "CollectorService_ListCollectors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCollectorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "collector_types",
            "description": "Filtering options",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "node_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "states",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "COLLECTOR_UNKNOWN",
                "COLLECTOR_STARTING",
                "COLLECTOR_RUNNING",
                "COLLECTOR_DEGRADED",
                "COLLECTOR_STOPPING",
                "COLLECTOR_STOPPED",
                "COLLECTOR_ERROR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page_size",
            "description": "Pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by",
            "description": "Sorting\n\n\"name\", \"type\", \"created\", \"events_per_second\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "descending",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "CollectorService"
        ]
      }
    },
    "/v1/correlations": {
      "get": {
        "summary": "GetCorrelations queries correlation findings with rich filtering\nInspired by Parca's query interface",
        "operationId": "TapioService_GetCorrelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCorrelationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "correlation_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "query.filter.time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "query.filter.event_types",
            "description": " - EVENT_TYPE_NETWORK: Infrastructure events\n - EVENT_TYPE_HTTP: Application events\n - EVENT_TYPE_SECURITY_ALERT: Security events\n - EVENT_TYPE_LATENCY_SPIKE: Performance events\n - EVENT_TYPE_TRANSACTION: Business events",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "EVENT_TYPE_NETWORK",
                "EVENT_TYPE_SYSCALL",
                "EVENT_TYPE_FILE_SYSTEM",
                "EVENT_TYPE_PROCESS",
                "EVENT_TYPE_CONTAINER",
                "EVENT_TYPE_KUBERNETES",
                "EVENT_TYPE_HTTP",
                "EVENT_TYPE_GRPC",
                "EVENT_TYPE_DATABASE",
                "EVENT_TYPE_CACHE",
                "EVENT_TYPE_MESSAGE_QUEUE",
                "EVENT_TYPE_SECURITY_ALERT",
                "EVENT_TYPE_AUTHENTICATION",
                "EVENT_TYPE_AUTHORIZATION",
                "EVENT_TYPE_AUDIT",
                "EVENT_TYPE_LATENCY_SPIKE",
                "EVENT_TYPE_ERROR_RATE",
                "EVENT_TYPE_RESOURCE_USAGE",
                "EVENT_TYPE_SATURATION",
                "EVENT_TYPE_TRANSACTION",
                "EVENT_TYPE_WORKFLOW",
                "EVENT_TYPE_BUSINESS_METRIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.severities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_SEVERITY_UNSPECIFIED",
                "EVENT_SEVERITY_DEBUG",
                "EVENT_SEVERITY_INFO",
                "EVENT_SEVERITY_WARNING",
                "EVENT_SEVERITY_ERROR",
                "EVENT_SEVERITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.source_types",
            "description": " - SOURCE_TYPE_EBPF: Kernel-level sources\n - SOURCE_TYPE_JOURNALD: System sources\n - SOURCE_TYPE_DOCKER: Container sources\n - SOURCE_TYPE_OTEL: Application sources\n - SOURCE_TYPE_PACKET_CAPTURE: Network sources\n - SOURCE_TYPE_AWS_CLOUDTRAIL: Cloud sources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SOURCE_TYPE_UNSPECIFIED",
                "SOURCE_TYPE_EBPF",
                "SOURCE_TYPE_KPROBE",
                "SOURCE_TYPE_TRACEPOINT",
                "SOURCE_TYPE_PERF_EVENT",
                "SOURCE_TYPE_JOURNALD",
                "SOURCE_TYPE_SYSLOG",
                "SOURCE_TYPE_AUDITD",
                "SOURCE_TYPE_DOCKER",
                "SOURCE_TYPE_CONTAINERD",
                "SOURCE_TYPE_KUBERNETES_API",
                "SOURCE_TYPE_KUBERNETES_EVENTS",
                "SOURCE_TYPE_OTEL",
                "SOURCE_TYPE_PROMETHEUS",
                "SOURCE_TYPE_JAEGER",
                "SOURCE_TYPE_APPLICATION_LOG",
                "SOURCE_TYPE_PACKET_CAPTURE",
                "SOURCE_TYPE_NETFLOW",
                "SOURCE_TYPE_DNS",
                "SOURCE_TYPE_AWS_CLOUDTRAIL",
                "SOURCE_TYPE_GCP_LOGGING",
                "SOURCE_TYPE_AZURE_MONITOR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.search_text",
            "description": "Text search across message/description fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.filter.namespaces",
            "description": "Namespace filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.services",
            "description": "Service filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.limit",
            "description": "Limit and pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.filter.page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.correlation_types",
            "description": "Correlation-specific filters\n\n - CORRELATION_TYPE_TEMPORAL: Time-based correlation\n - CORRELATION_TYPE_CAUSAL: Cause-effect relationships\n - CORRELATION_TYPE_SPATIAL: Location/topology based\n - CORRELATION_TYPE_SEMANTIC: Meaning-based correlation\n - CORRELATION_TYPE_STATISTICAL: Statistical patterns\n - CORRELATION_TYPE_TRACE_CONTEXT: OTEL trace-based",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CORRELATION_TYPE_UNSPECIFIED",
                "CORRELATION_TYPE_TEMPORAL",
                "CORRELATION_TYPE_CAUSAL",
                "CORRELATION_TYPE_SPATIAL",
                "CORRELATION_TYPE_SEMANTIC",
                "CORRELATION_TYPE_STATISTICAL",
                "CORRELATION_TYPE_TRACE_CONTEXT"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.min_confidence",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "query.min_correlation_score",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "query.include_events",
            "description": "Include related data",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query.include_semantic_groups",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query.include_root_cause",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query.include_predictions",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "summary": "GetEvents retrieves historical events with pagination",
        "operationId": "TapioService_GetEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "event_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "query.filter.time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "query.filter.event_types",
            "description": " - EVENT_TYPE_NETWORK: Infrastructure events\n - EVENT_TYPE_HTTP: Application events\n - EVENT_TYPE_SECURITY_ALERT: Security events\n - EVENT_TYPE_LATENCY_SPIKE: Performance events\n - EVENT_TYPE_TRANSACTION: Business events",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "EVENT_TYPE_NETWORK",
                "EVENT_TYPE_SYSCALL",
                "EVENT_TYPE_FILE_SYSTEM",
                "EVENT_TYPE_PROCESS",
                "EVENT_TYPE_CONTAINER",
                "EVENT_TYPE_KUBERNETES",
                "EVENT_TYPE_HTTP",
                "EVENT_TYPE_GRPC",
                "EVENT_TYPE_DATABASE",
                "EVENT_TYPE_CACHE",
                "EVENT_TYPE_MESSAGE_QUEUE",
                "EVENT_TYPE_SECURITY_ALERT",
                "EVENT_TYPE_AUTHENTICATION",
                "EVENT_TYPE_AUTHORIZATION",
                "EVENT_TYPE_AUDIT",
                "EVENT_TYPE_LATENCY_SPIKE",
                "EVENT_TYPE_ERROR_RATE",
                "EVENT_TYPE_RESOURCE_USAGE",
                "EVENT_TYPE_SATURATION",
                "EVENT_TYPE_TRANSACTION",
                "EVENT_TYPE_WORKFLOW",
                "EVENT_TYPE_BUSINESS_METRIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.severities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_SEVERITY_UNSPECIFIED",
                "EVENT_SEVERITY_DEBUG",
                "EVENT_SEVERITY_INFO",
                "EVENT_SEVERITY_WARNING",
                "EVENT_SEVERITY_ERROR",
                "EVENT_SEVERITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.source_types",
            "description": " - SOURCE_TYPE_EBPF: Kernel-level sources\n - SOURCE_TYPE_JOURNALD: System sources\n - SOURCE_TYPE_DOCKER: Container sources\n - SOURCE_TYPE_OTEL: Application sources\n - SOURCE_TYPE_PACKET_CAPTURE: Network sources\n - SOURCE_TYPE_AWS_CLOUDTRAIL: Cloud sources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SOURCE_TYPE_UNSPECIFIED",
                "SOURCE_TYPE_EBPF",
                "SOURCE_TYPE_KPROBE",
                "SOURCE_TYPE_TRACEPOINT",
                "SOURCE_TYPE_PERF_EVENT",
                "SOURCE_TYPE_JOURNALD",
                "SOURCE_TYPE_SYSLOG",
                "SOURCE_TYPE_AUDITD",
                "SOURCE_TYPE_DOCKER",
                "SOURCE_TYPE_CONTAINERD",
                "SOURCE_TYPE_KUBERNETES_API",
                "SOURCE_TYPE_KUBERNETES_EVENTS",
                "SOURCE_TYPE_OTEL",
                "SOURCE_TYPE_PROMETHEUS",
                "SOURCE_TYPE_JAEGER",
                "SOURCE_TYPE_APPLICATION_LOG",
                "SOURCE_TYPE_PACKET_CAPTURE",
                "SOURCE_TYPE_NETFLOW",
                "SOURCE_TYPE_DNS",
                "SOURCE_TYPE_AWS_CLOUDTRAIL",
                "SOURCE_TYPE_GCP_LOGGING",
                "SOURCE_TYPE_AZURE_MONITOR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.search_text",
            "description": "Text search across message/description fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.filter.namespaces",
            "description": "Namespace filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.services",
            "description": "Service filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query.filter.limit",
            "description": "Limit and pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.filter.page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.include_correlations",
            "description": "Include related data",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query.include_metrics",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query.include_traces",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query.aggregation.group_by_field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.aggregation.time_window",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.aggregation.aggregate_functions",
            "description": "\"count\", \"avg\", \"min\", \"max\", \"sum\"",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/events/stream": {
      "post": {
        "summary": "StreamEvents establishes bidirectional streaming for real-time event processing\nInspired by Hubble's efficient streaming design",
        "operationId": "TapioService_StreamEvents",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1TapioStreamEventsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1TapioStreamEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TapioStreamEventsRequest"
            }
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/events/subscribe": {
      "get": {
        "summary": "SubscribeToEvents provides real-time filtered event subscriptions\nServer-sent events for web clients",
        "operationId": "TapioService_SubscribeToEvents",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1EventUpdate"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1EventUpdate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subscription_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.event_types",
            "description": " - EVENT_TYPE_NETWORK: Infrastructure events\n - EVENT_TYPE_HTTP: Application events\n - EVENT_TYPE_SECURITY_ALERT: Security events\n - EVENT_TYPE_LATENCY_SPIKE: Performance events\n - EVENT_TYPE_TRANSACTION: Business events",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "EVENT_TYPE_NETWORK",
                "EVENT_TYPE_SYSCALL",
                "EVENT_TYPE_FILE_SYSTEM",
                "EVENT_TYPE_PROCESS",
                "EVENT_TYPE_CONTAINER",
                "EVENT_TYPE_KUBERNETES",
                "EVENT_TYPE_HTTP",
                "EVENT_TYPE_GRPC",
                "EVENT_TYPE_DATABASE",
                "EVENT_TYPE_CACHE",
                "EVENT_TYPE_MESSAGE_QUEUE",
                "EVENT_TYPE_SECURITY_ALERT",
                "EVENT_TYPE_AUTHENTICATION",
                "EVENT_TYPE_AUTHORIZATION",
                "EVENT_TYPE_AUDIT",
                "EVENT_TYPE_LATENCY_SPIKE",
                "EVENT_TYPE_ERROR_RATE",
                "EVENT_TYPE_RESOURCE_USAGE",
                "EVENT_TYPE_SATURATION",
                "EVENT_TYPE_TRANSACTION",
                "EVENT_TYPE_WORKFLOW",
                "EVENT_TYPE_BUSINESS_METRIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.severities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_SEVERITY_UNSPECIFIED",
                "EVENT_SEVERITY_DEBUG",
                "EVENT_SEVERITY_INFO",
                "EVENT_SEVERITY_WARNING",
                "EVENT_SEVERITY_ERROR",
                "EVENT_SEVERITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.source_types",
            "description": " - SOURCE_TYPE_EBPF: Kernel-level sources\n - SOURCE_TYPE_JOURNALD: System sources\n - SOURCE_TYPE_DOCKER: Container sources\n - SOURCE_TYPE_OTEL: Application sources\n - SOURCE_TYPE_PACKET_CAPTURE: Network sources\n - SOURCE_TYPE_AWS_CLOUDTRAIL: Cloud sources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SOURCE_TYPE_UNSPECIFIED",
                "SOURCE_TYPE_EBPF",
                "SOURCE_TYPE_KPROBE",
                "SOURCE_TYPE_TRACEPOINT",
                "SOURCE_TYPE_PERF_EVENT",
                "SOURCE_TYPE_JOURNALD",
                "SOURCE_TYPE_SYSLOG",
                "SOURCE_TYPE_AUDITD",
                "SOURCE_TYPE_DOCKER",
                "SOURCE_TYPE_CONTAINERD",
                "SOURCE_TYPE_KUBERNETES_API",
                "SOURCE_TYPE_KUBERNETES_EVENTS",
                "SOURCE_TYPE_OTEL",
                "SOURCE_TYPE_PROMETHEUS",
                "SOURCE_TYPE_JAEGER",
                "SOURCE_TYPE_APPLICATION_LOG",
                "SOURCE_TYPE_PACKET_CAPTURE",
                "SOURCE_TYPE_NETFLOW",
                "SOURCE_TYPE_DNS",
                "SOURCE_TYPE_AWS_CLOUDTRAIL",
                "SOURCE_TYPE_GCP_LOGGING",
                "SOURCE_TYPE_AZURE_MONITOR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.search_text",
            "description": "Text search across message/description fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.namespaces",
            "description": "Namespace filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.services",
            "description": "Service filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.limit",
            "description": "Limit and pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_existing",
            "description": "Subscription options\n\nInclude historical events",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lookback",
            "description": "How far back to include",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivery_mode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DELIVERY_MODE_UNSPECIFIED",
              "DELIVERY_MODE_BEST_EFFORT",
              "DELIVERY_MODE_AT_LEAST_ONCE"
            ],
            "default": "DELIVERY_MODE_UNSPECIFIED"
          },
          {
            "name": "max_events_per_second",
            "description": "Rate limiting",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/events/{id}": {
      "get": {
        "summary": "GetEventById retrieves a specific event",
        "operationId": "TapioService_GetEventById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Event"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_correlations",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "include_semantic_groups",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/health": {
      "get": {
        "summary": "HealthCheck monitors service health",
        "operationId": "TapioService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "components",
            "description": "Check specific components",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "include_details",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/info": {
      "get": {
        "summary": "GetServiceInfo returns service capabilities and version",
        "operationId": "TapioService_GetServiceInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TapioServiceInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/insights": {
      "get": {
        "summary": "GetInsights retrieves AI-generated insights",
        "operationId": "TapioService_GetInsights",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInsightsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.event_types",
            "description": " - EVENT_TYPE_NETWORK: Infrastructure events\n - EVENT_TYPE_HTTP: Application events\n - EVENT_TYPE_SECURITY_ALERT: Security events\n - EVENT_TYPE_LATENCY_SPIKE: Performance events\n - EVENT_TYPE_TRANSACTION: Business events",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "EVENT_TYPE_NETWORK",
                "EVENT_TYPE_SYSCALL",
                "EVENT_TYPE_FILE_SYSTEM",
                "EVENT_TYPE_PROCESS",
                "EVENT_TYPE_CONTAINER",
                "EVENT_TYPE_KUBERNETES",
                "EVENT_TYPE_HTTP",
                "EVENT_TYPE_GRPC",
                "EVENT_TYPE_DATABASE",
                "EVENT_TYPE_CACHE",
                "EVENT_TYPE_MESSAGE_QUEUE",
                "EVENT_TYPE_SECURITY_ALERT",
                "EVENT_TYPE_AUTHENTICATION",
                "EVENT_TYPE_AUTHORIZATION",
                "EVENT_TYPE_AUDIT",
                "EVENT_TYPE_LATENCY_SPIKE",
                "EVENT_TYPE_ERROR_RATE",
                "EVENT_TYPE_RESOURCE_USAGE",
                "EVENT_TYPE_SATURATION",
                "EVENT_TYPE_TRANSACTION",
                "EVENT_TYPE_WORKFLOW",
                "EVENT_TYPE_BUSINESS_METRIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.severities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_SEVERITY_UNSPECIFIED",
                "EVENT_SEVERITY_DEBUG",
                "EVENT_SEVERITY_INFO",
                "EVENT_SEVERITY_WARNING",
                "EVENT_SEVERITY_ERROR",
                "EVENT_SEVERITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.source_types",
            "description": " - SOURCE_TYPE_EBPF: Kernel-level sources\n - SOURCE_TYPE_JOURNALD: System sources\n - SOURCE_TYPE_DOCKER: Container sources\n - SOURCE_TYPE_OTEL: Application sources\n - SOURCE_TYPE_PACKET_CAPTURE: Network sources\n - SOURCE_TYPE_AWS_CLOUDTRAIL: Cloud sources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SOURCE_TYPE_UNSPECIFIED",
                "SOURCE_TYPE_EBPF",
                "SOURCE_TYPE_KPROBE",
                "SOURCE_TYPE_TRACEPOINT",
                "SOURCE_TYPE_PERF_EVENT",
                "SOURCE_TYPE_JOURNALD",
                "SOURCE_TYPE_SYSLOG",
                "SOURCE_TYPE_AUDITD",
                "SOURCE_TYPE_DOCKER",
                "SOURCE_TYPE_CONTAINERD",
                "SOURCE_TYPE_KUBERNETES_API",
                "SOURCE_TYPE_KUBERNETES_EVENTS",
                "SOURCE_TYPE_OTEL",
                "SOURCE_TYPE_PROMETHEUS",
                "SOURCE_TYPE_JAEGER",
                "SOURCE_TYPE_APPLICATION_LOG",
                "SOURCE_TYPE_PACKET_CAPTURE",
                "SOURCE_TYPE_NETFLOW",
                "SOURCE_TYPE_DNS",
                "SOURCE_TYPE_AWS_CLOUDTRAIL",
                "SOURCE_TYPE_GCP_LOGGING",
                "SOURCE_TYPE_AZURE_MONITOR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.search_text",
            "description": "Text search across message/description fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.namespaces",
            "description": "Namespace filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.services",
            "description": "Service filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.limit",
            "description": "Limit and pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "insight_types",
            "description": "Insight preferences",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "min_confidence",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "audience",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIENCE_UNSPECIFIED",
              "AUDIENCE_DEVELOPER",
              "AUDIENCE_SRE",
              "AUDIENCE_MANAGER",
              "AUDIENCE_EXECUTIVE"
            ],
            "default": "AUDIENCE_UNSPECIFIED"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/metrics": {
      "get": {
        "summary": "GetMetrics retrieves system metrics and statistics",
        "operationId": "TapioService_GetMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TapioGetMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "component",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "COMPONENT_ALL",
              "COMPONENT_SERVER",
              "COMPONENT_COLLECTORS",
              "COMPONENT_CORRELATION",
              "COMPONENT_STORAGE"
            ],
            "default": "COMPONENT_UNSPECIFIED"
          },
          {
            "name": "time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "metric_names",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    },
    "/v1/semantic-groups": {
      "get": {
        "summary": "GetSemanticGroups queries semantic correlation groups",
        "operationId": "TapioService_GetSemanticGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSemanticGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.time_range.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.time_range.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.event_types",
            "description": " - EVENT_TYPE_NETWORK: Infrastructure events\n - EVENT_TYPE_HTTP: Application events\n - EVENT_TYPE_SECURITY_ALERT: Security events\n - EVENT_TYPE_LATENCY_SPIKE: Performance events\n - EVENT_TYPE_TRANSACTION: Business events",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "EVENT_TYPE_NETWORK",
                "EVENT_TYPE_SYSCALL",
                "EVENT_TYPE_FILE_SYSTEM",
                "EVENT_TYPE_PROCESS",
                "EVENT_TYPE_CONTAINER",
                "EVENT_TYPE_KUBERNETES",
                "EVENT_TYPE_HTTP",
                "EVENT_TYPE_GRPC",
                "EVENT_TYPE_DATABASE",
                "EVENT_TYPE_CACHE",
                "EVENT_TYPE_MESSAGE_QUEUE",
                "EVENT_TYPE_SECURITY_ALERT",
                "EVENT_TYPE_AUTHENTICATION",
                "EVENT_TYPE_AUTHORIZATION",
                "EVENT_TYPE_AUDIT",
                "EVENT_TYPE_LATENCY_SPIKE",
                "EVENT_TYPE_ERROR_RATE",
                "EVENT_TYPE_RESOURCE_USAGE",
                "EVENT_TYPE_SATURATION",
                "EVENT_TYPE_TRANSACTION",
                "EVENT_TYPE_WORKFLOW",
                "EVENT_TYPE_BUSINESS_METRIC"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.severities",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EVENT_SEVERITY_UNSPECIFIED",
                "EVENT_SEVERITY_DEBUG",
                "EVENT_SEVERITY_INFO",
                "EVENT_SEVERITY_WARNING",
                "EVENT_SEVERITY_ERROR",
                "EVENT_SEVERITY_CRITICAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.source_types",
            "description": " - SOURCE_TYPE_EBPF: Kernel-level sources\n - SOURCE_TYPE_JOURNALD: System sources\n - SOURCE_TYPE_DOCKER: Container sources\n - SOURCE_TYPE_OTEL: Application sources\n - SOURCE_TYPE_PACKET_CAPTURE: Network sources\n - SOURCE_TYPE_AWS_CLOUDTRAIL: Cloud sources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SOURCE_TYPE_UNSPECIFIED",
                "SOURCE_TYPE_EBPF",
                "SOURCE_TYPE_KPROBE",
                "SOURCE_TYPE_TRACEPOINT",
                "SOURCE_TYPE_PERF_EVENT",
                "SOURCE_TYPE_JOURNALD",
                "SOURCE_TYPE_SYSLOG",
                "SOURCE_TYPE_AUDITD",
                "SOURCE_TYPE_DOCKER",
                "SOURCE_TYPE_CONTAINERD",
                "SOURCE_TYPE_KUBERNETES_API",
                "SOURCE_TYPE_KUBERNETES_EVENTS",
                "SOURCE_TYPE_OTEL",
                "SOURCE_TYPE_PROMETHEUS",
                "SOURCE_TYPE_JAEGER",
                "SOURCE_TYPE_APPLICATION_LOG",
                "SOURCE_TYPE_PACKET_CAPTURE",
                "SOURCE_TYPE_NETFLOW",
                "SOURCE_TYPE_DNS",
                "SOURCE_TYPE_AWS_CLOUDTRAIL",
                "SOURCE_TYPE_GCP_LOGGING",
                "SOURCE_TYPE_AZURE_MONITOR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.search_text",
            "description": "Text search across message/description fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.namespaces",
            "description": "Namespace filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.services",
            "description": "Service filtering",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.limit",
            "description": "Limit and pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter.page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_events",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "include_analysis",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TapioService"
        ]
      }
    }
  },
  "definitions": {
    "CollectorServiceUpdateConfigBody": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1CollectorConfig"
        },
        "etag": {
          "type": "string",
          "title": "For optimistic concurrency"
        },
        "validate_only": {
          "type": "boolean",
          "title": "Validate without applying"
        }
      },
      "title": "UpdateConfigRequest updates collector configuration"
    },
    "EventQueryAggregationOptions": {
      "type": "object",
      "properties": {
        "group_by_field": {
          "type": "string"
        },
        "time_window": {
          "type": "string"
        },
        "aggregate_functions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "\"count\", \"avg\", \"min\", \"max\", \"sum\""
        }
      },
      "title": "Aggregation options"
    },
    "FilterLabelSelector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "title": "\"=\", \"!=\", \"in\", \"notin\", \"exists\", \"!exists\""
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Label-based filtering (inspired by Hubble/Parca)"
    },
    "GetInsightsRequestAudience": {
      "type": "string",
      "enum": [
        "AUDIENCE_UNSPECIFIED",
        "AUDIENCE_DEVELOPER",
        "AUDIENCE_SRE",
        "AUDIENCE_MANAGER",
        "AUDIENCE_EXECUTIVE"
      ],
      "default": "AUDIENCE_UNSPECIFIED",
      "title": "Audience for human-readable explanations"
    },
    "ImpactAssessmentImpactLevel": {
      "type": "string",
      "enum": [
        "IMPACT_LEVEL_UNSPECIFIED",
        "IMPACT_LEVEL_MINIMAL",
        "IMPACT_LEVEL_LOW",
        "IMPACT_LEVEL_MEDIUM",
        "IMPACT_LEVEL_HIGH",
        "IMPACT_LEVEL_CRITICAL"
      ],
      "default": "IMPACT_LEVEL_UNSPECIFIED"
    },
    "LogLogSeverity": {
      "type": "string",
      "enum": [
        "LOG_SEVERITY_UNSPECIFIED",
        "LOG_SEVERITY_TRACE",
        "LOG_SEVERITY_DEBUG",
        "LOG_SEVERITY_INFO",
        "LOG_SEVERITY_WARN",
        "LOG_SEVERITY_ERROR",
        "LOG_SEVERITY_FATAL"
      ],
      "default": "LOG_SEVERITY_UNSPECIFIED",
      "title": "Severity"
    },
    "MetricMetricType": {
      "type": "string",
      "enum": [
        "METRIC_TYPE_UNSPECIFIED",
        "METRIC_TYPE_GAUGE",
        "METRIC_TYPE_COUNTER",
        "METRIC_TYPE_HISTOGRAM",
        "METRIC_TYPE_SUMMARY"
      ],
      "default": "METRIC_TYPE_UNSPECIFIED",
      "title": "Metric type following OTEL conventions"
    },
    "MetricQueryAggregationType": {
      "type": "string",
      "enum": [
        "AGGREGATION_TYPE_UNSPECIFIED",
        "AGGREGATION_TYPE_AVG",
        "AGGREGATION_TYPE_SUM",
        "AGGREGATION_TYPE_MIN",
        "AGGREGATION_TYPE_MAX",
        "AGGREGATION_TYPE_COUNT",
        "AGGREGATION_TYPE_P50",
        "AGGREGATION_TYPE_P95",
        "AGGREGATION_TYPE_P99"
      ],
      "default": "AGGREGATION_TYPE_UNSPECIFIED",
      "title": "Aggregation"
    },
    "RecommendedActionActionType": {
      "type": "string",
      "enum": [
        "ACTION_TYPE_UNSPECIFIED",
        "ACTION_TYPE_INVESTIGATE",
        "ACTION_TYPE_MITIGATE",
        "ACTION_TYPE_PREVENT",
        "ACTION_TYPE_ESCALATE"
      ],
      "default": "ACTION_TYPE_UNSPECIFIED"
    },
    "RecommendedActionPriority": {
      "type": "string",
      "enum": [
        "PRIORITY_UNSPECIFIED",
        "PRIORITY_LOW",
        "PRIORITY_MEDIUM",
        "PRIORITY_HIGH",
        "PRIORITY_CRITICAL"
      ],
      "default": "PRIORITY_UNSPECIFIED"
    },
    "SortOrderDirection": {
      "type": "string",
      "enum": [
        "DIRECTION_UNSPECIFIED",
        "DIRECTION_ASC",
        "DIRECTION_DESC"
      ],
      "default": "DIRECTION_UNSPECIFIED"
    },
    "SpanSpanKind": {
      "type": "string",
      "enum": [
        "SPAN_KIND_UNSPECIFIED",
        "SPAN_KIND_INTERNAL",
        "SPAN_KIND_SERVER",
        "SPAN_KIND_CLIENT",
        "SPAN_KIND_PRODUCER",
        "SPAN_KIND_CONSUMER"
      ],
      "default": "SPAN_KIND_UNSPECIFIED",
      "title": "Span kind (OTEL compatible)"
    },
    "SpanStatusStatusCode": {
      "type": "string",
      "enum": [
        "STATUS_CODE_UNSET",
        "STATUS_CODE_OK",
        "STATUS_CODE_ERROR"
      ],
      "default": "STATUS_CODE_UNSET"
    },
    "StreamControlControlType": {
      "type": "string",
      "enum": [
        "CONTROL_TYPE_UNSPECIFIED",
        "CONTROL_TYPE_PAUSE",
        "CONTROL_TYPE_RESUME",
        "CONTROL_TYPE_CONFIGURE",
        "CONTROL_TYPE_HEARTBEAT"
      ],
      "default": "CONTROL_TYPE_UNSPECIFIED"
    },
    "SubscribeRequestDeliveryMode": {
      "type": "string",
      "enum": [
        "DELIVERY_MODE_UNSPECIFIED",
        "DELIVERY_MODE_BEST_EFFORT",
        "DELIVERY_MODE_AT_LEAST_ONCE"
      ],
      "default": "DELIVERY_MODE_UNSPECIFIED",
      "title": "Delivery guarantees"
    },
    "TapioGetMetricsRequestComponent": {
      "type": "string",
      "enum": [
        "COMPONENT_UNSPECIFIED",
        "COMPONENT_ALL",
        "COMPONENT_SERVER",
        "COMPONENT_COLLECTORS",
        "COMPONENT_CORRELATION",
        "COMPONENT_STORAGE"
      ],
      "default": "COMPONENT_UNSPECIFIED",
      "title": "Component to get metrics for"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "tapiov1HealthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1HealthStatusStatus"
        },
        "message": {
          "type": "string"
        },
        "last_check": {
          "type": "string",
          "format": "date-time"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "HealthStatus represents component health"
    },
    "v1AckMessage": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "AckMessage acknowledges received responses"
    },
    "v1AnalyzeEventsRequest": {
      "type": "object",
      "properties": {
        "event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "event_query": {
          "$ref": "#/definitions/v1EventQuery"
        },
        "enable_root_cause": {
          "type": "boolean",
          "title": "Analysis options"
        },
        "enable_predictions": {
          "type": "boolean"
        },
        "enable_impact_assessment": {
          "type": "boolean"
        },
        "time_range": {
          "$ref": "#/definitions/v1TimeRange",
          "title": "Time window for analysis"
        },
        "preferred_correlation_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CorrelationType"
          },
          "title": "Correlation preferences"
        },
        "min_confidence_threshold": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "AnalyzeEventsRequest for on-demand analysis"
    },
    "v1AnalyzeEventsResponse": {
      "type": "object",
      "properties": {
        "correlations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Correlation"
          }
        },
        "semantic_groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SemanticGroup"
          }
        },
        "root_cause": {
          "$ref": "#/definitions/v1RootCauseAnalysis"
        },
        "predictions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PredictedOutcome"
          }
        },
        "overall_impact": {
          "$ref": "#/definitions/v1ImpactAssessment"
        },
        "analysis_duration": {
          "type": "string",
          "title": "Analysis metadata"
        },
        "events_analyzed": {
          "type": "integer",
          "format": "int32"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "AnalyzeEventsResponse"
    },
    "v1BatchMetadata": {
      "type": "object",
      "properties": {
        "uncompressed_size": {
          "type": "string",
          "format": "uint64",
          "title": "Total size of events before compression"
        },
        "compressed_size": {
          "type": "string",
          "format": "uint64",
          "title": "Size after compression"
        },
        "event_count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of events in batch"
        },
        "time_span": {
          "type": "string",
          "title": "Time span covered by events in this batch"
        },
        "dropped_events": {
          "type": "integer",
          "format": "int64",
          "title": "Events that were dropped due to rate limiting"
        },
        "checksum": {
          "type": "string",
          "title": "Checksum for integrity verification"
        }
      },
      "title": "BatchMetadata provides information about the batch"
    },
    "v1CausalFactor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contribution_weight": {
          "type": "number",
          "format": "double",
          "title": "How much this factor contributed"
        },
        "category": {
          "type": "string",
          "title": "e.g., \"configuration\", \"resource\", \"code\", \"external\""
        }
      },
      "title": "CausalFactor represents a factor in root cause"
    },
    "v1CausalLink": {
      "type": "object",
      "properties": {
        "from_event_id": {
          "type": "string"
        },
        "to_event_id": {
          "type": "string"
        },
        "relationship_type": {
          "type": "string",
          "title": "e.g., \"caused\", \"triggered\", \"correlated\""
        },
        "confidence": {
          "type": "number",
          "format": "double"
        },
        "time_delta": {
          "type": "string"
        }
      },
      "title": "CausalLink represents a cause-effect relationship"
    },
    "v1ClusterHealth": {
      "type": "object",
      "properties": {
        "total_nodes": {
          "type": "integer",
          "format": "int32"
        },
        "healthy_nodes": {
          "type": "integer",
          "format": "int32"
        },
        "leader_node": {
          "type": "string"
        },
        "is_quorum": {
          "type": "boolean"
        },
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NodeHealth"
          }
        }
      },
      "title": "ClusterHealth for HA deployments"
    },
    "v1CollectionStats": {
      "type": "object",
      "properties": {
        "total_events": {
          "type": "string",
          "format": "uint64",
          "title": "Total events collected since start"
        },
        "events_per_second": {
          "type": "number",
          "format": "float",
          "title": "Events per second (current rate)"
        },
        "total_bytes": {
          "type": "string",
          "format": "uint64",
          "title": "Total bytes processed"
        },
        "bytes_per_second": {
          "type": "number",
          "format": "float",
          "title": "Bytes per second (current rate)"
        },
        "batches_sent": {
          "type": "string",
          "format": "uint64",
          "title": "Number of batches sent"
        },
        "avg_batch_size": {
          "type": "number",
          "format": "float",
          "title": "Average batch size"
        },
        "errors": {
          "$ref": "#/definitions/v1ErrorCounters",
          "title": "Error counters"
        }
      },
      "title": "CollectionStats tracks collection performance metrics"
    },
    "v1CollectorCapabilities": {
      "type": "object",
      "properties": {
        "max_events_per_second": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum events per second this collector can handle"
        },
        "supported_compression": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CompressionType"
          },
          "title": "Supported compression algorithms"
        },
        "supported_event_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Supported event types"
        },
        "supports_streaming": {
          "type": "boolean",
          "title": "Whether collector supports streaming"
        },
        "supports_batching": {
          "type": "boolean",
          "title": "Whether collector supports batching"
        },
        "max_batch_size": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum batch size supported"
        },
        "buffer_size": {
          "type": "string",
          "format": "uint64",
          "title": "Buffer size in bytes"
        }
      },
      "title": "CollectorCapabilities describes what the collector can do"
    },
    "v1CollectorConfig": {
      "type": "object",
      "properties": {
        "collector_id": {
          "type": "string",
          "title": "Assigned collector ID (may differ from requested)"
        },
        "config_version": {
          "type": "string",
          "title": "Configuration version"
        },
        "flow_control": {
          "$ref": "#/definitions/v1FlowControlDirective",
          "title": "Flow control settings"
        },
        "routing": {
          "$ref": "#/definitions/v1RoutingConfig",
          "title": "Event routing configuration"
        },
        "quality": {
          "$ref": "#/definitions/v1QualitySettings",
          "title": "Quality requirements"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServerEndpoint"
          },
          "title": "Server endpoints for load balancing"
        },
        "heartbeat_interval": {
          "type": "string",
          "title": "Heartbeat interval"
        },
        "config_ttl": {
          "type": "string",
          "title": "Configuration TTL"
        }
      },
      "title": "CollectorConfig provides configuration from server to collector"
    },
    "v1CollectorEventAck": {
      "type": "object",
      "properties": {
        "batch_id": {
          "type": "string",
          "title": "Batch ID that was processed"
        },
        "request_sequence": {
          "type": "string",
          "format": "uint64",
          "title": "Sequence number of acknowledged request"
        },
        "processed_count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of events successfully processed"
        },
        "failed_count": {
          "type": "integer",
          "format": "int64",
          "title": "Number of events that failed processing"
        },
        "failed_event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of event IDs that failed (if any)"
        },
        "processing_time": {
          "type": "string",
          "title": "Processing time for this batch"
        },
        "processed_at": {
          "type": "string",
          "format": "date-time",
          "title": "Server timestamp when processing completed"
        }
      },
      "title": "CollectorEventAck acknowledges successful processing of events"
    },
    "v1CollectorEventBatch": {
      "type": "object",
      "properties": {
        "batch_id": {
          "type": "string",
          "title": "Batch identifier for tracking and deduplication"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "When this batch was created"
        },
        "collector_id": {
          "type": "string",
          "title": "Source collector information"
        },
        "collector_type": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          },
          "title": "Events in this batch"
        },
        "metadata": {
          "$ref": "#/definitions/v1BatchMetadata",
          "title": "Batch metadata"
        },
        "compression": {
          "$ref": "#/definitions/v1CompressionType",
          "title": "Compression used for this batch"
        },
        "quality": {
          "$ref": "#/definitions/v1QualityMetrics",
          "title": "Quality metrics for this batch"
        }
      },
      "title": "CollectorEventBatch contains multiple events for efficient transmission"
    },
    "v1CollectorHealthStatus": {
      "type": "string",
      "enum": [
        "HEALTH_UNKNOWN",
        "HEALTH_HEALTHY",
        "HEALTH_DEGRADED",
        "HEALTH_UNHEALTHY",
        "HEALTH_MAINTENANCE"
      ],
      "default": "HEALTH_UNKNOWN"
    },
    "v1CollectorInfo": {
      "type": "object",
      "properties": {
        "collector_id": {
          "type": "string"
        },
        "collector_type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1CollectorState"
        },
        "node": {
          "$ref": "#/definitions/v1NodeInfo"
        },
        "registered_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "events_per_second": {
          "type": "number",
          "format": "double",
          "title": "Performance summary"
        },
        "total_events": {
          "type": "string",
          "format": "int64"
        },
        "error_rate": {
          "type": "number",
          "format": "double"
        },
        "health": {
          "$ref": "#/definitions/tapiov1HealthStatus",
          "title": "Health indicators"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_summary": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Configuration summary"
        }
      },
      "title": "CollectorInfo provides collector details"
    },
    "v1CollectorMetrics": {
      "type": "object",
      "properties": {
        "events_processed": {
          "type": "string",
          "format": "int64",
          "title": "Event processing metrics"
        },
        "events_dropped": {
          "type": "string",
          "format": "int64"
        },
        "events_filtered": {
          "type": "string",
          "format": "int64"
        },
        "events_per_second": {
          "type": "number",
          "format": "double"
        },
        "resources": {
          "$ref": "#/definitions/v1ResourceUtilization",
          "title": "Resource utilization"
        },
        "quality": {
          "$ref": "#/definitions/v1QualityMetrics",
          "title": "Quality metrics"
        },
        "network": {
          "$ref": "#/definitions/v1NetworkMetrics",
          "title": "Network metrics"
        },
        "errors": {
          "$ref": "#/definitions/v1ErrorMetrics",
          "title": "Error metrics"
        },
        "latency_histograms": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1LatencyHistogram"
          },
          "title": "Latency histograms"
        }
      },
      "title": "CollectorMetrics contains detailed performance data"
    },
    "v1CollectorState": {
      "type": "string",
      "enum": [
        "COLLECTOR_UNKNOWN",
        "COLLECTOR_STARTING",
        "COLLECTOR_RUNNING",
        "COLLECTOR_DEGRADED",
        "COLLECTOR_STOPPING",
        "COLLECTOR_STOPPED",
        "COLLECTOR_ERROR"
      ],
      "default": "COLLECTOR_UNKNOWN"
    },
    "v1CollectorStatus": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/v1CollectorState",
          "title": "Current state of the collector"
        },
        "resources": {
          "$ref": "#/definitions/v1ResourceUtilization",
          "title": "Resource utilization"
        },
        "stats": {
          "$ref": "#/definitions/v1CollectionStats",
          "title": "Collection statistics"
        },
        "config_version": {
          "type": "string",
          "title": "Current configuration version"
        },
        "uptime": {
          "type": "string",
          "title": "Uptime of the collector"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Last known issues or warnings"
        }
      },
      "title": "CollectorStatus reports collector health and statistics"
    },
    "v1CollectorSummaryStats": {
      "type": "object",
      "properties": {
        "total_collectors": {
          "type": "integer",
          "format": "int32"
        },
        "collectors_by_type": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "collectors_by_state": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "total_events_per_second": {
          "type": "number",
          "format": "double"
        },
        "unhealthy_collectors": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CollectorSummaryStats provides fleet-wide statistics"
    },
    "v1ComponentHealth": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/tapiov1HealthStatus"
        },
        "message": {
          "type": "string"
        },
        "last_healthy": {
          "type": "string",
          "format": "date-time"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          },
          "title": "Component-specific metrics"
        }
      },
      "title": "ComponentHealth for individual components"
    },
    "v1CompressionType": {
      "type": "string",
      "enum": [
        "COMPRESSION_NONE",
        "COMPRESSION_GZIP",
        "COMPRESSION_ZSTD",
        "COMPRESSION_LZ4",
        "COMPRESSION_SNAPPY"
      ],
      "default": "COMPRESSION_NONE"
    },
    "v1ConfigValidationError": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "suggestion": {
          "type": "string"
        }
      },
      "title": "ConfigValidationError for configuration issues"
    },
    "v1ConfigurationRequest": {
      "type": "object",
      "properties": {
        "preferred_rate": {
          "type": "integer",
          "format": "int64",
          "title": "Preferred events per second"
        },
        "preferred_batch_size": {
          "type": "integer",
          "format": "int64",
          "title": "Preferred batch size"
        },
        "preferred_compression": {
          "$ref": "#/definitions/v1CompressionType",
          "title": "Preferred compression"
        },
        "event_filters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Event filtering rules requested"
        },
        "quality": {
          "$ref": "#/definitions/v1QualitySettings",
          "title": "Quality settings"
        }
      },
      "title": "ConfigurationRequest specifies desired collector configuration"
    },
    "v1ContributingFactor": {
      "type": "object",
      "properties": {
        "factor": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "evidence": {
          "type": "string"
        }
      },
      "title": "ContributingFactor represents secondary factors"
    },
    "v1Correlation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1CorrelationType"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "correlation_score": {
          "type": "number",
          "format": "double",
          "description": "-1.0 to 1.0 for statistical correlations",
          "title": "Correlation strength and confidence"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "title": "0.0 to 1.0"
        },
        "event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Related events"
        },
        "event_count": {
          "type": "integer",
          "format": "int32"
        },
        "semantic_group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Semantic groups if applicable"
        },
        "discovered_at": {
          "type": "string",
          "format": "date-time",
          "title": "Time characteristics"
        },
        "time_range": {
          "$ref": "#/definitions/v1TimeRange"
        },
        "statistics": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          },
          "title": "Statistical properties"
        },
        "visualization_type": {
          "type": "string",
          "description": "e.g., \"timeline\", \"graph\", \"heatmap\"",
          "title": "Visualization hints"
        },
        "visualization_data": {
          "type": "object"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecommendedAction"
          },
          "title": "Actions and recommendations"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata"
        }
      },
      "title": "Correlation represents a discovered correlation"
    },
    "v1CorrelationQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/v1Filter"
        },
        "correlation_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CorrelationType"
          },
          "title": "Correlation-specific filters"
        },
        "min_confidence": {
          "type": "number",
          "format": "double"
        },
        "min_correlation_score": {
          "type": "number",
          "format": "double"
        },
        "include_events": {
          "type": "boolean",
          "title": "Include related data"
        },
        "include_semantic_groups": {
          "type": "boolean"
        },
        "include_root_cause": {
          "type": "boolean"
        },
        "include_predictions": {
          "type": "boolean"
        },
        "sort_orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOrder"
          }
        }
      },
      "title": "CorrelationQuery for searching correlations"
    },
    "v1CorrelationType": {
      "type": "string",
      "enum": [
        "CORRELATION_TYPE_UNSPECIFIED",
        "CORRELATION_TYPE_TEMPORAL",
        "CORRELATION_TYPE_CAUSAL",
        "CORRELATION_TYPE_SPATIAL",
        "CORRELATION_TYPE_SEMANTIC",
        "CORRELATION_TYPE_STATISTICAL",
        "CORRELATION_TYPE_TRACE_CONTEXT"
      ],
      "default": "CORRELATION_TYPE_UNSPECIFIED",
      "description": "- CORRELATION_TYPE_TEMPORAL: Time-based correlation\n - CORRELATION_TYPE_CAUSAL: Cause-effect relationships\n - CORRELATION_TYPE_SPATIAL: Location/topology based\n - CORRELATION_TYPE_SEMANTIC: Meaning-based correlation\n - CORRELATION_TYPE_STATISTICAL: Statistical patterns\n - CORRELATION_TYPE_TRACE_CONTEXT: OTEL trace-based",
      "title": "CorrelationType represents different correlation strategies"
    },
    "v1CorrelationUpdate": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1CorrelationUpdateUpdateType"
        },
        "correlation": {
          "$ref": "#/definitions/v1Correlation"
        },
        "semantic_group": {
          "$ref": "#/definitions/v1SemanticGroup"
        },
        "update_timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "update_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "CorrelationUpdate for real-time correlation updates"
    },
    "v1CorrelationUpdateUpdateType": {
      "type": "string",
      "enum": [
        "UPDATE_TYPE_UNSPECIFIED",
        "UPDATE_TYPE_NEW_CORRELATION",
        "UPDATE_TYPE_CORRELATION_STRENGTHENED",
        "UPDATE_TYPE_NEW_EVENTS_ADDED",
        "UPDATE_TYPE_PREDICTION_UPDATED",
        "UPDATE_TYPE_IMPACT_CHANGED"
      ],
      "default": "UPDATE_TYPE_UNSPECIFIED"
    },
    "v1DataPoint": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "gauge_value": {
          "type": "number",
          "format": "double"
        },
        "counter_value": {
          "type": "string",
          "format": "int64"
        },
        "histogram_value": {
          "$ref": "#/definitions/v1HistogramValue"
        },
        "summary_value": {
          "$ref": "#/definitions/v1SummaryValue"
        },
        "exemplar": {
          "$ref": "#/definitions/v1Exemplar",
          "title": "Exemplar for tracing connection"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional attributes"
        }
      },
      "title": "DataPoint represents a single metric measurement"
    },
    "v1DiskUtilization": {
      "type": "object",
      "properties": {
        "reads_per_sec": {
          "type": "string",
          "format": "uint64",
          "title": "Reads per second"
        },
        "writes_per_sec": {
          "type": "string",
          "format": "uint64",
          "title": "Writes per second"
        },
        "bytes_read_per_sec": {
          "type": "string",
          "format": "uint64",
          "title": "Bytes read per second"
        },
        "bytes_written_per_sec": {
          "type": "string",
          "format": "uint64",
          "title": "Bytes written per second"
        }
      },
      "title": "DiskUtilization tracks disk I/O usage"
    },
    "v1Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "trace_id": {
          "type": "string",
          "title": "For error tracking"
        }
      },
      "title": "Error represents a standardized error response"
    },
    "v1ErrorCode": {
      "type": "string",
      "enum": [
        "ERROR_UNKNOWN",
        "ERROR_INVALID_REQUEST",
        "ERROR_AUTHENTICATION_FAILED",
        "ERROR_AUTHORIZATION_FAILED",
        "ERROR_RATE_LIMITED",
        "ERROR_QUOTA_EXCEEDED",
        "ERROR_INVALID_CONFIGURATION",
        "ERROR_SERVICE_UNAVAILABLE",
        "ERROR_INTERNAL_ERROR",
        "ERROR_TIMEOUT",
        "ERROR_INVALID_COMPRESSION",
        "ERROR_BATCH_TOO_LARGE",
        "ERROR_UNSUPPORTED_VERSION"
      ],
      "default": "ERROR_UNKNOWN"
    },
    "v1ErrorCounters": {
      "type": "object",
      "properties": {
        "collection_errors": {
          "type": "string",
          "format": "uint64"
        },
        "serialization_errors": {
          "type": "string",
          "format": "uint64"
        },
        "network_errors": {
          "type": "string",
          "format": "uint64"
        },
        "validation_errors": {
          "type": "string",
          "format": "uint64"
        },
        "rate_limit_errors": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "ErrorCounters tracks various types of errors"
    },
    "v1ErrorMetrics": {
      "type": "object",
      "properties": {
        "errors_by_type": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "error_rate": {
          "type": "number",
          "format": "double"
        },
        "last_error": {
          "type": "string",
          "format": "date-time"
        },
        "recent_errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecentError"
          }
        }
      },
      "title": "ErrorMetrics for error tracking"
    },
    "v1ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/v1ErrorCode"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "retryable": {
          "type": "boolean"
        },
        "retry_after": {
          "type": "string"
        }
      },
      "title": "ErrorResponse provides detailed error information"
    },
    "v1ErrorStats": {
      "type": "object",
      "properties": {
        "total_errors": {
          "type": "integer",
          "format": "int64"
        },
        "validation_errors": {
          "type": "integer",
          "format": "int64"
        },
        "serialization_errors": {
          "type": "integer",
          "format": "int64"
        },
        "network_errors": {
          "type": "integer",
          "format": "int64"
        },
        "error_rate": {
          "type": "number",
          "format": "float",
          "title": "Errors per second"
        }
      },
      "title": "ErrorStats tracks error rates and types"
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Unique identifier for the event"
        },
        "type": {
          "$ref": "#/definitions/v1EventType",
          "title": "Event classification"
        },
        "severity": {
          "$ref": "#/definitions/v1EventSeverity"
        },
        "source": {
          "$ref": "#/definitions/v1SourceType"
        },
        "message": {
          "type": "string",
          "title": "Core event data"
        },
        "description": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "context": {
          "$ref": "#/definitions/v1EventContext",
          "title": "Contextual information"
        },
        "trace_id": {
          "type": "string",
          "title": "OTEL trace context (duplicated for top-level access)"
        },
        "span_id": {
          "type": "string"
        },
        "parent_span_id": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "title": "Structured data and attributes"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricValue"
          },
          "title": "Metrics associated with this event"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceIdentifier"
          },
          "title": "Related resources"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Correlation hints"
        },
        "collector_id": {
          "type": "string",
          "title": "Processing metadata"
        },
        "processed_at": {
          "type": "string",
          "format": "date-time"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "title": "Confidence score (0.0 to 1.0)"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags for categorization"
        }
      },
      "title": "Event represents a single observability event with full OTEL context"
    },
    "v1EventAck": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "string"
        },
        "batch_id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "title": "\"received\", \"processing\", \"processed\", \"failed\""
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "EventAck acknowledges event processing"
    },
    "v1EventBatch": {
      "type": "object",
      "properties": {
        "batch_id": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "collector_id": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "EventBatch for efficient bulk event transmission"
    },
    "v1EventBatchResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "ack": {
          "$ref": "#/definitions/v1CollectorEventAck"
        },
        "flow_control": {
          "$ref": "#/definitions/v1FlowControlDirective"
        }
      },
      "title": "EventBatchResponse for non-streaming batch responses"
    },
    "v1EventContext": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "title": "Service and component information"
        },
        "component": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "title": "Infrastructure context"
        },
        "cluster": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "host": {
          "type": "string",
          "title": "Host information"
        },
        "ip_address": {
          "type": "string"
        },
        "mac_address": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "title": "User context"
        },
        "session_id": {
          "type": "string"
        },
        "region": {
          "type": "string",
          "title": "Geographic context"
        },
        "zone": {
          "type": "string"
        },
        "datacenter": {
          "type": "string"
        },
        "trace_id": {
          "type": "string",
          "title": "OTEL trace context"
        },
        "span_id": {
          "type": "string"
        },
        "parent_span_id": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional labels for filtering (Hubble/Parca inspired)"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Custom metadata"
        }
      },
      "title": "EventContext provides contextual information for events"
    },
    "v1EventQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/v1Filter"
        },
        "sort_orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SortOrder"
          }
        },
        "include_correlations": {
          "type": "boolean",
          "title": "Include related data"
        },
        "include_metrics": {
          "type": "boolean"
        },
        "include_traces": {
          "type": "boolean"
        },
        "aggregation": {
          "$ref": "#/definitions/EventQueryAggregationOptions"
        }
      },
      "title": "EventQuery for searching events"
    },
    "v1EventSeverity": {
      "type": "string",
      "enum": [
        "EVENT_SEVERITY_UNSPECIFIED",
        "EVENT_SEVERITY_DEBUG",
        "EVENT_SEVERITY_INFO",
        "EVENT_SEVERITY_WARNING",
        "EVENT_SEVERITY_ERROR",
        "EVENT_SEVERITY_CRITICAL"
      ],
      "default": "EVENT_SEVERITY_UNSPECIFIED",
      "title": "EventSeverity represents the severity level of an event"
    },
    "v1EventStatistics": {
      "type": "object",
      "properties": {
        "time_range": {
          "$ref": "#/definitions/v1TimeRange"
        },
        "total_events": {
          "type": "string",
          "format": "int64"
        },
        "events_by_type": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "Breakdown by type"
        },
        "events_by_severity": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "Breakdown by severity"
        },
        "events_by_source": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "Breakdown by source"
        },
        "top_resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceCount"
          },
          "title": "Top resources"
        },
        "events_per_second": {
          "type": "number",
          "format": "double",
          "title": "Event rate"
        },
        "avg_processing_time": {
          "type": "string",
          "title": "Processing stats"
        },
        "failed_events": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "EventStatistics provides event analytics"
    },
    "v1EventType": {
      "type": "string",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "EVENT_TYPE_NETWORK",
        "EVENT_TYPE_SYSCALL",
        "EVENT_TYPE_FILE_SYSTEM",
        "EVENT_TYPE_PROCESS",
        "EVENT_TYPE_CONTAINER",
        "EVENT_TYPE_KUBERNETES",
        "EVENT_TYPE_HTTP",
        "EVENT_TYPE_GRPC",
        "EVENT_TYPE_DATABASE",
        "EVENT_TYPE_CACHE",
        "EVENT_TYPE_MESSAGE_QUEUE",
        "EVENT_TYPE_SECURITY_ALERT",
        "EVENT_TYPE_AUTHENTICATION",
        "EVENT_TYPE_AUTHORIZATION",
        "EVENT_TYPE_AUDIT",
        "EVENT_TYPE_LATENCY_SPIKE",
        "EVENT_TYPE_ERROR_RATE",
        "EVENT_TYPE_RESOURCE_USAGE",
        "EVENT_TYPE_SATURATION",
        "EVENT_TYPE_TRANSACTION",
        "EVENT_TYPE_WORKFLOW",
        "EVENT_TYPE_BUSINESS_METRIC"
      ],
      "default": "EVENT_TYPE_UNSPECIFIED",
      "description": "- EVENT_TYPE_NETWORK: Infrastructure events\n - EVENT_TYPE_HTTP: Application events\n - EVENT_TYPE_SECURITY_ALERT: Security events\n - EVENT_TYPE_LATENCY_SPIKE: Performance events\n - EVENT_TYPE_TRANSACTION: Business events",
      "title": "EventType represents the semantic type of an event"
    },
    "v1EventUpdate": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1EventUpdateUpdateType"
        },
        "event": {
          "$ref": "#/definitions/v1Event"
        },
        "update_timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "update_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "EventUpdate for real-time event updates"
    },
    "v1EventUpdateUpdateType": {
      "type": "string",
      "enum": [
        "UPDATE_TYPE_UNSPECIFIED",
        "UPDATE_TYPE_NEW",
        "UPDATE_TYPE_MODIFIED",
        "UPDATE_TYPE_CORRELATED",
        "UPDATE_TYPE_ENRICHED"
      ],
      "default": "UPDATE_TYPE_UNSPECIFIED",
      "title": "- UPDATE_TYPE_CORRELATED: New correlation found\n - UPDATE_TYPE_ENRICHED: Additional context added"
    },
    "v1Evidence": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "e.g., \"metric_anomaly\", \"log_pattern\", \"trace_span\""
        },
        "description": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "relevance_score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Evidence supporting root cause analysis"
    },
    "v1Exemplar": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "trace_id": {
          "type": "string"
        },
        "span_id": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Exemplar connects metrics to traces"
    },
    "v1ExportMetricsResponse": {
      "type": "object",
      "properties": {
        "accepted_metrics": {
          "type": "integer",
          "format": "int32"
        },
        "rejected_metrics": {
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Error"
          }
        }
      },
      "title": "ExportMetricsResponse"
    },
    "v1Filter": {
      "type": "object",
      "properties": {
        "label_selectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/FilterLabelSelector"
          }
        },
        "time_range": {
          "$ref": "#/definitions/v1TimeRange"
        },
        "event_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventType"
          }
        },
        "severities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EventSeverity"
          }
        },
        "source_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SourceType"
          }
        },
        "search_text": {
          "type": "string",
          "title": "Text search across message/description fields"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Namespace filtering"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Service filtering"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Limit and pagination"
        },
        "page_token": {
          "type": "string"
        }
      },
      "title": "Filter represents a generic filter for queries"
    },
    "v1FlowControlDirective": {
      "type": "object",
      "properties": {
        "max_events_per_second": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum events per second allowed"
        },
        "max_batch_size": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum batch size"
        },
        "batch_interval": {
          "type": "string",
          "title": "Suggested batching interval"
        },
        "enable_compression": {
          "type": "boolean",
          "title": "Whether to enable compression"
        },
        "compression_type": {
          "$ref": "#/definitions/v1CompressionType",
          "title": "Preferred compression algorithm"
        },
        "valid_duration": {
          "type": "string",
          "title": "Duration this directive is valid"
        }
      },
      "title": "FlowControlDirective instructs collectors on rate limiting"
    },
    "v1FlowControlMessage": {
      "type": "object",
      "properties": {
        "requested_rate": {
          "type": "integer",
          "format": "int64",
          "title": "Requested events per second"
        },
        "buffer_utilization": {
          "type": "number",
          "format": "float",
          "title": "Current buffer utilization (0.0 to 1.0)"
        },
        "memory_pressure": {
          "$ref": "#/definitions/v1MemoryPressure",
          "title": "Memory pressure indicator"
        },
        "reason": {
          "type": "string",
          "title": "Reason for flow control request"
        }
      },
      "title": "FlowControlMessage allows collectors to request flow control changes"
    },
    "v1GetCollectorMetricsResponse": {
      "type": "object",
      "properties": {
        "collector_id": {
          "type": "string"
        },
        "metrics": {
          "$ref": "#/definitions/v1CollectorMetrics"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "GetCollectorMetricsResponse returns performance metrics"
    },
    "v1GetConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/v1CollectorConfig"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string",
          "title": "For conditional updates"
        }
      },
      "title": "GetConfigResponse returns collector configuration"
    },
    "v1GetCorrelationsResponse": {
      "type": "object",
      "properties": {
        "correlations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Correlation"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetCorrelationsResponse"
    },
    "v1GetEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetEventsResponse returns requested events"
    },
    "v1GetInsightsResponse": {
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Insight"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        },
        "stats": {
          "$ref": "#/definitions/v1InsightStats",
          "title": "Summary statistics"
        }
      },
      "title": "GetInsightsResponse returns AI insights"
    },
    "v1GetLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Log"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        }
      },
      "title": "GetLogsResponse"
    },
    "v1GetMetricsResponse": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Metric"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetMetricsResponse"
    },
    "v1GetProfilesResponse": {
      "type": "object",
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Profile"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        }
      },
      "title": "GetProfilesResponse"
    },
    "v1GetRecommendedActionsResponse": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecommendedAction"
          }
        },
        "correlation_id": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetRecommendedActionsResponse"
    },
    "v1GetSemanticGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SemanticGroup"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        }
      },
      "title": "GetSemanticGroupsResponse"
    },
    "v1GetTracesResponse": {
      "type": "object",
      "properties": {
        "traces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Trace"
          }
        },
        "total_count": {
          "type": "string",
          "format": "int64"
        },
        "next_page_token": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "GetTracesResponse"
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "overall_status": {
          "$ref": "#/definitions/tapiov1HealthStatus"
        },
        "components": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ComponentHealth"
          }
        },
        "checked_at": {
          "type": "string",
          "format": "date-time"
        },
        "cluster": {
          "$ref": "#/definitions/v1ClusterHealth",
          "title": "Cluster health if running in HA mode"
        }
      },
      "title": "HealthCheckResponse returns health status"
    },
    "v1HealthStatusStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_HEALTHY",
        "STATUS_DEGRADED",
        "STATUS_UNHEALTHY",
        "STATUS_UNKNOWN"
      ],
      "default": "STATUS_UNSPECIFIED"
    },
    "v1HeartbeatResponse": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "server_status": {
          "$ref": "#/definitions/v1ServerStatus"
        },
        "config_version": {
          "type": "string"
        },
        "config_update_available": {
          "type": "boolean"
        },
        "flow_control": {
          "$ref": "#/definitions/v1FlowControlDirective"
        }
      },
      "title": "HeartbeatResponse provides heartbeat acknowledgment and updates"
    },
    "v1HistogramBucket": {
      "type": "object",
      "properties": {
        "upper_bound": {
          "type": "number",
          "format": "double"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "HistogramBucket for histogram data"
    },
    "v1HistogramValue": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "sum": {
          "type": "number",
          "format": "double"
        },
        "bucket_counts": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "explicit_bounds": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "HistogramValue for histogram metrics"
    },
    "v1HumanExplanation": {
      "type": "object",
      "properties": {
        "technical_explanation": {
          "type": "string"
        },
        "business_explanation": {
          "type": "string"
        },
        "executive_summary": {
          "type": "string"
        },
        "visualizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Visualization"
          },
          "title": "Visual aids"
        },
        "key_metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyMetric"
          },
          "title": "Key metrics"
        }
      },
      "title": "HumanExplanation provides multi-audience explanations"
    },
    "v1ImpactAssessment": {
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/ImpactAssessmentImpactLevel"
        },
        "business_impact_score": {
          "type": "number",
          "format": "double",
          "title": "0.0 to 1.0"
        },
        "technical_impact_score": {
          "type": "number",
          "format": "double",
          "title": "0.0 to 1.0"
        },
        "affected_services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Affected business services"
        },
        "estimated_duration": {
          "type": "string",
          "title": "Estimated downtime or degradation"
        },
        "affected_users": {
          "type": "string",
          "format": "int64",
          "title": "Number of affected users/requests"
        },
        "affected_requests": {
          "type": "string",
          "format": "int64"
        },
        "estimated_cost": {
          "type": "number",
          "format": "double",
          "title": "Financial impact estimate"
        },
        "currency": {
          "type": "string"
        },
        "cascade_probability": {
          "type": "number",
          "format": "double",
          "title": "Cascade risk"
        },
        "potential_cascade_targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ImpactAssessment evaluates the business impact of a correlation"
    },
    "v1Insight": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "explanation": {
          "$ref": "#/definitions/v1HumanExplanation",
          "title": "Human-readable explanation"
        },
        "event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Supporting data"
        },
        "correlation_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "semantic_group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "title": "Confidence and impact"
        },
        "impact": {
          "$ref": "#/definitions/v1ImpactAssessment"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RecommendedAction"
          },
          "title": "Recommendations"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Metadata"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Insight represents an AI-generated insight"
    },
    "v1InsightStats": {
      "type": "object",
      "properties": {
        "insights_by_type": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "insights_by_severity": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "avg_confidence": {
          "type": "number",
          "format": "double"
        },
        "total_recommendations": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "InsightStats provides insight statistics"
    },
    "v1InstrumentationScope": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "schema_url": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "InstrumentationScope identifies the instrumentation library"
    },
    "v1KeyMetric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "trend": {
          "type": "string",
          "title": "\"up\", \"down\", \"stable\""
        },
        "severity": {
          "type": "string",
          "title": "\"good\", \"warning\", \"critical\""
        }
      },
      "title": "KeyMetric for highlighting important values"
    },
    "v1LatencyHistogram": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "mean": {
          "type": "number",
          "format": "double"
        },
        "p50": {
          "type": "number",
          "format": "double"
        },
        "p95": {
          "type": "number",
          "format": "double"
        },
        "p99": {
          "type": "number",
          "format": "double"
        },
        "p999": {
          "type": "number",
          "format": "double"
        },
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1HistogramBucket"
          }
        }
      },
      "title": "LatencyHistogram for latency distribution"
    },
    "v1LatencyStats": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string"
        },
        "max": {
          "type": "string"
        },
        "avg": {
          "type": "string"
        },
        "p50": {
          "type": "string"
        },
        "p95": {
          "type": "string"
        },
        "p99": {
          "type": "string"
        }
      },
      "title": "LatencyStats provides statistical information about latencies"
    },
    "v1ListCollectorsResponse": {
      "type": "object",
      "properties": {
        "collectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CollectorInfo"
          }
        },
        "next_page_token": {
          "type": "string"
        },
        "total_count": {
          "type": "integer",
          "format": "int32"
        },
        "stats": {
          "$ref": "#/definitions/v1CollectorSummaryStats",
          "title": "Summary statistics"
        }
      },
      "title": "ListCollectorsResponse returns collector list"
    },
    "v1LoadBalancingStrategy": {
      "type": "string",
      "enum": [
        "LOAD_BALANCING_ROUND_ROBIN",
        "LOAD_BALANCING_LEAST_CONNECTIONS",
        "LOAD_BALANCING_WEIGHTED",
        "LOAD_BALANCING_CONSISTENT_HASH",
        "LOAD_BALANCING_LOCALITY_AWARE"
      ],
      "default": "LOAD_BALANCING_ROUND_ROBIN"
    },
    "v1Log": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "severity": {
          "$ref": "#/definitions/LogLogSeverity"
        },
        "severity_text": {
          "type": "string"
        },
        "body": {
          "type": "object",
          "title": "Log body"
        },
        "resource": {
          "$ref": "#/definitions/v1ResourceIdentifier",
          "title": "Resource that emitted this log"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Attributes"
        },
        "trace_id": {
          "type": "string",
          "title": "Trace context"
        },
        "span_id": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/v1InstrumentationScope",
          "title": "Instrumentation info"
        }
      },
      "title": "Log represents a log entry with OTEL compatibility"
    },
    "v1MemoryPressure": {
      "type": "string",
      "enum": [
        "MEMORY_PRESSURE_NONE",
        "MEMORY_PRESSURE_LOW",
        "MEMORY_PRESSURE_MEDIUM",
        "MEMORY_PRESSURE_HIGH",
        "MEMORY_PRESSURE_CRITICAL"
      ],
      "default": "MEMORY_PRESSURE_NONE"
    },
    "v1Metric": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/MetricMetricType"
        },
        "unit": {
          "type": "string",
          "title": "Unit of measurement (e.g., \"bytes\", \"ms\", \"percent\")"
        },
        "data_points": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DataPoint"
          },
          "title": "Data points"
        },
        "resource": {
          "$ref": "#/definitions/v1ResourceIdentifier",
          "title": "Resource this metric belongs to"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels for filtering and grouping"
        },
        "scope": {
          "$ref": "#/definitions/v1InstrumentationScope",
          "title": "OTEL instrumentation scope"
        }
      },
      "title": "Metric represents a time-series metric with OTEL-compatible attributes"
    },
    "v1MetricDataPoint": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "MetricDataPoint for time series"
    },
    "v1MetricQuery": {
      "type": "object",
      "properties": {
        "metric_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "$ref": "#/definitions/v1Filter"
        },
        "aggregation": {
          "$ref": "#/definitions/MetricQueryAggregationType"
        },
        "group_by": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Grouping"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution"
        }
      },
      "title": "MetricQuery for querying metrics"
    },
    "v1MetricValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "MetricValue represents a single metric data point"
    },
    "v1NetworkMetrics": {
      "type": "object",
      "properties": {
        "bytes_sent": {
          "type": "string",
          "format": "int64"
        },
        "bytes_received": {
          "type": "string",
          "format": "int64"
        },
        "connections_active": {
          "type": "string",
          "format": "int64"
        },
        "connections_failed": {
          "type": "string",
          "format": "int64"
        },
        "avg_latency_ms": {
          "type": "number",
          "format": "double"
        },
        "p99_latency_ms": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "NetworkMetrics for network performance"
    },
    "v1NetworkUtilization": {
      "type": "object",
      "properties": {
        "bytes_sent_per_sec": {
          "type": "string",
          "format": "uint64",
          "title": "Bytes per second sent"
        },
        "bytes_received_per_sec": {
          "type": "string",
          "format": "uint64",
          "title": "Bytes per second received"
        },
        "connections": {
          "type": "integer",
          "format": "int64",
          "title": "Current number of connections"
        },
        "latency": {
          "type": "string",
          "title": "Network latency to server"
        }
      },
      "title": "NetworkUtilization tracks network resource usage"
    },
    "v1NodeHealth": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/tapiov1HealthStatus"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "NodeHealth for cluster nodes"
    },
    "v1NodeInfo": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "architecture": {
          "type": "string"
        },
        "kernel_version": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "NodeInfo provides information about the node running the collector"
    },
    "v1PredictedEvent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1EventType"
        },
        "severity": {
          "$ref": "#/definitions/v1EventSeverity"
        },
        "description": {
          "type": "string"
        },
        "probability": {
          "type": "number",
          "format": "double"
        },
        "estimated_time": {
          "type": "string"
        }
      },
      "title": "PredictedEvent represents a potential future event"
    },
    "v1PredictedOutcome": {
      "type": "object",
      "properties": {
        "scenario": {
          "type": "string"
        },
        "probability": {
          "type": "number",
          "format": "double",
          "title": "0.0 to 1.0"
        },
        "time_to_outcome": {
          "type": "string"
        },
        "predicted_events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PredictedEvent"
          },
          "title": "Predicted events that may occur"
        },
        "prevention_actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Recommended preventive actions"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "title": "Confidence in prediction"
        },
        "model_version": {
          "type": "string",
          "title": "Model metadata"
        },
        "prediction_timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PredictedOutcome represents AI-predicted future states"
    },
    "v1Profile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "profile_type": {
          "type": "string",
          "title": "e.g., \"cpu\", \"memory\", \"block\", \"mutex\""
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "title": "Time range of the profile"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "pprof_data": {
          "type": "string",
          "format": "byte",
          "title": "Sample data (pprof format)"
        },
        "resource": {
          "$ref": "#/definitions/v1ResourceIdentifier",
          "title": "Resource that generated this profile"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels for filtering"
        },
        "trace_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Trace correlation"
        },
        "metadata": {
          "$ref": "#/definitions/v1ProfileMetadata",
          "title": "Profile metadata"
        }
      },
      "title": "Profile represents a continuous profiling sample"
    },
    "v1ProfileAnalysis": {
      "type": "object",
      "properties": {
        "profile_id": {
          "type": "string"
        },
        "hot_spots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProfileFunction"
          }
        },
        "bottlenecks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "optimizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProfileOptimization"
          }
        },
        "statistics": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "ProfileAnalysis provides detailed profile analysis"
    },
    "v1ProfileFunction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "line": {
          "type": "integer",
          "format": "int32"
        },
        "self_value": {
          "type": "number",
          "format": "double"
        },
        "cumulative_value": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "ProfileFunction represents a function in a profile"
    },
    "v1ProfileMetadata": {
      "type": "object",
      "properties": {
        "sample_count": {
          "type": "string",
          "format": "int64"
        },
        "sample_unit": {
          "type": "string"
        },
        "total_value": {
          "type": "number",
          "format": "double"
        },
        "top_functions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProfileFunction"
          },
          "title": "Top functions"
        },
        "detected_issues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Detected issues"
        }
      },
      "title": "ProfileMetadata contains profile analysis metadata"
    },
    "v1ProfileOptimization": {
      "type": "object",
      "properties": {
        "function": {
          "type": "string"
        },
        "issue": {
          "type": "string"
        },
        "suggestion": {
          "type": "string"
        },
        "potential_improvement": {
          "type": "number",
          "format": "double",
          "title": "Percentage"
        },
        "code_location": {
          "type": "string"
        }
      },
      "title": "ProfileOptimization suggests performance improvements"
    },
    "v1QualityMetrics": {
      "type": "object",
      "properties": {
        "avg_confidence": {
          "type": "number",
          "format": "float",
          "title": "Average confidence score (0.0 to 1.0)"
        },
        "context_completeness": {
          "type": "number",
          "format": "float",
          "title": "Percentage of events with full context"
        },
        "processing_latency": {
          "$ref": "#/definitions/v1LatencyStats",
          "title": "Processing latency statistics"
        },
        "collection_latency": {
          "$ref": "#/definitions/v1LatencyStats",
          "title": "Collection latency statistics"
        },
        "error_stats": {
          "$ref": "#/definitions/v1ErrorStats",
          "title": "Error rates"
        }
      },
      "title": "QualityMetrics tracks the quality of collected events"
    },
    "v1QualitySettings": {
      "type": "object",
      "properties": {
        "min_confidence": {
          "type": "number",
          "format": "float",
          "title": "Minimum confidence threshold"
        },
        "required_context": {
          "type": "number",
          "format": "float",
          "title": "Required context completeness"
        },
        "max_latency": {
          "type": "string",
          "title": "Maximum acceptable latency"
        }
      },
      "title": "QualitySettings configures quality requirements"
    },
    "v1Quantile": {
      "type": "object",
      "properties": {
        "quantile": {
          "type": "number",
          "format": "double"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Quantile for summary metrics"
    },
    "v1RateLimitInfo": {
      "type": "object",
      "properties": {
        "global_limit": {
          "type": "integer",
          "format": "int64"
        },
        "per_collector_limit": {
          "type": "integer",
          "format": "int64"
        },
        "burst_limit": {
          "type": "integer",
          "format": "int64"
        },
        "window": {
          "type": "string"
        }
      },
      "title": "RateLimitInfo provides rate limiting information"
    },
    "v1RecentError": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "error_type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stack_trace": {
          "type": "string"
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "RecentError for error details"
    },
    "v1RecommendedAction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/RecommendedActionActionType"
        },
        "priority": {
          "$ref": "#/definitions/RecommendedActionPriority"
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Action details"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "expected_result": {
          "type": "string",
          "title": "Expected outcome"
        },
        "estimated_duration": {
          "type": "string"
        },
        "risk_level": {
          "type": "string",
          "title": "Risk assessment"
        },
        "risk_description": {
          "type": "string"
        }
      },
      "title": "RecommendedAction suggests remediation steps"
    },
    "v1RegionInfo": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServerEndpoint"
          }
        },
        "load_factor": {
          "type": "number",
          "format": "float"
        },
        "collector_count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "RegionInfo provides regional routing information"
    },
    "v1ResourceCount": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "count": {
          "type": "string",
          "format": "int64"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "ResourceCount for statistics"
    },
    "v1ResourceIdentifier": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "e.g., \"pod\", \"node\", \"service\""
        },
        "name": {
          "type": "string",
          "title": "Resource name"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace (if applicable)"
        },
        "uid": {
          "type": "string",
          "title": "Unique identifier"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Resource labels"
        }
      },
      "title": "ResourceIdentifier uniquely identifies a resource"
    },
    "v1ResourceInfo": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/v1ResourceIdentifier"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "telemetry_sdk": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ResourceInfo provides detailed resource information"
    },
    "v1ResourceUtilization": {
      "type": "object",
      "properties": {
        "cpu_usage": {
          "type": "number",
          "format": "float",
          "title": "CPU usage percentage (0.0 to 1.0)"
        },
        "memory_bytes": {
          "type": "string",
          "format": "uint64",
          "title": "Memory usage in bytes"
        },
        "memory_limit": {
          "type": "string",
          "format": "uint64",
          "title": "Memory limit in bytes"
        },
        "network": {
          "$ref": "#/definitions/v1NetworkUtilization",
          "title": "Network bandwidth usage"
        },
        "disk": {
          "$ref": "#/definitions/v1DiskUtilization",
          "title": "Disk I/O statistics"
        }
      },
      "title": "ResourceUtilization tracks collector resource usage"
    },
    "v1RootCauseAnalysis": {
      "type": "object",
      "properties": {
        "root_cause_summary": {
          "type": "string",
          "title": "Primary root cause"
        },
        "causal_factors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CausalFactor"
          }
        },
        "causal_chain": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CausalLink"
          },
          "title": "Causal chain from root to symptom"
        },
        "contributing_factors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ContributingFactor"
          },
          "title": "Contributing factors"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "title": "Analysis confidence"
        },
        "evidence": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Evidence"
          },
          "title": "Evidence supporting the analysis"
        }
      },
      "title": "RootCauseAnalysis provides deep analysis of event causality"
    },
    "v1RoutingConfig": {
      "type": "object",
      "properties": {
        "default_route": {
          "type": "string",
          "title": "Default route for events"
        },
        "type_routes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Event type specific routing"
        },
        "priority_route": {
          "type": "string",
          "title": "Priority routing for high-priority events"
        },
        "strategy": {
          "$ref": "#/definitions/v1LoadBalancingStrategy",
          "title": "Load balancing strategy"
        }
      },
      "title": "RoutingConfig specifies how events should be routed"
    },
    "v1SemanticGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "semantic_type": {
          "type": "string",
          "description": "e.g., \"deployment\", \"failure_cascade\", \"security_breach\"",
          "title": "Semantic classification"
        },
        "intent": {
          "type": "string",
          "title": "Human-readable intent description"
        },
        "confidence_score": {
          "type": "number",
          "format": "double",
          "title": "0.0 to 1.0"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Event"
          },
          "title": "Related events in causal order"
        },
        "event_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "For reference without full events"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "title": "Temporal characteristics"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "trace_id": {
          "type": "string",
          "title": "OTEL trace context"
        },
        "span_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "impact": {
          "$ref": "#/definitions/v1ImpactAssessment",
          "title": "Impact assessment"
        },
        "prediction": {
          "$ref": "#/definitions/v1PredictedOutcome",
          "title": "Predicted outcome"
        },
        "root_cause": {
          "$ref": "#/definitions/v1RootCauseAnalysis",
          "title": "Root cause analysis"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata and labels"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "SemanticGroup represents a group of semantically related events"
    },
    "v1ServerCapabilities": {
      "type": "object",
      "properties": {
        "max_events_per_second": {
          "type": "string",
          "format": "uint64"
        },
        "max_concurrent_collectors": {
          "type": "integer",
          "format": "int64"
        },
        "max_batch_size": {
          "type": "integer",
          "format": "int64"
        },
        "supports_streaming": {
          "type": "boolean"
        },
        "supports_compression": {
          "type": "boolean"
        },
        "supports_load_balancing": {
          "type": "boolean"
        }
      },
      "title": "ServerCapabilities describes server features"
    },
    "v1ServerEndpoint": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "tls_enabled": {
          "type": "boolean"
        },
        "region": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int64"
        },
        "health": {
          "$ref": "#/definitions/v1CollectorHealthStatus"
        }
      },
      "title": "ServerEndpoint provides server connection information"
    },
    "v1ServerInfoResponse": {
      "type": "object",
      "properties": {
        "server_version": {
          "type": "string"
        },
        "supported_features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "$ref": "#/definitions/v1ServerCapabilities"
        },
        "supported_compression": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CompressionType"
          }
        },
        "rate_limits": {
          "$ref": "#/definitions/v1RateLimitInfo"
        }
      },
      "title": "ServerInfoResponse provides server capabilities"
    },
    "v1ServerStatus": {
      "type": "object",
      "properties": {
        "load": {
          "type": "number",
          "format": "float",
          "title": "Current server load (0.0 to 1.0)"
        },
        "available_capacity": {
          "type": "integer",
          "format": "int64",
          "title": "Available capacity for new connections"
        },
        "connected_collectors": {
          "type": "integer",
          "format": "int64",
          "title": "Current number of connected collectors"
        },
        "config_version": {
          "type": "string",
          "title": "Server configuration version"
        },
        "rate_limits": {
          "$ref": "#/definitions/v1RateLimitInfo",
          "title": "Rate limiting information"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RegionInfo"
          },
          "title": "Regional routing information"
        }
      },
      "title": "ServerStatus provides server health and load information"
    },
    "v1ServiceInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "span_count": {
          "type": "integer",
          "format": "int32"
        },
        "total_duration": {
          "type": "string"
        }
      },
      "title": "ServiceInfo represents a service in a trace"
    },
    "v1ServiceLimits": {
      "type": "object",
      "properties": {
        "max_events_per_second": {
          "type": "string",
          "format": "int64"
        },
        "max_concurrent_streams": {
          "type": "string",
          "format": "int64"
        },
        "max_event_size": {
          "type": "string",
          "format": "int64"
        },
        "max_batch_size": {
          "type": "string",
          "format": "int64"
        },
        "retention_period": {
          "type": "string"
        }
      },
      "title": "ServiceLimits defines operational limits"
    },
    "v1SortOrder": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "direction": {
          "$ref": "#/definitions/SortOrderDirection"
        }
      },
      "title": "SortOrder for query results"
    },
    "v1SourceType": {
      "type": "string",
      "enum": [
        "SOURCE_TYPE_UNSPECIFIED",
        "SOURCE_TYPE_EBPF",
        "SOURCE_TYPE_KPROBE",
        "SOURCE_TYPE_TRACEPOINT",
        "SOURCE_TYPE_PERF_EVENT",
        "SOURCE_TYPE_JOURNALD",
        "SOURCE_TYPE_SYSLOG",
        "SOURCE_TYPE_AUDITD",
        "SOURCE_TYPE_DOCKER",
        "SOURCE_TYPE_CONTAINERD",
        "SOURCE_TYPE_KUBERNETES_API",
        "SOURCE_TYPE_KUBERNETES_EVENTS",
        "SOURCE_TYPE_OTEL",
        "SOURCE_TYPE_PROMETHEUS",
        "SOURCE_TYPE_JAEGER",
        "SOURCE_TYPE_APPLICATION_LOG",
        "SOURCE_TYPE_PACKET_CAPTURE",
        "SOURCE_TYPE_NETFLOW",
        "SOURCE_TYPE_DNS",
        "SOURCE_TYPE_AWS_CLOUDTRAIL",
        "SOURCE_TYPE_GCP_LOGGING",
        "SOURCE_TYPE_AZURE_MONITOR"
      ],
      "default": "SOURCE_TYPE_UNSPECIFIED",
      "description": "- SOURCE_TYPE_EBPF: Kernel-level sources\n - SOURCE_TYPE_JOURNALD: System sources\n - SOURCE_TYPE_DOCKER: Container sources\n - SOURCE_TYPE_OTEL: Application sources\n - SOURCE_TYPE_PACKET_CAPTURE: Network sources\n - SOURCE_TYPE_AWS_CLOUDTRAIL: Cloud sources",
      "title": "SourceType represents the origin of an event"
    },
    "v1Span": {
      "type": "object",
      "properties": {
        "trace_id": {
          "type": "string"
        },
        "span_id": {
          "type": "string"
        },
        "parent_span_id": {
          "type": "string"
        },
        "operation_name": {
          "type": "string"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "title": "Timing"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/SpanSpanKind"
        },
        "status": {
          "$ref": "#/definitions/v1SpanStatus",
          "title": "Status"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Attributes"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SpanEvent"
          },
          "title": "Events within the span"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SpanLink"
          },
          "title": "Links to other spans"
        },
        "resource": {
          "$ref": "#/definitions/v1ResourceIdentifier",
          "title": "Resource that produced this span"
        },
        "scope": {
          "$ref": "#/definitions/v1InstrumentationScope",
          "title": "Instrumentation info"
        }
      },
      "title": "Span represents a single operation in a trace"
    },
    "v1SpanEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "SpanEvent represents an event within a span"
    },
    "v1SpanLink": {
      "type": "object",
      "properties": {
        "trace_id": {
          "type": "string"
        },
        "span_id": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "SpanLink represents a link to another span"
    },
    "v1SpanStatus": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/SpanStatusStatusCode"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "SpanStatus represents the status of a span"
    },
    "v1StreamControl": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/StreamControlControlType"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "StreamControl for flow control and configuration"
    },
    "v1StreamControlResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "StreamControlResponse acknowledges control messages"
    },
    "v1StreamEventsResponse": {
      "type": "object",
      "properties": {
        "ack": {
          "$ref": "#/definitions/v1EventAck"
        },
        "error": {
          "$ref": "#/definitions/v1Error"
        },
        "health_status": {
          "$ref": "#/definitions/tapiov1HealthStatus"
        }
      },
      "title": "StreamEventsResponse for bidirectional streaming"
    },
    "v1StreamResponse": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "string",
          "format": "uint64",
          "title": "Response sequence number for ordering"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp when response was generated"
        },
        "event_ack": {
          "$ref": "#/definitions/v1CollectorEventAck",
          "title": "Acknowledgment of processed events"
        },
        "flow_control": {
          "$ref": "#/definitions/v1FlowControlDirective",
          "title": "Flow control directive"
        },
        "server_status": {
          "$ref": "#/definitions/v1ServerStatus",
          "title": "Server status or configuration update"
        },
        "error": {
          "$ref": "#/definitions/v1ErrorResponse",
          "title": "Error information"
        }
      },
      "title": "StreamResponse contains responses and control messages from server to collector"
    },
    "v1SubscribeRequest": {
      "type": "object",
      "properties": {
        "subscription_id": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1Filter"
        },
        "include_existing": {
          "type": "boolean",
          "description": "Include historical events",
          "title": "Subscription options"
        },
        "lookback": {
          "type": "string",
          "title": "How far back to include"
        },
        "delivery_mode": {
          "$ref": "#/definitions/SubscribeRequestDeliveryMode"
        },
        "max_events_per_second": {
          "type": "integer",
          "format": "int32",
          "title": "Rate limiting"
        }
      },
      "title": "SubscribeRequest for event subscriptions"
    },
    "v1SummaryValue": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "sum": {
          "type": "number",
          "format": "double"
        },
        "quantiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Quantile"
          }
        }
      },
      "title": "SummaryValue for summary metrics"
    },
    "v1SystemMetric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "time_series": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MetricDataPoint"
          },
          "title": "Time series data if requested"
        }
      },
      "title": "SystemMetric represents a system metric"
    },
    "v1TapioGetMetricsResponse": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SystemMetric"
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "TapioGetMetricsResponse returns system metrics"
    },
    "v1TapioServiceInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "build_commit": {
          "type": "string"
        },
        "build_time": {
          "type": "string",
          "format": "date-time"
        },
        "supported_features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Capabilities"
        },
        "enabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "correlation_engines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limits": {
          "$ref": "#/definitions/v1ServiceLimits",
          "title": "Limits and quotas"
        },
        "api_versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "API versions"
        }
      },
      "title": "TapioServiceInfo provides service capabilities"
    },
    "v1TapioStreamEventsRequest": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/v1Event",
          "title": "Send events to the server"
        },
        "batch": {
          "$ref": "#/definitions/v1EventBatch"
        },
        "control": {
          "$ref": "#/definitions/v1StreamControl",
          "title": "Control messages"
        },
        "subscribe": {
          "$ref": "#/definitions/v1SubscribeRequest",
          "title": "Subscription filters"
        }
      },
      "title": "TapioStreamEventsRequest for bidirectional streaming"
    },
    "v1TapioStreamEventsResponse": {
      "type": "object",
      "properties": {
        "ack": {
          "$ref": "#/definitions/v1EventAck",
          "title": "Acknowledgment of received events"
        },
        "correlation": {
          "$ref": "#/definitions/v1Correlation",
          "title": "Real-time correlation findings"
        },
        "semantic_group": {
          "$ref": "#/definitions/v1SemanticGroup",
          "title": "Semantic group updates"
        },
        "control": {
          "$ref": "#/definitions/v1StreamControlResponse",
          "title": "Stream control response"
        },
        "error": {
          "$ref": "#/definitions/v1Error",
          "title": "Error information"
        }
      },
      "title": "TapioStreamEventsResponse from the server"
    },
    "v1TimeRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "TimeRange represents a time interval"
    },
    "v1Trace": {
      "type": "object",
      "properties": {
        "trace_id": {
          "type": "string"
        },
        "root_span_id": {
          "type": "string"
        },
        "spans": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Span"
          },
          "title": "All spans in this trace"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "title": "Trace metadata"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServiceInfo"
          },
          "title": "Service map for this trace"
        },
        "status": {
          "$ref": "#/definitions/v1TraceStatus",
          "title": "Overall trace status"
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ResourceInfo"
          },
          "title": "Resource information"
        }
      },
      "title": "Trace represents a distributed trace"
    },
    "v1TraceQuery": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/v1Filter"
        },
        "min_duration": {
          "type": "string",
          "title": "Trace-specific filters"
        },
        "max_duration": {
          "type": "string"
        },
        "errors_only": {
          "type": "boolean"
        },
        "root_service": {
          "type": "string"
        },
        "involved_services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "include_spans": {
          "type": "boolean",
          "title": "Include options"
        },
        "include_metrics": {
          "type": "boolean"
        },
        "include_logs": {
          "type": "boolean"
        }
      },
      "title": "TraceQuery for querying traces"
    },
    "v1TraceStatus": {
      "type": "object",
      "properties": {
        "health": {
          "$ref": "#/definitions/v1TraceStatusHealthStatus"
        },
        "error_count": {
          "type": "integer",
          "format": "int32"
        },
        "total_spans": {
          "type": "integer",
          "format": "int32"
        },
        "error_messages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "TraceStatus represents overall trace health"
    },
    "v1TraceStatusHealthStatus": {
      "type": "string",
      "enum": [
        "HEALTH_STATUS_UNSPECIFIED",
        "HEALTH_STATUS_HEALTHY",
        "HEALTH_STATUS_DEGRADED",
        "HEALTH_STATUS_ERROR"
      ],
      "default": "HEALTH_STATUS_UNSPECIFIED"
    },
    "v1TraceTimeline": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TraceTimelineEntry"
          }
        },
        "start_time": {
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "services": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ServiceInfo"
          }
        }
      },
      "title": "TraceTimeline provides a timeline view of traces"
    },
    "v1TraceTimelineEntry": {
      "type": "object",
      "properties": {
        "trace_id": {
          "type": "string"
        },
        "start_time": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "string"
        },
        "root_operation": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1TraceStatus"
        },
        "involved_services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "TraceTimelineEntry represents a trace in the timeline"
    },
    "v1UnregisterCollectorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "unregistered_at": {
          "type": "string",
          "format": "date-time"
        },
        "pending_events_dropped": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "UnregisterCollectorResponse confirms removal"
    },
    "v1UpdateConfigResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "applied_config": {
          "$ref": "#/definitions/v1CollectorConfig"
        },
        "new_etag": {
          "type": "string"
        },
        "validation_errors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConfigValidationError"
          }
        }
      },
      "title": "UpdateConfigResponse confirms configuration update"
    },
    "v1Visualization": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "\"timeline\", \"graph\", \"heatmap\", etc."
        },
        "title": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Visualization hints for UI rendering"
    }
  }
}
