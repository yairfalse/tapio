{{- if .Values.nodeAgent.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "tapio.fullname" . }}-node-agent
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    {{- include "tapio.nodeAgent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "tapio.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: node-agent
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        {{- include "tapio.nodeAgent.labels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tapio.serviceAccountName" . }}
      {{- if .Values.nodeAgent.priorityClassName }}
      priorityClassName: {{ .Values.nodeAgent.priorityClassName }}
      {{- end }}
      hostPID: true
      hostNetwork: true
      containers:
        - name: ebpf-collector
          image: "{{ .Values.nodeAgent.image.repository }}:{{ .Values.nodeAgent.image.tag }}"
          imagePullPolicy: {{ .Values.nodeAgent.image.pullPolicy }}
          command:
            - /tapio
            - node-agent
            - --config=/config/tapio.yaml
            - --server={{ include "tapio.fullname" . }}-server:{{ .Values.server.service.port }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.development.debug }}
            - name: DEBUG
              value: "true"
            {{- end }}
            {{- if .Values.development.disableEBPF }}
            - name: DISABLE_EBPF
              value: "true"
            {{- end }}
          securityContext:
            {{- toYaml .Values.nodeAgent.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.nodeAgent.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: sys
              mountPath: /sys
              readOnly: true
            - name: modules
              mountPath: /lib/modules
              readOnly: true
            - name: debugfs
              mountPath: /sys/kernel/debug
            - name: cgroup
              mountPath: /sys/fs/cgroup
              readOnly: true
            - name: bpffs
              mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- with .Values.nodeAgent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeAgent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "tapio.fullname" . }}-config
        - name: sys
          hostPath:
            path: /sys
        - name: modules
          hostPath:
            path: /lib/modules
        - name: debugfs
          hostPath:
            path: /sys/kernel/debug
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: bpffs
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
{{- end }}