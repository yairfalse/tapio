apiVersion: v1
kind: Namespace
metadata:
  name: tapio-system
  labels:
    name: tapio-system
    app.kubernetes.io/name: tapio
    app.kubernetes.io/part-of: tapio
    app.kubernetes.io/managed-by: kubectl
    # Pod Security Standards
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged  
    pod-security.kubernetes.io/warn: privileged
  annotations:
    # Description
    kubernetes.io/description: "Tapio observability platform namespace"
    
    # Resource quotas and limits can be applied here
    # scheduler.alpha.kubernetes.io/node-selector: "tapio=enabled"
---
# ResourceQuota for the namespace (optional)
apiVersion: v1
kind: ResourceQuota
metadata:
  name: tapio-resource-quota
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio
    app.kubernetes.io/component: resource-quota
    app.kubernetes.io/part-of: tapio
spec:
  hard:
    # Compute resources
    requests.cpu: "2"      # Total CPU requests
    requests.memory: "2Gi" # Total memory requests
    limits.cpu: "4"        # Total CPU limits  
    limits.memory: "4Gi"   # Total memory limits
    
    # Object counts
    pods: "100"            # Maximum number of pods
    services: "10"         # Maximum number of services
    secrets: "10"          # Maximum number of secrets
    configmaps: "10"       # Maximum number of configmaps
    
    # Storage
    requests.storage: "10Gi"  # Total storage requests

---
# NetworkPolicy for the namespace (optional)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-network-policy
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio
    app.kubernetes.io/component: network-policy
    app.kubernetes.io/part-of: tapio
spec:
  podSelector: {}  # Apply to all pods in namespace
  policyTypes:
    - Ingress
    - Egress
  
  # Ingress rules
  ingress:
    # Allow traffic from other tapio components
    - from:
        - namespaceSelector:
            matchLabels:
              name: tapio-system
    
    # Allow traffic from monitoring namespace (Prometheus, etc.)
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8081   # Collector metrics
        - protocol: TCP
          port: 9091   # Server metrics
    
    # Allow traffic from kube-system for kubelet health checks
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: TCP
          port: 8081   # Health checks
  
  # Egress rules
  egress:
    # Allow traffic to other tapio components
    - to:
        - namespaceSelector:
            matchLabels:
              name: tapio-system
    
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    
    # Allow access to Kubernetes API
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 6443
    
    # Allow access to external services (if needed)
    # - to: []
    #   ports:
    #     - protocol: TCP
    #       port: 443