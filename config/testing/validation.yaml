# Production Testing and Validation Configuration

# General validation settings
validation:
  enabled: true
  test_timeout: 30m
  parallel_tests: 4
  fail_fast: false
  retry_attempts: 3
  retry_delay: 10s

  # Test suite configurations
  functional_tests:
    enabled: true
    timeout: 10m
    parallel: true
    tests:
      - health
      - api
      - core-functionality
    environment:
      TAPIO_SERVER_URL: "http://tapio-server:8080"
      TAPIO_AGENT_URL: "http://tapio-agent:8081"
    setup:
      - "kubectl wait --for=condition=Ready pods -l app=tapio-server --timeout=300s"
      - "kubectl wait --for=condition=Ready pods -l app=tapio-agent --timeout=300s"
    teardown:
      - "kubectl logs -l app=tapio-server --tail=100 > /tmp/functional-test-logs.txt"

  performance_tests:
    enabled: true
    timeout: 20m
    parallel: false
    tests:
      - load
      - stress
      - endurance
    environment:
      LOAD_DURATION: "300s"
      CONCURRENT_USERS: "100"
      TARGET_RPS: "1000"
    setup:
      - "kubectl apply -f tests/performance/load-generator.yaml"
    teardown:
      - "kubectl delete -f tests/performance/load-generator.yaml"

  security_tests:
    enabled: true
    timeout: 15m
    parallel: true
    tests:
      - auth
      - tls
      - input-validation
      - vulnerability-scan
    environment:
      SECURITY_SCANNER: "trivy"
      SCAN_SEVERITY: "HIGH,CRITICAL"
    setup:
      - "kubectl apply -f tests/security/scanner.yaml"
    teardown:
      - "kubectl delete -f tests/security/scanner.yaml"

  integration_tests:
    enabled: true
    timeout: 15m
    parallel: false
    tests:
      - k8s-integration
      - ebpf-integration
      - prometheus-integration
    environment:
      K8S_VERSION: "1.28"
      EBPF_ENABLED: "true"
    setup:
      - "kubectl apply -f tests/integration/test-resources.yaml"
    teardown:
      - "kubectl delete -f tests/integration/test-resources.yaml"

  e2e_tests:
    enabled: true
    timeout: 25m
    parallel: false
    tests:
      - full-workflow
      - user-scenarios
      - disaster-recovery
    environment:
      E2E_ENVIRONMENT: "staging"
      USER_SCENARIOS: "developer,devops,security"
    setup:
      - "kubectl apply -f tests/e2e/test-environment.yaml"
    teardown:
      - "kubectl delete -f tests/e2e/test-environment.yaml"

  # Performance criteria
  performance:
    max_latency_p99: 10ms
    min_throughput: 10000
    max_error_rate: 0.01
    max_cpu_usage: 0.8
    max_memory_usage: 0.9
    max_response_time: 2s
    event_processing_rate: 50000

  # Security criteria
  security:
    require_tls: true
    require_auth: true
    max_failed_logins: 5
    require_audit_log: true
    blocked_vulnerabilities:
      - "CVE-2023-*"
      - "HIGH"
      - "CRITICAL"
    required_headers:
      - "X-Frame-Options"
      - "X-Content-Type-Options"
      - "Strict-Transport-Security"
    encryption_required: true

  # Quality criteria
  quality:
    min_code_coverage: 0.8
    max_cyclomatic_complexity: 15
    min_signal_to_noise: 0.95
    max_false_positives: 0.02
    min_correlation_accuracy: 0.98
    required_documentation: true

  # Reporting configuration
  reporting:
    enabled: true
    format: "json"
    output_path: "/tmp/test-results"
    slack_webhook: "${SLACK_WEBHOOK_URL}"
    
    email:
      enabled: false
      recipients:
        - "team@company.com"
      subject: "Tapio Production Test Results"
      template: "test-results-email.html"
    
    dashboard:
      enabled: true
      url: "http://grafana:3000"
      api_key: "${GRAFANA_API_KEY}"

# Test automation configuration
automation:
  enabled: true
  default_timeout: 60m
  retry_attempts: 3
  retry_delay: 30s

  # Scheduling configuration
  scheduling:
    enabled: true
    cron_expressions:
      nightly: "0 2 * * *"           # Every night at 2 AM
      smoke: "*/30 * * * *"          # Every 30 minutes
      performance: "0 4 * * 1,3,5"   # Mon, Wed, Fri at 4 AM
      security: "0 6 * * 1"          # Every Monday at 6 AM
      integration: "0 0 * * 0"       # Every Sunday at midnight
    trigger_on_deploy: true
    trigger_on_commit: false
    min_interval: 5m
    max_concurrent: 3
    priorities:
      smoke: 1
      functional: 2
      security: 3
      integration: 4
      performance: 5
      e2e: 6
    dependencies:
      integration:
        - functional
      performance:
        - integration
      e2e:
        - performance

  # Pipeline configuration
  pipeline:
    parallel_execution: true
    fail_fast: false
    
    stages:
      - name: smoke
        test_suites:
          - functional
        environment: staging
        parallel: true
        timeout: 10m
        prerequisites: []
        on_success:
          - "echo 'Smoke tests passed'"
        on_failure:
          - "echo 'Smoke tests failed'"
          - "kubectl describe pods -l app=tapio"
        gates:
          - name: basic_health
            type: health
            threshold: 1.0
            operator: ">="
            metric: health_score
            required: true

      - name: integration
        test_suites:
          - integration
          - security
        environment: staging
        parallel: true
        timeout: 20m
        prerequisites:
          - smoke
        gates:
          - name: security_scan
            type: security
            threshold: 0.0
            operator: "=="
            metric: high_vulnerabilities
            required: true

      - name: performance
        test_suites:
          - performance
        environment: staging
        parallel: false
        timeout: 30m
        prerequisites:
          - integration
        gates:
          - name: performance_threshold
            type: performance
            threshold: 2000.0
            operator: "<="
            metric: response_time_p99
            required: true

      - name: e2e
        test_suites:
          - e2e
        environment: production
        parallel: false
        timeout: 45m
        prerequisites:
          - performance
        gates:
          - name: end_to_end
            type: functional
            threshold: 0.98
            operator: ">="
            metric: success_rate
            required: true

    rollback:
      enabled: true
      automatic: true
      timeout: 10m
      triggers:
        - security_failure
        - performance_degradation
        - functional_failure
      strategy: graceful

    artifacts:
      enabled: true
      types:
        - logs
        - reports
        - screenshots
        - metrics
      retention: 30d
      storage: local
      compression: true
      encryption: false

  # Notification configuration
  notifications:
    enabled: true
    
    channels:
      slack:
        type: slack
        enabled: true
        events:
          - test_started
          - test_completed
          - test_failed
          - quality_gate_failed
        config:
          webhook_url: "${SLACK_WEBHOOK_URL}"
          channel: "#tapio-tests"
          username: "Tapio Test Bot"
      
      email:
        type: email
        enabled: false
        events:
          - test_failed
          - quality_gate_failed
        config:
          smtp_server: "smtp.company.com"
          smtp_port: "587"
          username: "${SMTP_USERNAME}"
          password: "${SMTP_PASSWORD}"
          from: "tapio-tests@company.com"
          to: "team@company.com"
      
      webhook:
        type: webhook
        enabled: false
        events:
          - test_completed
        config:
          url: "https://api.company.com/webhooks/tapio-tests"
          method: "POST"
          headers:
            Authorization: "Bearer ${WEBHOOK_TOKEN}"

    templates:
      test_started: |
        🚀 **Tapio Test Pipeline Started**
        
        **Trigger**: {{.Trigger.Type}}
        **Environment**: {{.Environment}}
        **Stages**: {{.StageCount}}
        **Started**: {{.StartTime}}
      
      test_completed: |
        ✅ **Tapio Test Pipeline Completed**
        
        **Status**: {{.Status}}
        **Duration**: {{.Duration}}
        **Tests Passed**: {{.TestsPassed}}/{{.TestsTotal}}
        **Quality Gates**: {{.QualityGatesPassed}}/{{.QualityGatesTotal}}
      
      test_failed: |
        ❌ **Tapio Test Pipeline Failed**
        
        **Status**: {{.Status}}
        **Error**: {{.ErrorMessage}}
        **Duration**: {{.Duration}}
        **Failed Stage**: {{.FailedStage}}

    filters:
      severity:
        - error
        - warning
      test_suites:
        - functional
        - security
        - performance
      environments:
        - staging
        - production
      time_window: "business_hours"

  # Quality gates configuration
  quality_gates:
    enabled: true
    block_deployment: true
    require_approval: false
    
    gates:
      code_coverage:
        name: "Code Coverage"
        type: coverage
        threshold: 80.0
        operator: ">="
        metric: coverage_percentage
        required: true
        environment: all
        conditions:
          branch_coverage: ">=75"
          line_coverage: ">=80"
      
      performance:
        name: "Performance"
        type: performance
        threshold: 2000.0
        operator: "<="
        metric: response_time_p99
        required: true
        environment: staging
        conditions:
          throughput: ">=10000"
          error_rate: "<=0.01"
      
      security:
        name: "Security"
        type: security
        threshold: 0.0
        operator: "=="
        metric: high_vulnerabilities
        required: true
        environment: all
        conditions:
          critical_vulns: "==0"
          high_vulns: "==0"
      
      reliability:
        name: "Reliability"
        type: reliability
        threshold: 99.9
        operator: ">="
        metric: uptime_percentage
        required: true
        environment: production
        conditions:
          mtbf: ">=168h"  # 1 week
          mttr: "<=30m"

    failure_thresholds:
      functional: 0.05    # 5% failure rate
      performance: 0.02   # 2% failure rate
      security: 0.0       # 0% failure rate
      integration: 0.03   # 3% failure rate
      e2e: 0.01           # 1% failure rate

  # Environment configurations
  environments:
    development:
      name: development
      type: dev
      endpoint: "http://localhost:8080"
      credentials: "dev-credentials"
      setup:
        - "docker-compose up -d"
      teardown:
        - "docker-compose down"
      resources:
        cpu: "2"
        memory: "4Gi"
        storage: "10Gi"
        network: "bridge"
      isolation: false

    staging:
      name: staging
      type: staging
      endpoint: "https://staging.tapio.example.com"
      credentials: "staging-credentials"
      setup:
        - "kubectl config use-context staging"
        - "kubectl apply -f deploy/staging/"
      teardown:
        - "kubectl delete -f deploy/staging/"
      resources:
        cpu: "4"
        memory: "8Gi"
        storage: "50Gi"
        network: "cluster"
      isolation: true

    production:
      name: production
      type: production
      endpoint: "https://tapio.example.com"
      credentials: "production-credentials"
      setup:
        - "kubectl config use-context production"
        - "echo 'Production environment ready'"
      teardown:
        - "echo 'Production environment preserved'"
      resources:
        cpu: "8"
        memory: "16Gi"
        storage: "100Gi"
        network: "cluster"
      isolation: true