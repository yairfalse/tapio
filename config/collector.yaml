# Tapio Collector Configuration
# This configuration defines how the lightweight collector operates in DaemonSet mode

# Collector general settings
collector:
  # List of collectors to enable
  enabled_collectors:
    - "ebpf"      # eBPF kernel-level monitoring
    - "k8s"       # Kubernetes API events
    - "systemd"   # systemd service monitoring
  
  # Sampling rate (0.0 to 1.0) - 1.0 means collect all events
  sampling_rate: 1.0
  
  # Maximum events per second to process (rate limiting)
  max_events_per_sec: 10000
  
  # Event buffer size for each collector
  buffer_size: 10000

# gRPC configuration for server communication
grpc:
  # Server endpoints (can specify multiple for HA)
  server_endpoints:
    - "tapio-server:9090"
    # - "tapio-server-backup:9090"
  
  # TLS settings
  tls_enabled: false  # Set to true in production
  # tls_cert_file: "/etc/tapio/certs/client.crt"
  # tls_key_file: "/etc/tapio/certs/client.key"
  # tls_ca_file: "/etc/tapio/certs/ca.crt"
  
  # Batching configuration
  max_batch_size: 100
  batch_timeout: "100ms"
  
  # Connection reliability
  reconnect_enabled: true
  max_reconnect_attempts: 10
  reconnect_backoff: "5s"
  
  # Compression (options: none, gzip, lz4, zstd, snappy)
  compression: "lz4"

# Resource limits (DaemonSet pattern - keep low)
resources:
  max_memory_mb: 100   # 100MB memory limit
  max_cpu_milli: 10    # 1% CPU limit (10 milli-cores)

# Event processing pipeline
pipeline:
  enable_filtering: true
  enable_transformation: true
  
  # Filter configuration
  filter_config:
    min_severity: "low"  # Only process events >= this severity
    # include_categories: ["network", "memory", "kubernetes"]
    # exclude_categories: ["debug"]
  
  # Transformation configuration  
  transformer_config:
    enrich_environment: true
    enrich_labels: true
    custom_labels:
      collector_version: "1.0.0"
      environment: "production"

# Collector-specific configurations
collectors:
  # eBPF collector configuration
  ebpf:
    enabled: true
    
    # What to monitor
    enable_network: true
    enable_memory: true
    enable_process: true
    enable_filesystem: false  # Can be resource intensive
    
    # eBPF-specific settings
    kernel_buffer_size: 8192   # Ring buffer size
    user_buffer_size: 1024     # User-space buffer
    sample_frequency: 100      # Hz
    
    # Performance tuning
    batch_events: true
    batch_size: 50
    
    # Filtering (applied in kernel for efficiency)
    network_filter:
      exclude_loopback: true
      exclude_local: false
      min_packet_size: 64
    
    memory_filter:
      track_allocations: true
      track_frees: true
      min_allocation_size: 4096  # Track allocations >= 4KB
    
    process_filter:
      track_forks: true
      track_execs: true
      exclude_kernel_threads: true
  
  # Kubernetes collector configuration
  k8s:
    enabled: true
    
    # Connection settings
    in_cluster: true           # Use in-cluster config when running in pod
    # kube_config: "/etc/kubeconfig"  # Path to kubeconfig if not in-cluster
    
    # What to watch
    namespace: ""              # Empty means all namespaces
    watch_pods: true
    watch_deployments: true
    watch_services: true
    watch_nodes: true
    watch_events: true         # Kubernetes events
    
    # Performance settings
    watch_timeout: "30s"
    retry_backoff: "5s"
    max_retries: 3
    
    # Filtering
    exclude_system_namespaces: true
    system_namespaces:
      - "kube-system"
      - "kube-public"
      - "kube-node-lease"
    
    # Event filtering
    include_event_types:
      - "Warning"
      - "Normal"
    
    resource_version_strategy: "latest"
  
  # systemd collector configuration  
  systemd:
    enabled: true
    
    # What to monitor
    monitor_services: true
    monitor_sockets: false     # Usually not needed
    monitor_timers: false      # Usually not needed
    
    # Service filtering
    exclude_system: true       # Exclude low-level system services
    service_filter:            # Only monitor these services (empty = all)
      # - "kubelet"
      # - "docker"
      # - "containerd"
    
    # Performance settings
    poll_interval: "30s"       # How often to check service status
    
    # What events to generate
    track_state_changes: true
    track_failures: true
    track_restarts: true
    track_resource_usage: false  # Can be expensive

# Logging configuration
logging:
  level: "info"              # debug, info, warn, error
  format: "json"             # json, text
  output: "stdout"           # stdout, stderr, file
  # file_path: "/var/log/tapio/collector.log"

# Health and monitoring
health:
  # Health check endpoint configuration
  enabled: true
  bind_address: "0.0.0.0"
  port: 8081
  path: "/healthz"
  
  # Readiness check
  readiness_path: "/readyz"
  
  # Metrics endpoint (Prometheus format)
  metrics_enabled: true
  metrics_path: "/metrics"

# Development and debugging
development:
  debug: false
  disable_ebpf: false        # Useful for testing without eBPF
  mock_events: false         # Generate mock events for testing
  profile_enabled: false     # Enable pprof endpoints
  
# Security settings
security:
  # Run with minimal privileges
  drop_capabilities: true
  capabilities_keep:
    - "SYS_ADMIN"            # Required for eBPF
    - "NET_ADMIN"            # Required for network monitoring
  
  # Seccomp and AppArmor
  enable_seccomp: true
  enable_apparmor: false
  
  # File permissions
  umask: "0077"