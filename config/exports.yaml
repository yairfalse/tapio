# Tapio Export Plugin System Configuration
# This file configures the export plugins and routing rules

# Global export settings
export:
  enabled: true
  worker_pool:
    size: 4
    max_queue_size: 1000
    retry_attempts: 3
    retry_delay: 5s
  
  # Health monitoring
  health_check:
    interval: 30s
    timeout: 10s
    circuit_breaker:
      failure_threshold: 5
      reset_timeout: 60s

# Plugin configurations
plugins:
  # CLI Export Plugin - for local file exports
  cli:
    enabled: true
    config:
      output_directory: "./exports"
      file_prefix: "tapio"
      max_file_size: 104857600  # 100MB
      rotate_files: true
      retention_days: 7
      pretty_print: true
      compress_output: false
      include_timestamp: true
      json_indent: "  "
      yaml_indent: 2
      csv_delimiter: ","
      markdown_template: "default"

  # OpenTelemetry Export Plugin
  otel:
    enabled: true
    config:
      endpoint: "${OTEL_EXPORTER_OTLP_ENDPOINT:-localhost:4317}"
      protocol: "grpc"
      headers:
        x-api-key: "${OTEL_API_KEY}"
      timeout: 30s
      tls_enabled: false
      insecure_skip_verify: true
      service_name: "tapio"
      service_version: "1.0.0"
      environment: "${ENVIRONMENT:-production}"
      batch_size: 100
      batch_timeout: 5s
      max_queue_size: 1000
      resource_attributes:
        cluster.name: "${CLUSTER_NAME}"
        deployment.environment: "${ENVIRONMENT}"
      enable_traces: true
      enable_metrics: true
      enable_logs: true

  # Prometheus Export Plugin
  prometheus:
    enabled: true
    config:
      push_gateway_url: "${PROMETHEUS_PUSHGATEWAY_URL:-http://localhost:9091}"
      job: "tapio"
      instance: "${HOSTNAME:-tapio-1}"
      push_interval: 30s
      metric_prefix: "tapio_"
      include_timestamp: true
      labels:
        environment: "${ENVIRONMENT:-production}"
        cluster: "${CLUSTER_NAME}"
      batch_size: 1000
      flush_interval: 10s
      request_timeout: 30s
      grouping_key:
        datacenter: "${DATACENTER:-default}"
      delete_on_shutdown: false
      basic_auth:
        username: "${PROMETHEUS_USERNAME}"
        password: "${PROMETHEUS_PASSWORD}"

  # Webhook Export Plugin (future)
  webhook:
    enabled: false
    config:
      url: "${WEBHOOK_URL}"
      method: "POST"
      headers:
        Content-Type: "application/json"
        Authorization: "Bearer ${WEBHOOK_TOKEN}"
      timeout: 30s
      retry_attempts: 3
      retry_delay: 5s

# Export routing rules
routes:
  # Route all metrics to Prometheus
  - id: "metrics-to-prometheus"
    name: "Metrics to Prometheus"
    enabled: true
    plugin: "prometheus"
    priority: 100
    pattern:
      data_type: ["metrics"]
      format: ["prometheus"]
    transform:
      - "add_timestamp"
      - "normalize_labels"

  # Route all events to OpenTelemetry
  - id: "events-to-otel"
    name: "Events to OpenTelemetry"
    enabled: true
    plugin: "otel"
    priority: 90
    pattern:
      data_type: ["events"]
      format: ["otel"]

  # Route drift reports to multiple destinations
  - id: "drift-reports-multi"
    name: "Drift Reports Multi-Export"
    enabled: true
    plugin: "multi-export"
    priority: 100
    pattern:
      data_type: ["drift_report"]
      format: ["json", "yaml"]
    targets:
      - "cli"
      - "otel"

  # Route critical events to webhook (when enabled)
  - id: "critical-events-webhook"
    name: "Critical Events to Webhook"
    enabled: false
    plugin: "webhook"
    priority: 100
    pattern:
      data_type: ["events"]
      tags:
        severity: "critical|high"
      expression: ".*critical.*"

  # Route pattern results to CLI for debugging
  - id: "patterns-to-cli"
    name: "Pattern Results to CLI"
    enabled: true
    plugin: "cli"
    priority: 50
    pattern:
      data_type: ["pattern_result"]
      format: ["json", "markdown"]
    transform:
      - "pretty_print"

  # Route auto-fix results to all destinations
  - id: "autofix-results-all"
    name: "AutoFix Results to All"
    enabled: true
    plugin: "multi-export"
    priority: 100
    pattern:
      data_type: ["autofix"]
    targets:
      - "cli"
      - "otel"
      - "prometheus"

  # Default route for unmatched data
  - id: "default-route"
    name: "Default Export Route"
    enabled: true
    plugin: "cli"
    priority: 0
    pattern: {}  # Matches everything
    transform:
      - "add_metadata"

# Data transformers
transformers:
  add_timestamp:
    type: "add_field"
    field: "export_timestamp"
    value: "${NOW}"

  normalize_labels:
    type: "normalize"
    target: "labels"
    rules:
      - from: "kubernetes.io/(.+)"
        to: "k8s_$1"
      - from: "[^a-zA-Z0-9_]"
        to: "_"

  pretty_print:
    type: "format"
    indent: true
    sort_keys: true

  add_metadata:
    type: "add_fields"
    fields:
      export_version: "1.0"
      export_source: "tapio"

# Multi-export plugin configuration
multi_export:
  parallel: true
  fail_fast: false
  timeout: 60s

# Performance settings
performance:
  max_concurrent_exports: 10
  export_timeout: 30s
  memory_limit: "50MB"
  
  # Batching for high-throughput scenarios
  batching:
    enabled: true
    max_batch_size: 1000
    max_batch_wait: 5s
    
  # Rate limiting
  rate_limit:
    enabled: true
    exports_per_second: 100
    burst_size: 200

# Security settings
security:
  # Encryption for sensitive data
  encryption:
    enabled: false
    algorithm: "AES-256-GCM"
    key_source: "env:EXPORT_ENCRYPTION_KEY"
    
  # Data masking
  masking:
    enabled: true
    patterns:
      - field: "password"
        mask: "****"
      - field: "token"
        mask: "[REDACTED]"
      - field: "*.secret"
        mask: "[REDACTED]"

# Observability
observability:
  # Export plugin metrics
  metrics:
    enabled: true
    export_to: "prometheus"
    interval: 30s
    
  # Export plugin traces
  traces:
    enabled: true
    export_to: "otel"
    sample_rate: 0.1
    
  # Export plugin logs
  logs:
    enabled: true
    level: "info"
    format: "json"

# Hot reload settings
hot_reload:
  enabled: true
  watch_interval: 10s
  validation: "strict"

# Example environment variables that should be set:
# OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
# OTEL_API_KEY=your-api-key
# PROMETHEUS_PUSHGATEWAY_URL=http://prometheus-pushgateway:9091
# PROMETHEUS_USERNAME=admin
# PROMETHEUS_PASSWORD=secret
# WEBHOOK_URL=https://your-webhook-endpoint.com/webhook
# WEBHOOK_TOKEN=your-webhook-token
# CLUSTER_NAME=production-cluster
# ENVIRONMENT=production
# DATACENTER=us-west-2
# HOSTNAME=tapio-pod-xyz