---
# Default deny-all policy for tapio-system namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-default-deny
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-default-deny
    app.kubernetes.io/part-of: tapio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow DNS resolution
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-allow-dns
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-allow-dns
    app.kubernetes.io/part-of: tapio
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# Collector network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-collector-policy
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-collector-policy
    app.kubernetes.io/part-of: tapio
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: tapio-collector
      app.kubernetes.io/component: collector
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow metrics scraping from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090  # Prometheus metrics
    - protocol: TCP
      port: 8080  # Health checks
  
  # Allow OTEL traffic from sidecar
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-collector
    ports:
    - protocol: TCP
      port: 4317  # OTLP gRPC
    - protocol: TCP
      port: 4318  # OTLP HTTP
  
  egress:
  # Allow Kubernetes API access
  - to: []
    ports:
    - protocol: TCP
      port: 443  # Kubernetes API
    - protocol: TCP
      port: 6443  # Kubernetes API (alternative)
  
  # Allow OTEL collector communication
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-otel-collector
    ports:
    - protocol: TCP
      port: 4317
    - protocol: TCP
      port: 4318
  
  # Allow NATS communication
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-nats
    ports:
    - protocol: TCP
      port: 4222
  
  # Allow container runtime socket access (local)
  - to: []
    ports:
    - protocol: TCP
      port: 2375  # Docker
    - protocol: TCP
      port: 2376  # Docker TLS
---
# OTEL Collector network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-otel-collector-policy
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-otel-collector-policy
    app.kubernetes.io/part-of: tapio
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: tapio-otel-collector
      app.kubernetes.io/component: otel-collector
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow OTLP traffic from collectors
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-collector
    ports:
    - protocol: TCP
      port: 4317
    - protocol: TCP
      port: 4318
  
  # Allow Jaeger traffic
  - from: []
    ports:
    - protocol: TCP
      port: 14250  # Jaeger gRPC
    - protocol: TCP
      port: 14268  # Jaeger HTTP
  
  # Allow Zipkin traffic
  - from: []
    ports:
    - protocol: TCP
      port: 9411
  
  # Allow metrics scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8888
  
  # Allow health checks
  - from: []
    ports:
    - protocol: TCP
      port: 13133
  
  egress:
  # Allow Jaeger export
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 14250
  
  # Allow Prometheus export
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  
  # Allow Elasticsearch export
  - to:
    - namespaceSelector:
        matchLabels:
          name: logging
    ports:
    - protocol: TCP
      port: 9200
  
  # Allow NATS export
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-nats
    ports:
    - protocol: TCP
      port: 4222
---
# NATS network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-nats-policy
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-nats-policy
    app.kubernetes.io/part-of: tapio
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: tapio-nats
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow connections from collectors
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-collector
    ports:
    - protocol: TCP
      port: 4222
  
  # Allow connections from OTEL collectors
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-otel-collector
    ports:
    - protocol: TCP
      port: 4222
  
  # Allow connections from correlation service
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-correlation
    ports:
    - protocol: TCP
      port: 4222
  
  # Allow connections from transformer service
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-transformer
    ports:
    - protocol: TCP
      port: 4222
  
  # Allow cluster port for clustering
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-nats
    ports:
    - protocol: TCP
      port: 6222
  
  # Allow monitoring port
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8222
  
  egress:
  # Allow NATS clustering
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-nats
    ports:
    - protocol: TCP
      port: 6222
---
# Neo4j network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-neo4j-policy
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-neo4j-policy
    app.kubernetes.io/part-of: tapio
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: tapio-neo4j
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow connections from correlation service
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-correlation
    ports:
    - protocol: TCP
      port: 7474  # HTTP
    - protocol: TCP
      port: 7687  # Bolt
  
  # Allow connections from API service
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-api
    ports:
    - protocol: TCP
      port: 7474
    - protocol: TCP
      port: 7687
  
  # Allow Neo4j cluster communication
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-neo4j
    ports:
    - protocol: TCP
      port: 5000   # Discovery
    - protocol: TCP
      port: 6000   # Transaction
    - protocol: TCP
      port: 7000   # Raft
  
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 2004  # Graphite metrics
  
  egress:
  # Allow Neo4j cluster communication
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: tapio-neo4j
    ports:
    - protocol: TCP
      port: 5000
    - protocol: TCP
      port: 6000
    - protocol: TCP
      port: 7000
---
# Allow ingress controller access to API services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-ingress-policy
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-ingress-policy
    app.kubernetes.io/part-of: tapio
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: tapio-api
  policyTypes:
  - Ingress
  
  ingress:
  # Allow ingress controller traffic
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080  # HTTP API
    - protocol: TCP
      port: 8443  # HTTPS API (if using TLS)
  
  # Allow internal service communication
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8080
---
# Allow monitoring namespace to scrape metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-monitoring-access
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-monitoring-access
    app.kubernetes.io/part-of: tapio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  
  ingress:
  # Allow Prometheus scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090  # Metrics
    - protocol: TCP
      port: 8888  # OTEL metrics
    - protocol: TCP
      port: 8080  # Health checks
---
# Allow communication between tapio services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-internal-communication
  namespace: tapio-system
  labels:
    app.kubernetes.io/name: tapio-internal-communication
    app.kubernetes.io/part-of: tapio
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow communication within tapio-system namespace
  - from:
    - podSelector: {}
  
  egress:
  # Allow communication within tapio-system namespace
  - to:
    - podSelector: {}