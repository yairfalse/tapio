// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/events.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event type enumerations
type EventCategory int32

const (
	EventCategory_CATEGORY_UNKNOWN        EventCategory = 0
	EventCategory_CATEGORY_NETWORK        EventCategory = 1
	EventCategory_CATEGORY_MEMORY         EventCategory = 2
	EventCategory_CATEGORY_CPU            EventCategory = 3
	EventCategory_CATEGORY_IO             EventCategory = 4
	EventCategory_CATEGORY_SYSTEM         EventCategory = 5
	EventCategory_CATEGORY_SECURITY       EventCategory = 6
	EventCategory_CATEGORY_APPLICATION    EventCategory = 7
	EventCategory_CATEGORY_INFRASTRUCTURE EventCategory = 8
	EventCategory_CATEGORY_OBSERVABILITY  EventCategory = 9
)

// Enum value maps for EventCategory.
var (
	EventCategory_name = map[int32]string{
		0: "CATEGORY_UNKNOWN",
		1: "CATEGORY_NETWORK",
		2: "CATEGORY_MEMORY",
		3: "CATEGORY_CPU",
		4: "CATEGORY_IO",
		5: "CATEGORY_SYSTEM",
		6: "CATEGORY_SECURITY",
		7: "CATEGORY_APPLICATION",
		8: "CATEGORY_INFRASTRUCTURE",
		9: "CATEGORY_OBSERVABILITY",
	}
	EventCategory_value = map[string]int32{
		"CATEGORY_UNKNOWN":        0,
		"CATEGORY_NETWORK":        1,
		"CATEGORY_MEMORY":         2,
		"CATEGORY_CPU":            3,
		"CATEGORY_IO":             4,
		"CATEGORY_SYSTEM":         5,
		"CATEGORY_SECURITY":       6,
		"CATEGORY_APPLICATION":    7,
		"CATEGORY_INFRASTRUCTURE": 8,
		"CATEGORY_OBSERVABILITY":  9,
	}
)

func (x EventCategory) Enum() *EventCategory {
	p := new(EventCategory)
	*p = x
	return p
}

func (x EventCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[0].Descriptor()
}

func (EventCategory) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[0]
}

func (x EventCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCategory.Descriptor instead.
func (EventCategory) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

type EventSeverity int32

const (
	EventSeverity_SEVERITY_UNKNOWN  EventSeverity = 0
	EventSeverity_SEVERITY_DEBUG    EventSeverity = 1
	EventSeverity_SEVERITY_INFO     EventSeverity = 2
	EventSeverity_SEVERITY_WARNING  EventSeverity = 3
	EventSeverity_SEVERITY_ERROR    EventSeverity = 4
	EventSeverity_SEVERITY_CRITICAL EventSeverity = 5
)

// Enum value maps for EventSeverity.
var (
	EventSeverity_name = map[int32]string{
		0: "SEVERITY_UNKNOWN",
		1: "SEVERITY_DEBUG",
		2: "SEVERITY_INFO",
		3: "SEVERITY_WARNING",
		4: "SEVERITY_ERROR",
		5: "SEVERITY_CRITICAL",
	}
	EventSeverity_value = map[string]int32{
		"SEVERITY_UNKNOWN":  0,
		"SEVERITY_DEBUG":    1,
		"SEVERITY_INFO":     2,
		"SEVERITY_WARNING":  3,
		"SEVERITY_ERROR":    4,
		"SEVERITY_CRITICAL": 5,
	}
)

func (x EventSeverity) Enum() *EventSeverity {
	p := new(EventSeverity)
	*p = x
	return p
}

func (x EventSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[1].Descriptor()
}

func (EventSeverity) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[1]
}

func (x EventSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventSeverity.Descriptor instead.
func (EventSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{1}
}

type EntityType int32

const (
	EntityType_ENTITY_UNKNOWN     EntityType = 0
	EntityType_ENTITY_PROCESS     EntityType = 1
	EntityType_ENTITY_THREAD      EntityType = 2
	EntityType_ENTITY_CONTAINER   EntityType = 3
	EntityType_ENTITY_POD         EntityType = 4
	EntityType_ENTITY_SERVICE     EntityType = 5
	EntityType_ENTITY_NODE        EntityType = 6
	EntityType_ENTITY_CLUSTER     EntityType = 7
	EntityType_ENTITY_NAMESPACE   EntityType = 8
	EntityType_ENTITY_DEPLOYMENT  EntityType = 9
	EntityType_ENTITY_DAEMONSET   EntityType = 10
	EntityType_ENTITY_STATEFULSET EntityType = 11
	EntityType_ENTITY_JOB         EntityType = 12
	EntityType_ENTITY_CRONJOB     EntityType = 13
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0:  "ENTITY_UNKNOWN",
		1:  "ENTITY_PROCESS",
		2:  "ENTITY_THREAD",
		3:  "ENTITY_CONTAINER",
		4:  "ENTITY_POD",
		5:  "ENTITY_SERVICE",
		6:  "ENTITY_NODE",
		7:  "ENTITY_CLUSTER",
		8:  "ENTITY_NAMESPACE",
		9:  "ENTITY_DEPLOYMENT",
		10: "ENTITY_DAEMONSET",
		11: "ENTITY_STATEFULSET",
		12: "ENTITY_JOB",
		13: "ENTITY_CRONJOB",
	}
	EntityType_value = map[string]int32{
		"ENTITY_UNKNOWN":     0,
		"ENTITY_PROCESS":     1,
		"ENTITY_THREAD":      2,
		"ENTITY_CONTAINER":   3,
		"ENTITY_POD":         4,
		"ENTITY_SERVICE":     5,
		"ENTITY_NODE":        6,
		"ENTITY_CLUSTER":     7,
		"ENTITY_NAMESPACE":   8,
		"ENTITY_DEPLOYMENT":  9,
		"ENTITY_DAEMONSET":   10,
		"ENTITY_STATEFULSET": 11,
		"ENTITY_JOB":         12,
		"ENTITY_CRONJOB":     13,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[2].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[2]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{2}
}

type CompressionType int32

const (
	CompressionType_COMPRESSION_NONE   CompressionType = 0
	CompressionType_COMPRESSION_GZIP   CompressionType = 1
	CompressionType_COMPRESSION_ZSTD   CompressionType = 2
	CompressionType_COMPRESSION_LZ4    CompressionType = 3
	CompressionType_COMPRESSION_SNAPPY CompressionType = 4
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "COMPRESSION_NONE",
		1: "COMPRESSION_GZIP",
		2: "COMPRESSION_ZSTD",
		3: "COMPRESSION_LZ4",
		4: "COMPRESSION_SNAPPY",
	}
	CompressionType_value = map[string]int32{
		"COMPRESSION_NONE":   0,
		"COMPRESSION_GZIP":   1,
		"COMPRESSION_ZSTD":   2,
		"COMPRESSION_LZ4":    3,
		"COMPRESSION_SNAPPY": 4,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[3].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[3]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{3}
}

// UnifiedEvent is the core message format for all Tapio events.
// It provides a universal representation for events from any source
// (eBPF, systemd, journald, Kubernetes, etc.) while maintaining
// efficient serialization and forward/backward compatibility.
type UnifiedEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this event (UUID format)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// When the event occurred
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Event metadata
	Metadata *EventMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Source information
	Source *EventSource `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// Entity this event relates to
	Entity *EntityContext `protobuf:"bytes,5,opt,name=entity,proto3" json:"entity,omitempty"`
	// Event-specific data - can be strongly typed or generic
	//
	// Types that are valid to be assigned to Data:
	//
	//	*UnifiedEvent_Network
	//	*UnifiedEvent_Memory
	//	*UnifiedEvent_Cpu
	//	*UnifiedEvent_Io
	//	*UnifiedEvent_System
	//	*UnifiedEvent_Process
	//	*UnifiedEvent_Container
	//	*UnifiedEvent_Kubernetes
	//	*UnifiedEvent_Log
	//	*UnifiedEvent_Metric
	//	*UnifiedEvent_Trace
	//	*UnifiedEvent_Generic
	//	*UnifiedEvent_Raw
	Data isUnifiedEvent_Data `protobuf_oneof:"data"`
	// Event attributes (key-value pairs)
	Attributes map[string]*AttributeValue `protobuf:"bytes,30,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Labels for filtering and grouping
	Labels map[string]string `protobuf:"bytes,31,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Correlation information
	Correlation *CorrelationContext `protobuf:"bytes,32,opt,name=correlation,proto3" json:"correlation,omitempty"`
	// Quality and confidence metadata
	Quality       *QualityMetadata `protobuf:"bytes,33,opt,name=quality,proto3" json:"quality,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnifiedEvent) Reset() {
	*x = UnifiedEvent{}
	mi := &file_proto_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnifiedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnifiedEvent) ProtoMessage() {}

func (x *UnifiedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnifiedEvent.ProtoReflect.Descriptor instead.
func (*UnifiedEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *UnifiedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnifiedEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UnifiedEvent) GetMetadata() *EventMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UnifiedEvent) GetSource() *EventSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *UnifiedEvent) GetEntity() *EntityContext {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UnifiedEvent) GetData() isUnifiedEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UnifiedEvent) GetNetwork() *NetworkEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Network); ok {
			return x.Network
		}
	}
	return nil
}

func (x *UnifiedEvent) GetMemory() *MemoryEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Memory); ok {
			return x.Memory
		}
	}
	return nil
}

func (x *UnifiedEvent) GetCpu() *CPUEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Cpu); ok {
			return x.Cpu
		}
	}
	return nil
}

func (x *UnifiedEvent) GetIo() *IOEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Io); ok {
			return x.Io
		}
	}
	return nil
}

func (x *UnifiedEvent) GetSystem() *SystemEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_System); ok {
			return x.System
		}
	}
	return nil
}

func (x *UnifiedEvent) GetProcess() *ProcessEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Process); ok {
			return x.Process
		}
	}
	return nil
}

func (x *UnifiedEvent) GetContainer() *ContainerEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Container); ok {
			return x.Container
		}
	}
	return nil
}

func (x *UnifiedEvent) GetKubernetes() *KubernetesEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Kubernetes); ok {
			return x.Kubernetes
		}
	}
	return nil
}

func (x *UnifiedEvent) GetLog() *LogEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Log); ok {
			return x.Log
		}
	}
	return nil
}

func (x *UnifiedEvent) GetMetric() *MetricEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Metric); ok {
			return x.Metric
		}
	}
	return nil
}

func (x *UnifiedEvent) GetTrace() *TraceEvent {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Trace); ok {
			return x.Trace
		}
	}
	return nil
}

func (x *UnifiedEvent) GetGeneric() *structpb.Struct {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Generic); ok {
			return x.Generic
		}
	}
	return nil
}

func (x *UnifiedEvent) GetRaw() []byte {
	if x != nil {
		if x, ok := x.Data.(*UnifiedEvent_Raw); ok {
			return x.Raw
		}
	}
	return nil
}

func (x *UnifiedEvent) GetAttributes() map[string]*AttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *UnifiedEvent) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UnifiedEvent) GetCorrelation() *CorrelationContext {
	if x != nil {
		return x.Correlation
	}
	return nil
}

func (x *UnifiedEvent) GetQuality() *QualityMetadata {
	if x != nil {
		return x.Quality
	}
	return nil
}

type isUnifiedEvent_Data interface {
	isUnifiedEvent_Data()
}

type UnifiedEvent_Network struct {
	// Strongly typed event data for known event types
	Network *NetworkEvent `protobuf:"bytes,10,opt,name=network,proto3,oneof"`
}

type UnifiedEvent_Memory struct {
	Memory *MemoryEvent `protobuf:"bytes,11,opt,name=memory,proto3,oneof"`
}

type UnifiedEvent_Cpu struct {
	Cpu *CPUEvent `protobuf:"bytes,12,opt,name=cpu,proto3,oneof"`
}

type UnifiedEvent_Io struct {
	Io *IOEvent `protobuf:"bytes,13,opt,name=io,proto3,oneof"`
}

type UnifiedEvent_System struct {
	System *SystemEvent `protobuf:"bytes,14,opt,name=system,proto3,oneof"`
}

type UnifiedEvent_Process struct {
	Process *ProcessEvent `protobuf:"bytes,15,opt,name=process,proto3,oneof"`
}

type UnifiedEvent_Container struct {
	Container *ContainerEvent `protobuf:"bytes,16,opt,name=container,proto3,oneof"`
}

type UnifiedEvent_Kubernetes struct {
	Kubernetes *KubernetesEvent `protobuf:"bytes,17,opt,name=kubernetes,proto3,oneof"`
}

type UnifiedEvent_Log struct {
	Log *LogEvent `protobuf:"bytes,18,opt,name=log,proto3,oneof"`
}

type UnifiedEvent_Metric struct {
	Metric *MetricEvent `protobuf:"bytes,19,opt,name=metric,proto3,oneof"`
}

type UnifiedEvent_Trace struct {
	Trace *TraceEvent `protobuf:"bytes,20,opt,name=trace,proto3,oneof"`
}

type UnifiedEvent_Generic struct {
	// Generic data for custom or unknown event types
	Generic *structpb.Struct `protobuf:"bytes,50,opt,name=generic,proto3,oneof"`
}

type UnifiedEvent_Raw struct {
	// Raw data for high-performance scenarios
	Raw []byte `protobuf:"bytes,51,opt,name=raw,proto3,oneof"`
}

func (*UnifiedEvent_Network) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Memory) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Cpu) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Io) isUnifiedEvent_Data() {}

func (*UnifiedEvent_System) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Process) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Container) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Kubernetes) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Log) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Metric) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Trace) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Generic) isUnifiedEvent_Data() {}

func (*UnifiedEvent_Raw) isUnifiedEvent_Data() {}

// EventMetadata contains event classification and routing information
type EventMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event type (e.g., "network.connection", "memory.allocation", "pod.created")
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Event category for high-level grouping
	Category EventCategory `protobuf:"varint,2,opt,name=category,proto3,enum=tapio.events.v1.EventCategory" json:"category,omitempty"`
	// Severity level
	Severity EventSeverity `protobuf:"varint,3,opt,name=severity,proto3,enum=tapio.events.v1.EventSeverity" json:"severity,omitempty"`
	// Priority for processing (higher = more important)
	Priority int32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	// Version of the event schema
	SchemaVersion string `protobuf:"bytes,5,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	// Whether this event should be persisted
	Persistent bool `protobuf:"varint,6,opt,name=persistent,proto3" json:"persistent,omitempty"`
	// TTL in seconds (0 = no expiration)
	TtlSeconds int64 `protobuf:"varint,7,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	// Routing hints for event processing
	RoutingKeys   []string `protobuf:"bytes,8,rep,name=routing_keys,json=routingKeys,proto3" json:"routing_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventMetadata) Reset() {
	*x = EventMetadata{}
	mi := &file_proto_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetadata) ProtoMessage() {}

func (x *EventMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetadata.ProtoReflect.Descriptor instead.
func (*EventMetadata) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventMetadata) GetCategory() EventCategory {
	if x != nil {
		return x.Category
	}
	return EventCategory_CATEGORY_UNKNOWN
}

func (x *EventMetadata) GetSeverity() EventSeverity {
	if x != nil {
		return x.Severity
	}
	return EventSeverity_SEVERITY_UNKNOWN
}

func (x *EventMetadata) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *EventMetadata) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *EventMetadata) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *EventMetadata) GetTtlSeconds() int64 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

func (x *EventMetadata) GetRoutingKeys() []string {
	if x != nil {
		return x.RoutingKeys
	}
	return nil
}

// EventSource identifies where an event originated
type EventSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source type (e.g., "ebpf", "systemd", "journald", "kubernetes")
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Specific collector or component name
	Collector string `protobuf:"bytes,2,opt,name=collector,proto3" json:"collector,omitempty"`
	// Node where event was collected
	Node string `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	// Cluster identifier
	Cluster string `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Version of the source/collector
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Additional source metadata
	Metadata      map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSource) Reset() {
	*x = EventSource{}
	mi := &file_proto_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSource) ProtoMessage() {}

func (x *EventSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSource.ProtoReflect.Descriptor instead.
func (*EventSource) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventSource) GetCollector() string {
	if x != nil {
		return x.Collector
	}
	return ""
}

func (x *EventSource) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *EventSource) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *EventSource) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EventSource) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// EntityContext identifies the entity (process, container, pod, etc.) associated with an event
type EntityContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity type
	Type EntityType `protobuf:"varint,1,opt,name=type,proto3,enum=tapio.events.v1.EntityType" json:"type,omitempty"`
	// Primary identifier for the entity
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace (for Kubernetes entities)
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Parent entity reference
	Parent *EntityReference `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
	// Process information (if applicable)
	Process *ProcessInfo `protobuf:"bytes,10,opt,name=process,proto3" json:"process,omitempty"`
	// Container information (if applicable)
	Container *ContainerInfo `protobuf:"bytes,11,opt,name=container,proto3" json:"container,omitempty"`
	// Pod information (if applicable)
	Pod *PodInfo `protobuf:"bytes,12,opt,name=pod,proto3" json:"pod,omitempty"`
	// Node information (if applicable)
	Node          *NodeInfo `protobuf:"bytes,13,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityContext) Reset() {
	*x = EntityContext{}
	mi := &file_proto_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityContext) ProtoMessage() {}

func (x *EntityContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityContext.ProtoReflect.Descriptor instead.
func (*EntityContext) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *EntityContext) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_ENTITY_UNKNOWN
}

func (x *EntityContext) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityContext) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityContext) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EntityContext) GetParent() *EntityReference {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *EntityContext) GetProcess() *ProcessInfo {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *EntityContext) GetContainer() *ContainerInfo {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *EntityContext) GetPod() *PodInfo {
	if x != nil {
		return x.Pod
	}
	return nil
}

func (x *EntityContext) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

// EntityReference is a lightweight reference to another entity
type EntityReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EntityType             `protobuf:"varint,1,opt,name=type,proto3,enum=tapio.events.v1.EntityType" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityReference) Reset() {
	*x = EntityReference{}
	mi := &file_proto_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityReference) ProtoMessage() {}

func (x *EntityReference) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityReference.ProtoReflect.Descriptor instead.
func (*EntityReference) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *EntityReference) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_ENTITY_UNKNOWN
}

func (x *EntityReference) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ProcessInfo contains process-specific information
type ProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          uint32                 `protobuf:"varint,2,opt,name=ppid,proto3" json:"ppid,omitempty"`
	Comm          string                 `protobuf:"bytes,3,opt,name=comm,proto3" json:"comm,omitempty"`
	Exe           string                 `protobuf:"bytes,4,opt,name=exe,proto3" json:"exe,omitempty"`
	Cwd           string                 `protobuf:"bytes,5,opt,name=cwd,proto3" json:"cwd,omitempty"`
	Args          []string               `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty"`
	Env           map[string]string      `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Uid           uint32                 `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid           uint32                 `protobuf:"varint,9,opt,name=gid,proto3" json:"gid,omitempty"`
	Cgroup        string                 `protobuf:"bytes,10,opt,name=cgroup,proto3" json:"cgroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_proto_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessInfo) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInfo) GetPpid() uint32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessInfo) GetComm() string {
	if x != nil {
		return x.Comm
	}
	return ""
}

func (x *ProcessInfo) GetExe() string {
	if x != nil {
		return x.Exe
	}
	return ""
}

func (x *ProcessInfo) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *ProcessInfo) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ProcessInfo) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ProcessInfo) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ProcessInfo) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *ProcessInfo) GetCgroup() string {
	if x != nil {
		return x.Cgroup
	}
	return ""
}

// ContainerInfo contains container-specific information
type ContainerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Runtime       string                 `protobuf:"bytes,4,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerInfo) Reset() {
	*x = ContainerInfo{}
	mi := &file_proto_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInfo) ProtoMessage() {}

func (x *ContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerInfo.ProtoReflect.Descriptor instead.
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{6}
}

func (x *ContainerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerInfo) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *ContainerInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// PodInfo contains Kubernetes pod information
type PodInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations   map[string]string      `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Containers    []*ContainerInfo       `protobuf:"bytes,6,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodInfo) Reset() {
	*x = PodInfo{}
	mi := &file_proto_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodInfo) ProtoMessage() {}

func (x *PodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodInfo.ProtoReflect.Descriptor instead.
func (*PodInfo) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{7}
}

func (x *PodInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PodInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PodInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PodInfo) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *PodInfo) GetContainers() []*ContainerInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

// NodeInfo contains node-level information
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid           string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	KernelVersion string                 `protobuf:"bytes,4,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	OsImage       string                 `protobuf:"bytes,5,opt,name=os_image,json=osImage,proto3" json:"os_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_proto_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{8}
}

func (x *NodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *NodeInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NodeInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *NodeInfo) GetOsImage() string {
	if x != nil {
		return x.OsImage
	}
	return ""
}

// CorrelationContext links related events together
type CorrelationContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Correlation ID linking related events
	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Trace ID for distributed tracing
	TraceId string `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// Span ID for distributed tracing
	SpanId string `protobuf:"bytes,3,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	// Parent span ID
	ParentSpanId string `protobuf:"bytes,4,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	// Causality chain (event IDs that led to this event)
	CausedBy []string `protobuf:"bytes,5,rep,name=caused_by,json=causedBy,proto3" json:"caused_by,omitempty"`
	// Related events
	RelatedEvents []string `protobuf:"bytes,6,rep,name=related_events,json=relatedEvents,proto3" json:"related_events,omitempty"`
	// Session or transaction ID
	SessionId string `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// User or request ID
	UserId        string `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CorrelationContext) Reset() {
	*x = CorrelationContext{}
	mi := &file_proto_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CorrelationContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrelationContext) ProtoMessage() {}

func (x *CorrelationContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrelationContext.ProtoReflect.Descriptor instead.
func (*CorrelationContext) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{9}
}

func (x *CorrelationContext) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CorrelationContext) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *CorrelationContext) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *CorrelationContext) GetParentSpanId() string {
	if x != nil {
		return x.ParentSpanId
	}
	return ""
}

func (x *CorrelationContext) GetCausedBy() []string {
	if x != nil {
		return x.CausedBy
	}
	return nil
}

func (x *CorrelationContext) GetRelatedEvents() []string {
	if x != nil {
		return x.RelatedEvents
	}
	return nil
}

func (x *CorrelationContext) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CorrelationContext) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// QualityMetadata provides confidence and quality indicators
type QualityMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Confidence score (0.0 - 1.0)
	Confidence float32 `protobuf:"fixed32,1,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// Sampling rate if this event was sampled
	SamplingRate float32 `protobuf:"fixed32,2,opt,name=sampling_rate,json=samplingRate,proto3" json:"sampling_rate,omitempty"`
	// Whether this event was dropped/filtered elsewhere
	Partial bool `protobuf:"varint,3,opt,name=partial,proto3" json:"partial,omitempty"`
	// Data quality indicators
	QualityFlags []string `protobuf:"bytes,4,rep,name=quality_flags,json=qualityFlags,proto3" json:"quality_flags,omitempty"`
	// Processing latency in microseconds
	ProcessingLatencyUs int64 `protobuf:"varint,5,opt,name=processing_latency_us,json=processingLatencyUs,proto3" json:"processing_latency_us,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *QualityMetadata) Reset() {
	*x = QualityMetadata{}
	mi := &file_proto_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityMetadata) ProtoMessage() {}

func (x *QualityMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityMetadata.ProtoReflect.Descriptor instead.
func (*QualityMetadata) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{10}
}

func (x *QualityMetadata) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *QualityMetadata) GetSamplingRate() float32 {
	if x != nil {
		return x.SamplingRate
	}
	return 0
}

func (x *QualityMetadata) GetPartial() bool {
	if x != nil {
		return x.Partial
	}
	return false
}

func (x *QualityMetadata) GetQualityFlags() []string {
	if x != nil {
		return x.QualityFlags
	}
	return nil
}

func (x *QualityMetadata) GetProcessingLatencyUs() int64 {
	if x != nil {
		return x.ProcessingLatencyUs
	}
	return 0
}

// AttributeValue can hold different types of values
type AttributeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*AttributeValue_StringValue
	//	*AttributeValue_IntValue
	//	*AttributeValue_DoubleValue
	//	*AttributeValue_BoolValue
	//	*AttributeValue_BytesValue
	//	*AttributeValue_TimestampValue
	//	*AttributeValue_StructValue
	Value         isAttributeValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeValue) Reset() {
	*x = AttributeValue{}
	mi := &file_proto_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValue) ProtoMessage() {}

func (x *AttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValue.ProtoReflect.Descriptor instead.
func (*AttributeValue) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{11}
}

func (x *AttributeValue) GetValue() isAttributeValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AttributeValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *AttributeValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *AttributeValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *AttributeValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *AttributeValue) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *AttributeValue) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

func (x *AttributeValue) GetStructValue() *structpb.Struct {
	if x != nil {
		if x, ok := x.Value.(*AttributeValue_StructValue); ok {
			return x.StructValue
		}
	}
	return nil
}

type isAttributeValue_Value interface {
	isAttributeValue_Value()
}

type AttributeValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type AttributeValue_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type AttributeValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type AttributeValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type AttributeValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type AttributeValue_TimestampValue struct {
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type AttributeValue_StructValue struct {
	StructValue *structpb.Struct `protobuf:"bytes,7,opt,name=struct_value,json=structValue,proto3,oneof"`
}

func (*AttributeValue_StringValue) isAttributeValue_Value() {}

func (*AttributeValue_IntValue) isAttributeValue_Value() {}

func (*AttributeValue_DoubleValue) isAttributeValue_Value() {}

func (*AttributeValue_BoolValue) isAttributeValue_Value() {}

func (*AttributeValue_BytesValue) isAttributeValue_Value() {}

func (*AttributeValue_TimestampValue) isAttributeValue_Value() {}

func (*AttributeValue_StructValue) isAttributeValue_Value() {}

// NetworkEvent represents network-related events
type NetworkEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Protocol        string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SrcIp           string                 `protobuf:"bytes,2,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	SrcPort         uint32                 `protobuf:"varint,3,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstIp           string                 `protobuf:"bytes,4,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	DstPort         uint32                 `protobuf:"varint,5,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	BytesSent       uint64                 `protobuf:"varint,6,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   uint64                 `protobuf:"varint,7,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent     uint64                 `protobuf:"varint,8,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived uint64                 `protobuf:"varint,9,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	LatencyNs       uint64                 `protobuf:"varint,10,opt,name=latency_ns,json=latencyNs,proto3" json:"latency_ns,omitempty"`
	State           string                 `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkEvent) Reset() {
	*x = NetworkEvent{}
	mi := &file_proto_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEvent) ProtoMessage() {}

func (x *NetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEvent.ProtoReflect.Descriptor instead.
func (*NetworkEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{12}
}

func (x *NetworkEvent) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkEvent) GetSrcIp() string {
	if x != nil {
		return x.SrcIp
	}
	return ""
}

func (x *NetworkEvent) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *NetworkEvent) GetDstIp() string {
	if x != nil {
		return x.DstIp
	}
	return ""
}

func (x *NetworkEvent) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *NetworkEvent) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkEvent) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkEvent) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkEvent) GetPacketsReceived() uint64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *NetworkEvent) GetLatencyNs() uint64 {
	if x != nil {
		return x.LatencyNs
	}
	return 0
}

func (x *NetworkEvent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NetworkEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// MemoryEvent represents memory-related events
type MemoryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operation     string                 `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"` // alloc, free, oom, etc.
	SizeBytes     uint64                 `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Address       uint64                 `protobuf:"varint,3,opt,name=address,proto3" json:"address,omitempty"`
	RssBytes      uint64                 `protobuf:"varint,4,opt,name=rss_bytes,json=rssBytes,proto3" json:"rss_bytes,omitempty"`
	VmsBytes      uint64                 `protobuf:"varint,5,opt,name=vms_bytes,json=vmsBytes,proto3" json:"vms_bytes,omitempty"`
	SharedBytes   uint64                 `protobuf:"varint,6,opt,name=shared_bytes,json=sharedBytes,proto3" json:"shared_bytes,omitempty"`
	Allocator     string                 `protobuf:"bytes,7,opt,name=allocator,proto3" json:"allocator,omitempty"`
	StackTrace    []string               `protobuf:"bytes,8,rep,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryEvent) Reset() {
	*x = MemoryEvent{}
	mi := &file_proto_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryEvent) ProtoMessage() {}

func (x *MemoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryEvent.ProtoReflect.Descriptor instead.
func (*MemoryEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{13}
}

func (x *MemoryEvent) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *MemoryEvent) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *MemoryEvent) GetAddress() uint64 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *MemoryEvent) GetRssBytes() uint64 {
	if x != nil {
		return x.RssBytes
	}
	return 0
}

func (x *MemoryEvent) GetVmsBytes() uint64 {
	if x != nil {
		return x.VmsBytes
	}
	return 0
}

func (x *MemoryEvent) GetSharedBytes() uint64 {
	if x != nil {
		return x.SharedBytes
	}
	return 0
}

func (x *MemoryEvent) GetAllocator() string {
	if x != nil {
		return x.Allocator
	}
	return ""
}

func (x *MemoryEvent) GetStackTrace() []string {
	if x != nil {
		return x.StackTrace
	}
	return nil
}

func (x *MemoryEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// CPUEvent represents CPU-related events
type CPUEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UsagePercent     float32                `protobuf:"fixed32,1,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	UserTimeNs       uint64                 `protobuf:"varint,2,opt,name=user_time_ns,json=userTimeNs,proto3" json:"user_time_ns,omitempty"`
	SystemTimeNs     uint64                 `protobuf:"varint,3,opt,name=system_time_ns,json=systemTimeNs,proto3" json:"system_time_ns,omitempty"`
	WaitTimeNs       uint64                 `protobuf:"varint,4,opt,name=wait_time_ns,json=waitTimeNs,proto3" json:"wait_time_ns,omitempty"`
	CpuCore          uint32                 `protobuf:"varint,5,opt,name=cpu_core,json=cpuCore,proto3" json:"cpu_core,omitempty"`
	ThrottledTimeNs  uint64                 `protobuf:"varint,6,opt,name=throttled_time_ns,json=throttledTimeNs,proto3" json:"throttled_time_ns,omitempty"`
	ThrottledPeriods uint64                 `protobuf:"varint,7,opt,name=throttled_periods,json=throttledPeriods,proto3" json:"throttled_periods,omitempty"`
	Metadata         map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CPUEvent) Reset() {
	*x = CPUEvent{}
	mi := &file_proto_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUEvent) ProtoMessage() {}

func (x *CPUEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUEvent.ProtoReflect.Descriptor instead.
func (*CPUEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{14}
}

func (x *CPUEvent) GetUsagePercent() float32 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *CPUEvent) GetUserTimeNs() uint64 {
	if x != nil {
		return x.UserTimeNs
	}
	return 0
}

func (x *CPUEvent) GetSystemTimeNs() uint64 {
	if x != nil {
		return x.SystemTimeNs
	}
	return 0
}

func (x *CPUEvent) GetWaitTimeNs() uint64 {
	if x != nil {
		return x.WaitTimeNs
	}
	return 0
}

func (x *CPUEvent) GetCpuCore() uint32 {
	if x != nil {
		return x.CpuCore
	}
	return 0
}

func (x *CPUEvent) GetThrottledTimeNs() uint64 {
	if x != nil {
		return x.ThrottledTimeNs
	}
	return 0
}

func (x *CPUEvent) GetThrottledPeriods() uint64 {
	if x != nil {
		return x.ThrottledPeriods
	}
	return 0
}

func (x *CPUEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// IOEvent represents I/O operations
type IOEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operation     string                 `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"` // read, write, open, close, etc.
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Fd            uint32                 `protobuf:"varint,3,opt,name=fd,proto3" json:"fd,omitempty"`
	SizeBytes     uint64                 `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Offset        uint64                 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	LatencyNs     uint64                 `protobuf:"varint,6,opt,name=latency_ns,json=latencyNs,proto3" json:"latency_ns,omitempty"`
	Device        string                 `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	Filesystem    string                 `protobuf:"bytes,8,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOEvent) Reset() {
	*x = IOEvent{}
	mi := &file_proto_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOEvent) ProtoMessage() {}

func (x *IOEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOEvent.ProtoReflect.Descriptor instead.
func (*IOEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{15}
}

func (x *IOEvent) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *IOEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *IOEvent) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *IOEvent) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *IOEvent) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IOEvent) GetLatencyNs() uint64 {
	if x != nil {
		return x.LatencyNs
	}
	return 0
}

func (x *IOEvent) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *IOEvent) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *IOEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// SystemEvent represents system-level events
type SystemEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subsystem     string                 `protobuf:"bytes,1,opt,name=subsystem,proto3" json:"subsystem,omitempty"` // kernel, systemd, etc.
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StackTrace    []string               `protobuf:"bytes,5,rep,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	mi := &file_proto_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{16}
}

func (x *SystemEvent) GetSubsystem() string {
	if x != nil {
		return x.Subsystem
	}
	return ""
}

func (x *SystemEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *SystemEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SystemEvent) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *SystemEvent) GetStackTrace() []string {
	if x != nil {
		return x.StackTrace
	}
	return nil
}

func (x *SystemEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ProcessEvent represents process lifecycle events
type ProcessEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // start, exit, signal, etc.
	Pid           uint32                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          uint32                 `protobuf:"varint,3,opt,name=ppid,proto3" json:"ppid,omitempty"`
	ExitCode      int32                  `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Signal        int32                  `protobuf:"varint,5,opt,name=signal,proto3" json:"signal,omitempty"`
	Reason        string                 `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessEvent) Reset() {
	*x = ProcessEvent{}
	mi := &file_proto_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent) ProtoMessage() {}

func (x *ProcessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{17}
}

func (x *ProcessEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ProcessEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessEvent) GetPpid() uint32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ProcessEvent) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *ProcessEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ProcessEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ContainerEvent represents container lifecycle events
type ContainerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // create, start, stop, die, etc.
	ContainerId   string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Runtime       string                 `protobuf:"bytes,4,opt,name=runtime,proto3" json:"runtime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,5,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Reason        string                 `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerEvent) Reset() {
	*x = ContainerEvent{}
	mi := &file_proto_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerEvent) ProtoMessage() {}

func (x *ContainerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerEvent.ProtoReflect.Descriptor instead.
func (*ContainerEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{18}
}

func (x *ContainerEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ContainerEvent) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerEvent) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerEvent) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *ContainerEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ContainerEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// KubernetesEvent represents Kubernetes resource events
type KubernetesEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceType  string                 `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ResourceName  string                 `protobuf:"bytes,2,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	EventType     string                 `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // added, modified, deleted
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	ObjectMeta    map[string]string      `protobuf:"bytes,7,rep,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ObjectSpec    *structpb.Struct       `protobuf:"bytes,8,opt,name=object_spec,json=objectSpec,proto3" json:"object_spec,omitempty"`
	ObjectStatus  *structpb.Struct       `protobuf:"bytes,9,opt,name=object_status,json=objectStatus,proto3" json:"object_status,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesEvent) Reset() {
	*x = KubernetesEvent{}
	mi := &file_proto_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesEvent) ProtoMessage() {}

func (x *KubernetesEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesEvent.ProtoReflect.Descriptor instead.
func (*KubernetesEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{19}
}

func (x *KubernetesEvent) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *KubernetesEvent) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *KubernetesEvent) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *KubernetesEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *KubernetesEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *KubernetesEvent) GetObjectMeta() map[string]string {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *KubernetesEvent) GetObjectSpec() *structpb.Struct {
	if x != nil {
		return x.ObjectSpec
	}
	return nil
}

func (x *KubernetesEvent) GetObjectStatus() *structpb.Struct {
	if x != nil {
		return x.ObjectStatus
	}
	return nil
}

func (x *KubernetesEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// LogEvent represents log entries from various sources
type LogEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Logger        string                 `protobuf:"bytes,3,opt,name=logger,proto3" json:"logger,omitempty"`
	SourceFile    string                 `protobuf:"bytes,4,opt,name=source_file,json=sourceFile,proto3" json:"source_file,omitempty"`
	LineNumber    uint32                 `protobuf:"varint,5,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	Fields        map[string]string      `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StackTrace    []string               `protobuf:"bytes,7,rep,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	mi := &file_proto_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{20}
}

func (x *LogEvent) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEvent) GetLogger() string {
	if x != nil {
		return x.Logger
	}
	return ""
}

func (x *LogEvent) GetSourceFile() string {
	if x != nil {
		return x.SourceFile
	}
	return ""
}

func (x *LogEvent) GetLineNumber() uint32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *LogEvent) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LogEvent) GetStackTrace() []string {
	if x != nil {
		return x.StackTrace
	}
	return nil
}

func (x *LogEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// MetricEvent represents metrics/measurements
type MetricEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*MetricEvent_Gauge
	//	*MetricEvent_Counter
	//	*MetricEvent_Histogram
	//	*MetricEvent_Summary
	Value         isMetricEvent_Value `protobuf_oneof:"value"`
	Labels        map[string]string   `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Unit          string              `protobuf:"bytes,7,opt,name=unit,proto3" json:"unit,omitempty"`
	Description   string              `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Metadata      map[string]string   `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricEvent) Reset() {
	*x = MetricEvent{}
	mi := &file_proto_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricEvent) ProtoMessage() {}

func (x *MetricEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricEvent.ProtoReflect.Descriptor instead.
func (*MetricEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{21}
}

func (x *MetricEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricEvent) GetValue() isMetricEvent_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MetricEvent) GetGauge() int64 {
	if x != nil {
		if x, ok := x.Value.(*MetricEvent_Gauge); ok {
			return x.Gauge
		}
	}
	return 0
}

func (x *MetricEvent) GetCounter() int64 {
	if x != nil {
		if x, ok := x.Value.(*MetricEvent_Counter); ok {
			return x.Counter
		}
	}
	return 0
}

func (x *MetricEvent) GetHistogram() *HistogramValue {
	if x != nil {
		if x, ok := x.Value.(*MetricEvent_Histogram); ok {
			return x.Histogram
		}
	}
	return nil
}

func (x *MetricEvent) GetSummary() *SummaryValue {
	if x != nil {
		if x, ok := x.Value.(*MetricEvent_Summary); ok {
			return x.Summary
		}
	}
	return nil
}

func (x *MetricEvent) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricEvent) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MetricEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isMetricEvent_Value interface {
	isMetricEvent_Value()
}

type MetricEvent_Gauge struct {
	Gauge int64 `protobuf:"varint,2,opt,name=gauge,proto3,oneof"`
}

type MetricEvent_Counter struct {
	Counter int64 `protobuf:"varint,3,opt,name=counter,proto3,oneof"`
}

type MetricEvent_Histogram struct {
	Histogram *HistogramValue `protobuf:"bytes,4,opt,name=histogram,proto3,oneof"`
}

type MetricEvent_Summary struct {
	Summary *SummaryValue `protobuf:"bytes,5,opt,name=summary,proto3,oneof"`
}

func (*MetricEvent_Gauge) isMetricEvent_Value() {}

func (*MetricEvent_Counter) isMetricEvent_Value() {}

func (*MetricEvent_Histogram) isMetricEvent_Value() {}

func (*MetricEvent_Summary) isMetricEvent_Value() {}

// TraceEvent represents distributed tracing spans
type TraceEvent struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Operation     string                     `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	Service       string                     `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	StartTime     *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DurationNs    uint64                     `protobuf:"varint,5,opt,name=duration_ns,json=durationNs,proto3" json:"duration_ns,omitempty"`
	Status        string                     `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Attributes    map[string]*AttributeValue `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Links         []*TraceLink               `protobuf:"bytes,8,rep,name=links,proto3" json:"links,omitempty"`
	Metadata      map[string]string          `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraceEvent) Reset() {
	*x = TraceEvent{}
	mi := &file_proto_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceEvent) ProtoMessage() {}

func (x *TraceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceEvent.ProtoReflect.Descriptor instead.
func (*TraceEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{22}
}

func (x *TraceEvent) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *TraceEvent) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *TraceEvent) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TraceEvent) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TraceEvent) GetDurationNs() uint64 {
	if x != nil {
		return x.DurationNs
	}
	return 0
}

func (x *TraceEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TraceEvent) GetAttributes() map[string]*AttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TraceEvent) GetLinks() []*TraceLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *TraceEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Supporting types for metrics
type HistogramValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Buckets       []float64              `protobuf:"fixed64,1,rep,packed,name=buckets,proto3" json:"buckets,omitempty"`
	Counts        []uint64               `protobuf:"varint,2,rep,packed,name=counts,proto3" json:"counts,omitempty"`
	Count         uint64                 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Sum           float64                `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistogramValue) Reset() {
	*x = HistogramValue{}
	mi := &file_proto_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistogramValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramValue) ProtoMessage() {}

func (x *HistogramValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramValue.ProtoReflect.Descriptor instead.
func (*HistogramValue) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{23}
}

func (x *HistogramValue) GetBuckets() []float64 {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *HistogramValue) GetCounts() []uint64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *HistogramValue) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HistogramValue) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type SummaryValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Sum           float64                `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
	Quantiles     []*Quantile            `protobuf:"bytes,3,rep,name=quantiles,proto3" json:"quantiles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryValue) Reset() {
	*x = SummaryValue{}
	mi := &file_proto_events_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryValue) ProtoMessage() {}

func (x *SummaryValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryValue.ProtoReflect.Descriptor instead.
func (*SummaryValue) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{24}
}

func (x *SummaryValue) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SummaryValue) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *SummaryValue) GetQuantiles() []*Quantile {
	if x != nil {
		return x.Quantiles
	}
	return nil
}

type Quantile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quantile      float64                `protobuf:"fixed64,1,opt,name=quantile,proto3" json:"quantile,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quantile) Reset() {
	*x = Quantile{}
	mi := &file_proto_events_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quantile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quantile) ProtoMessage() {}

func (x *Quantile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quantile.ProtoReflect.Descriptor instead.
func (*Quantile) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{25}
}

func (x *Quantile) GetQuantile() float64 {
	if x != nil {
		return x.Quantile
	}
	return 0
}

func (x *Quantile) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// TraceLink represents relationships between spans
type TraceLink struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	TraceId       string                     `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId        string                     `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	Relationship  string                     `protobuf:"bytes,3,opt,name=relationship,proto3" json:"relationship,omitempty"`
	Attributes    map[string]*AttributeValue `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraceLink) Reset() {
	*x = TraceLink{}
	mi := &file_proto_events_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceLink) ProtoMessage() {}

func (x *TraceLink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceLink.ProtoReflect.Descriptor instead.
func (*TraceLink) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{26}
}

func (x *TraceLink) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *TraceLink) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *TraceLink) GetRelationship() string {
	if x != nil {
		return x.Relationship
	}
	return ""
}

func (x *TraceLink) GetAttributes() map[string]*AttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// EventBatch for efficient bulk operations
type EventBatch struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Events []*UnifiedEvent        `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// Batch metadata
	BatchId       string                 `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	DroppedEvents uint32                 `protobuf:"varint,5,opt,name=dropped_events,json=droppedEvents,proto3" json:"dropped_events,omitempty"`
	// Compression hint for transport
	Compression   CompressionType `protobuf:"varint,6,opt,name=compression,proto3,enum=tapio.events.v1.CompressionType" json:"compression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBatch) Reset() {
	*x = EventBatch{}
	mi := &file_proto_events_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatch) ProtoMessage() {}

func (x *EventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatch.ProtoReflect.Descriptor instead.
func (*EventBatch) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{27}
}

func (x *EventBatch) GetEvents() []*UnifiedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *EventBatch) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *EventBatch) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EventBatch) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *EventBatch) GetDroppedEvents() uint32 {
	if x != nil {
		return x.DroppedEvents
	}
	return 0
}

func (x *EventBatch) GetCompression() CompressionType {
	if x != nil {
		return x.Compression
	}
	return CompressionType_COMPRESSION_NONE
}

type EventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Errors        []string               `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	mi := &file_proto_events_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{28}
}

func (x *EventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *EventResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_proto_events_proto protoreflect.FileDescriptor

const file_proto_events_proto_rawDesc = "" +
	"\n" +
	"\x12proto/events.proto\x12\x0ftapio.events.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xe5\n" +
	"\n" +
	"\fUnifiedEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12:\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1e.tapio.events.v1.EventMetadataR\bmetadata\x124\n" +
	"\x06source\x18\x04 \x01(\v2\x1c.tapio.events.v1.EventSourceR\x06source\x126\n" +
	"\x06entity\x18\x05 \x01(\v2\x1e.tapio.events.v1.EntityContextR\x06entity\x129\n" +
	"\anetwork\x18\n" +
	" \x01(\v2\x1d.tapio.events.v1.NetworkEventH\x00R\anetwork\x126\n" +
	"\x06memory\x18\v \x01(\v2\x1c.tapio.events.v1.MemoryEventH\x00R\x06memory\x12-\n" +
	"\x03cpu\x18\f \x01(\v2\x19.tapio.events.v1.CPUEventH\x00R\x03cpu\x12*\n" +
	"\x02io\x18\r \x01(\v2\x18.tapio.events.v1.IOEventH\x00R\x02io\x126\n" +
	"\x06system\x18\x0e \x01(\v2\x1c.tapio.events.v1.SystemEventH\x00R\x06system\x129\n" +
	"\aprocess\x18\x0f \x01(\v2\x1d.tapio.events.v1.ProcessEventH\x00R\aprocess\x12?\n" +
	"\tcontainer\x18\x10 \x01(\v2\x1f.tapio.events.v1.ContainerEventH\x00R\tcontainer\x12B\n" +
	"\n" +
	"kubernetes\x18\x11 \x01(\v2 .tapio.events.v1.KubernetesEventH\x00R\n" +
	"kubernetes\x12-\n" +
	"\x03log\x18\x12 \x01(\v2\x19.tapio.events.v1.LogEventH\x00R\x03log\x126\n" +
	"\x06metric\x18\x13 \x01(\v2\x1c.tapio.events.v1.MetricEventH\x00R\x06metric\x123\n" +
	"\x05trace\x18\x14 \x01(\v2\x1b.tapio.events.v1.TraceEventH\x00R\x05trace\x123\n" +
	"\ageneric\x182 \x01(\v2\x17.google.protobuf.StructH\x00R\ageneric\x12\x12\n" +
	"\x03raw\x183 \x01(\fH\x00R\x03raw\x12M\n" +
	"\n" +
	"attributes\x18\x1e \x03(\v2-.tapio.events.v1.UnifiedEvent.AttributesEntryR\n" +
	"attributes\x12A\n" +
	"\x06labels\x18\x1f \x03(\v2).tapio.events.v1.UnifiedEvent.LabelsEntryR\x06labels\x12E\n" +
	"\vcorrelation\x18  \x01(\v2#.tapio.events.v1.CorrelationContextR\vcorrelation\x12:\n" +
	"\aquality\x18! \x01(\v2 .tapio.events.v1.QualityMetadataR\aquality\x1a^\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.tapio.events.v1.AttributeValueR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x06\n" +
	"\x04data\"\xc2\x02\n" +
	"\rEventMetadata\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12:\n" +
	"\bcategory\x18\x02 \x01(\x0e2\x1e.tapio.events.v1.EventCategoryR\bcategory\x12:\n" +
	"\bseverity\x18\x03 \x01(\x0e2\x1e.tapio.events.v1.EventSeverityR\bseverity\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x12%\n" +
	"\x0eschema_version\x18\x05 \x01(\tR\rschemaVersion\x12\x1e\n" +
	"\n" +
	"persistent\x18\x06 \x01(\bR\n" +
	"persistent\x12\x1f\n" +
	"\vttl_seconds\x18\a \x01(\x03R\n" +
	"ttlSeconds\x12!\n" +
	"\frouting_keys\x18\b \x03(\tR\vroutingKeys\"\x8c\x02\n" +
	"\vEventSource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1c\n" +
	"\tcollector\x18\x02 \x01(\tR\tcollector\x12\x12\n" +
	"\x04node\x18\x03 \x01(\tR\x04node\x12\x18\n" +
	"\acluster\x18\x04 \x01(\tR\acluster\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12F\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2*.tapio.events.v1.EventSource.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x03\n" +
	"\rEntityContext\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.tapio.events.v1.EntityTypeR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x128\n" +
	"\x06parent\x18\x05 \x01(\v2 .tapio.events.v1.EntityReferenceR\x06parent\x126\n" +
	"\aprocess\x18\n" +
	" \x01(\v2\x1c.tapio.events.v1.ProcessInfoR\aprocess\x12<\n" +
	"\tcontainer\x18\v \x01(\v2\x1e.tapio.events.v1.ContainerInfoR\tcontainer\x12*\n" +
	"\x03pod\x18\f \x01(\v2\x18.tapio.events.v1.PodInfoR\x03pod\x12-\n" +
	"\x04node\x18\r \x01(\v2\x19.tapio.events.v1.NodeInfoR\x04node\"f\n" +
	"\x0fEntityReference\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.tapio.events.v1.EntityTypeR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\xac\x02\n" +
	"\vProcessInfo\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\x12\x12\n" +
	"\x04ppid\x18\x02 \x01(\rR\x04ppid\x12\x12\n" +
	"\x04comm\x18\x03 \x01(\tR\x04comm\x12\x10\n" +
	"\x03exe\x18\x04 \x01(\tR\x03exe\x12\x10\n" +
	"\x03cwd\x18\x05 \x01(\tR\x03cwd\x12\x12\n" +
	"\x04args\x18\x06 \x03(\tR\x04args\x127\n" +
	"\x03env\x18\a \x03(\v2%.tapio.events.v1.ProcessInfo.EnvEntryR\x03env\x12\x10\n" +
	"\x03uid\x18\b \x01(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\t \x01(\rR\x03gid\x12\x16\n" +
	"\x06cgroup\x18\n" +
	" \x01(\tR\x06cgroup\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x01\n" +
	"\rContainerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x18\n" +
	"\aruntime\x18\x04 \x01(\tR\aruntime\x12B\n" +
	"\x06labels\x18\x05 \x03(\v2*.tapio.events.v1.ContainerInfo.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x03\n" +
	"\aPodInfo\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12<\n" +
	"\x06labels\x18\x04 \x03(\v2$.tapio.events.v1.PodInfo.LabelsEntryR\x06labels\x12K\n" +
	"\vannotations\x18\x05 \x03(\v2).tapio.events.v1.PodInfo.AnnotationsEntryR\vannotations\x12>\n" +
	"\n" +
	"containers\x18\x06 \x03(\v2\x1e.tapio.events.v1.ContainerInfoR\n" +
	"containers\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x01\n" +
	"\bNodeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\tR\x03uid\x12=\n" +
	"\x06labels\x18\x03 \x03(\v2%.tapio.events.v1.NodeInfo.LabelsEntryR\x06labels\x12%\n" +
	"\x0ekernel_version\x18\x04 \x01(\tR\rkernelVersion\x12\x19\n" +
	"\bos_image\x18\x05 \x01(\tR\aosImage\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x02\n" +
	"\x12CorrelationContext\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\tR\rcorrelationId\x12\x19\n" +
	"\btrace_id\x18\x02 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x03 \x01(\tR\x06spanId\x12$\n" +
	"\x0eparent_span_id\x18\x04 \x01(\tR\fparentSpanId\x12\x1b\n" +
	"\tcaused_by\x18\x05 \x03(\tR\bcausedBy\x12%\n" +
	"\x0erelated_events\x18\x06 \x03(\tR\rrelatedEvents\x12\x1d\n" +
	"\n" +
	"session_id\x18\a \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\b \x01(\tR\x06userId\"\xc9\x01\n" +
	"\x0fQualityMetadata\x12\x1e\n" +
	"\n" +
	"confidence\x18\x01 \x01(\x02R\n" +
	"confidence\x12#\n" +
	"\rsampling_rate\x18\x02 \x01(\x02R\fsamplingRate\x12\x18\n" +
	"\apartial\x18\x03 \x01(\bR\apartial\x12#\n" +
	"\rquality_flags\x18\x04 \x03(\tR\fqualityFlags\x122\n" +
	"\x15processing_latency_us\x18\x05 \x01(\x03R\x13processingLatencyUs\"\xcb\x02\n" +
	"\x0eAttributeValue\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12#\n" +
	"\fdouble_value\x18\x03 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x04 \x01(\bH\x00R\tboolValue\x12!\n" +
	"\vbytes_value\x18\x05 \x01(\fH\x00R\n" +
	"bytesValue\x12E\n" +
	"\x0ftimestamp_value\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0etimestampValue\x12<\n" +
	"\fstruct_value\x18\a \x01(\v2\x17.google.protobuf.StructH\x00R\vstructValueB\a\n" +
	"\x05value\"\xdd\x03\n" +
	"\fNetworkEvent\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x15\n" +
	"\x06src_ip\x18\x02 \x01(\tR\x05srcIp\x12\x19\n" +
	"\bsrc_port\x18\x03 \x01(\rR\asrcPort\x12\x15\n" +
	"\x06dst_ip\x18\x04 \x01(\tR\x05dstIp\x12\x19\n" +
	"\bdst_port\x18\x05 \x01(\rR\adstPort\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x06 \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\a \x01(\x04R\rbytesReceived\x12!\n" +
	"\fpackets_sent\x18\b \x01(\x04R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\t \x01(\x04R\x0fpacketsReceived\x12\x1d\n" +
	"\n" +
	"latency_ns\x18\n" +
	" \x01(\x04R\tlatencyNs\x12\x14\n" +
	"\x05state\x18\v \x01(\tR\x05state\x12G\n" +
	"\bmetadata\x18\x14 \x03(\v2+.tapio.events.v1.NetworkEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x03\n" +
	"\vMemoryEvent\x12\x1c\n" +
	"\toperation\x18\x01 \x01(\tR\toperation\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x02 \x01(\x04R\tsizeBytes\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\x04R\aaddress\x12\x1b\n" +
	"\trss_bytes\x18\x04 \x01(\x04R\brssBytes\x12\x1b\n" +
	"\tvms_bytes\x18\x05 \x01(\x04R\bvmsBytes\x12!\n" +
	"\fshared_bytes\x18\x06 \x01(\x04R\vsharedBytes\x12\x1c\n" +
	"\tallocator\x18\a \x01(\tR\tallocator\x12\x1f\n" +
	"\vstack_trace\x18\b \x03(\tR\n" +
	"stackTrace\x12F\n" +
	"\bmetadata\x18\x14 \x03(\v2*.tapio.events.v1.MemoryEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x03\n" +
	"\bCPUEvent\x12#\n" +
	"\rusage_percent\x18\x01 \x01(\x02R\fusagePercent\x12 \n" +
	"\fuser_time_ns\x18\x02 \x01(\x04R\n" +
	"userTimeNs\x12$\n" +
	"\x0esystem_time_ns\x18\x03 \x01(\x04R\fsystemTimeNs\x12 \n" +
	"\fwait_time_ns\x18\x04 \x01(\x04R\n" +
	"waitTimeNs\x12\x19\n" +
	"\bcpu_core\x18\x05 \x01(\rR\acpuCore\x12*\n" +
	"\x11throttled_time_ns\x18\x06 \x01(\x04R\x0fthrottledTimeNs\x12+\n" +
	"\x11throttled_periods\x18\a \x01(\x04R\x10throttledPeriods\x12C\n" +
	"\bmetadata\x18\x14 \x03(\v2'.tapio.events.v1.CPUEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x02\n" +
	"\aIOEvent\x12\x1c\n" +
	"\toperation\x18\x01 \x01(\tR\toperation\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x0e\n" +
	"\x02fd\x18\x03 \x01(\rR\x02fd\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x04R\tsizeBytes\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x04R\x06offset\x12\x1d\n" +
	"\n" +
	"latency_ns\x18\x06 \x01(\x04R\tlatencyNs\x12\x16\n" +
	"\x06device\x18\a \x01(\tR\x06device\x12\x1e\n" +
	"\n" +
	"filesystem\x18\b \x01(\tR\n" +
	"filesystem\x12B\n" +
	"\bmetadata\x18\x14 \x03(\v2&.tapio.events.v1.IOEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x03\n" +
	"\vSystemEvent\x12\x1c\n" +
	"\tsubsystem\x18\x01 \x01(\tR\tsubsystem\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12L\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2,.tapio.events.v1.SystemEvent.ParametersEntryR\n" +
	"parameters\x12\x1f\n" +
	"\vstack_trace\x18\x05 \x03(\tR\n" +
	"stackTrace\x12F\n" +
	"\bmetadata\x18\x14 \x03(\v2*.tapio.events.v1.SystemEvent.MetadataEntryR\bmetadata\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x02\n" +
	"\fProcessEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\x12\x12\n" +
	"\x04ppid\x18\x03 \x01(\rR\x04ppid\x12\x1b\n" +
	"\texit_code\x18\x04 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06signal\x18\x05 \x01(\x05R\x06signal\x12\x16\n" +
	"\x06reason\x18\x06 \x01(\tR\x06reason\x12G\n" +
	"\bmetadata\x18\x14 \x03(\v2+.tapio.events.v1.ProcessEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\x02\n" +
	"\x0eContainerEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x18\n" +
	"\aruntime\x18\x04 \x01(\tR\aruntime\x12\x1b\n" +
	"\texit_code\x18\x05 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06reason\x18\x06 \x01(\tR\x06reason\x12I\n" +
	"\bmetadata\x18\x14 \x03(\v2-.tapio.events.v1.ContainerEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdd\x04\n" +
	"\x0fKubernetesEvent\x12#\n" +
	"\rresource_type\x18\x01 \x01(\tR\fresourceType\x12#\n" +
	"\rresource_name\x18\x02 \x01(\tR\fresourceName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"event_type\x18\x04 \x01(\tR\teventType\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x12Q\n" +
	"\vobject_meta\x18\a \x03(\v20.tapio.events.v1.KubernetesEvent.ObjectMetaEntryR\n" +
	"objectMeta\x128\n" +
	"\vobject_spec\x18\b \x01(\v2\x17.google.protobuf.StructR\n" +
	"objectSpec\x12<\n" +
	"\robject_status\x18\t \x01(\v2\x17.google.protobuf.StructR\fobjectStatus\x12J\n" +
	"\bmetadata\x18\x14 \x03(\v2..tapio.events.v1.KubernetesEvent.MetadataEntryR\bmetadata\x1a=\n" +
	"\x0fObjectMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x03\n" +
	"\bLogEvent\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06logger\x18\x03 \x01(\tR\x06logger\x12\x1f\n" +
	"\vsource_file\x18\x04 \x01(\tR\n" +
	"sourceFile\x12\x1f\n" +
	"\vline_number\x18\x05 \x01(\rR\n" +
	"lineNumber\x12=\n" +
	"\x06fields\x18\x06 \x03(\v2%.tapio.events.v1.LogEvent.FieldsEntryR\x06fields\x12\x1f\n" +
	"\vstack_trace\x18\a \x03(\tR\n" +
	"stackTrace\x12C\n" +
	"\bmetadata\x18\x14 \x03(\v2'.tapio.events.v1.LogEvent.MetadataEntryR\bmetadata\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x04\n" +
	"\vMetricEvent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x05gauge\x18\x02 \x01(\x03H\x00R\x05gauge\x12\x1a\n" +
	"\acounter\x18\x03 \x01(\x03H\x00R\acounter\x12?\n" +
	"\thistogram\x18\x04 \x01(\v2\x1f.tapio.events.v1.HistogramValueH\x00R\thistogram\x129\n" +
	"\asummary\x18\x05 \x01(\v2\x1d.tapio.events.v1.SummaryValueH\x00R\asummary\x12@\n" +
	"\x06labels\x18\x06 \x03(\v2(.tapio.events.v1.MetricEvent.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04unit\x18\a \x01(\tR\x04unit\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12F\n" +
	"\bmetadata\x18\x14 \x03(\v2*.tapio.events.v1.MetricEvent.MetadataEntryR\bmetadata\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\a\n" +
	"\x05value\"\xd2\x04\n" +
	"\n" +
	"TraceEvent\x12\x1c\n" +
	"\toperation\x18\x01 \x01(\tR\toperation\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1f\n" +
	"\vduration_ns\x18\x05 \x01(\x04R\n" +
	"durationNs\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12K\n" +
	"\n" +
	"attributes\x18\a \x03(\v2+.tapio.events.v1.TraceEvent.AttributesEntryR\n" +
	"attributes\x120\n" +
	"\x05links\x18\b \x03(\v2\x1a.tapio.events.v1.TraceLinkR\x05links\x12E\n" +
	"\bmetadata\x18\x14 \x03(\v2).tapio.events.v1.TraceEvent.MetadataEntryR\bmetadata\x1a^\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.tapio.events.v1.AttributeValueR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\x0eHistogramValue\x12\x18\n" +
	"\abuckets\x18\x01 \x03(\x01R\abuckets\x12\x16\n" +
	"\x06counts\x18\x02 \x03(\x04R\x06counts\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x04R\x05count\x12\x10\n" +
	"\x03sum\x18\x04 \x01(\x01R\x03sum\"o\n" +
	"\fSummaryValue\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x10\n" +
	"\x03sum\x18\x02 \x01(\x01R\x03sum\x127\n" +
	"\tquantiles\x18\x03 \x03(\v2\x19.tapio.events.v1.QuantileR\tquantiles\"<\n" +
	"\bQuantile\x12\x1a\n" +
	"\bquantile\x18\x01 \x01(\x01R\bquantile\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\"\x8f\x02\n" +
	"\tTraceLink\x12\x19\n" +
	"\btrace_id\x18\x01 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x02 \x01(\tR\x06spanId\x12\"\n" +
	"\frelationship\x18\x03 \x01(\tR\frelationship\x12J\n" +
	"\n" +
	"attributes\x18\x04 \x03(\v2*.tapio.events.v1.TraceLink.AttributesEntryR\n" +
	"attributes\x1a^\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.tapio.events.v1.AttributeValueR\x05value:\x028\x01\"\x9c\x02\n" +
	"\n" +
	"EventBatch\x125\n" +
	"\x06events\x18\x01 \x03(\v2\x1d.tapio.events.v1.UnifiedEventR\x06events\x12\x19\n" +
	"\bbatch_id\x18\x02 \x01(\tR\abatchId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12%\n" +
	"\x0edropped_events\x18\x05 \x01(\rR\rdroppedEvents\x12B\n" +
	"\vcompression\x18\x06 \x01(\x0e2 .tapio.events.v1.CompressionTypeR\vcompression\"\xfd\x01\n" +
	"\rEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\x12\x16\n" +
	"\x06errors\x18\x04 \x03(\tR\x06errors\x12H\n" +
	"\bmetadata\x18\x05 \x03(\v2,.tapio.events.v1.EventResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xf2\x01\n" +
	"\rEventCategory\x12\x14\n" +
	"\x10CATEGORY_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10CATEGORY_NETWORK\x10\x01\x12\x13\n" +
	"\x0fCATEGORY_MEMORY\x10\x02\x12\x10\n" +
	"\fCATEGORY_CPU\x10\x03\x12\x0f\n" +
	"\vCATEGORY_IO\x10\x04\x12\x13\n" +
	"\x0fCATEGORY_SYSTEM\x10\x05\x12\x15\n" +
	"\x11CATEGORY_SECURITY\x10\x06\x12\x18\n" +
	"\x14CATEGORY_APPLICATION\x10\a\x12\x1b\n" +
	"\x17CATEGORY_INFRASTRUCTURE\x10\b\x12\x1a\n" +
	"\x16CATEGORY_OBSERVABILITY\x10\t*\x8d\x01\n" +
	"\rEventSeverity\x12\x14\n" +
	"\x10SEVERITY_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eSEVERITY_DEBUG\x10\x01\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x02\x12\x14\n" +
	"\x10SEVERITY_WARNING\x10\x03\x12\x12\n" +
	"\x0eSEVERITY_ERROR\x10\x04\x12\x15\n" +
	"\x11SEVERITY_CRITICAL\x10\x05*\xa5\x02\n" +
	"\n" +
	"EntityType\x12\x12\n" +
	"\x0eENTITY_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eENTITY_PROCESS\x10\x01\x12\x11\n" +
	"\rENTITY_THREAD\x10\x02\x12\x14\n" +
	"\x10ENTITY_CONTAINER\x10\x03\x12\x0e\n" +
	"\n" +
	"ENTITY_POD\x10\x04\x12\x12\n" +
	"\x0eENTITY_SERVICE\x10\x05\x12\x0f\n" +
	"\vENTITY_NODE\x10\x06\x12\x12\n" +
	"\x0eENTITY_CLUSTER\x10\a\x12\x14\n" +
	"\x10ENTITY_NAMESPACE\x10\b\x12\x15\n" +
	"\x11ENTITY_DEPLOYMENT\x10\t\x12\x14\n" +
	"\x10ENTITY_DAEMONSET\x10\n" +
	"\x12\x16\n" +
	"\x12ENTITY_STATEFULSET\x10\v\x12\x0e\n" +
	"\n" +
	"ENTITY_JOB\x10\f\x12\x12\n" +
	"\x0eENTITY_CRONJOB\x10\r*\x80\x01\n" +
	"\x0fCompressionType\x12\x14\n" +
	"\x10COMPRESSION_NONE\x10\x00\x12\x14\n" +
	"\x10COMPRESSION_GZIP\x10\x01\x12\x14\n" +
	"\x10COMPRESSION_ZSTD\x10\x02\x12\x13\n" +
	"\x0fCOMPRESSION_LZ4\x10\x03\x12\x16\n" +
	"\x12COMPRESSION_SNAPPY\x10\x042\xd3\x02\n" +
	"\fEventService\x12J\n" +
	"\tSendEvent\x12\x1d.tapio.events.v1.UnifiedEvent\x1a\x1e.tapio.events.v1.EventResponse\x12M\n" +
	"\x0eSendEventBatch\x12\x1b.tapio.events.v1.EventBatch\x1a\x1e.tapio.events.v1.EventResponse\x12O\n" +
	"\fStreamEvents\x12\x1d.tapio.events.v1.UnifiedEvent\x1a\x1e.tapio.events.v1.EventResponse(\x01\x12W\n" +
	"\x12ProcessEventStream\x12\x1d.tapio.events.v1.UnifiedEvent\x1a\x1e.tapio.events.v1.EventResponse(\x010\x01B.Z,github.com/yairfalse/tapio/pkg/events;eventsb\x06proto3"

var (
	file_proto_events_proto_rawDescOnce sync.Once
	file_proto_events_proto_rawDescData []byte
)

func file_proto_events_proto_rawDescGZIP() []byte {
	file_proto_events_proto_rawDescOnce.Do(func() {
		file_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_proto_rawDesc), len(file_proto_events_proto_rawDesc)))
	})
	return file_proto_events_proto_rawDescData
}

var file_proto_events_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_proto_events_proto_goTypes = []any{
	(EventCategory)(0),            // 0: tapio.events.v1.EventCategory
	(EventSeverity)(0),            // 1: tapio.events.v1.EventSeverity
	(EntityType)(0),               // 2: tapio.events.v1.EntityType
	(CompressionType)(0),          // 3: tapio.events.v1.CompressionType
	(*UnifiedEvent)(nil),          // 4: tapio.events.v1.UnifiedEvent
	(*EventMetadata)(nil),         // 5: tapio.events.v1.EventMetadata
	(*EventSource)(nil),           // 6: tapio.events.v1.EventSource
	(*EntityContext)(nil),         // 7: tapio.events.v1.EntityContext
	(*EntityReference)(nil),       // 8: tapio.events.v1.EntityReference
	(*ProcessInfo)(nil),           // 9: tapio.events.v1.ProcessInfo
	(*ContainerInfo)(nil),         // 10: tapio.events.v1.ContainerInfo
	(*PodInfo)(nil),               // 11: tapio.events.v1.PodInfo
	(*NodeInfo)(nil),              // 12: tapio.events.v1.NodeInfo
	(*CorrelationContext)(nil),    // 13: tapio.events.v1.CorrelationContext
	(*QualityMetadata)(nil),       // 14: tapio.events.v1.QualityMetadata
	(*AttributeValue)(nil),        // 15: tapio.events.v1.AttributeValue
	(*NetworkEvent)(nil),          // 16: tapio.events.v1.NetworkEvent
	(*MemoryEvent)(nil),           // 17: tapio.events.v1.MemoryEvent
	(*CPUEvent)(nil),              // 18: tapio.events.v1.CPUEvent
	(*IOEvent)(nil),               // 19: tapio.events.v1.IOEvent
	(*SystemEvent)(nil),           // 20: tapio.events.v1.SystemEvent
	(*ProcessEvent)(nil),          // 21: tapio.events.v1.ProcessEvent
	(*ContainerEvent)(nil),        // 22: tapio.events.v1.ContainerEvent
	(*KubernetesEvent)(nil),       // 23: tapio.events.v1.KubernetesEvent
	(*LogEvent)(nil),              // 24: tapio.events.v1.LogEvent
	(*MetricEvent)(nil),           // 25: tapio.events.v1.MetricEvent
	(*TraceEvent)(nil),            // 26: tapio.events.v1.TraceEvent
	(*HistogramValue)(nil),        // 27: tapio.events.v1.HistogramValue
	(*SummaryValue)(nil),          // 28: tapio.events.v1.SummaryValue
	(*Quantile)(nil),              // 29: tapio.events.v1.Quantile
	(*TraceLink)(nil),             // 30: tapio.events.v1.TraceLink
	(*EventBatch)(nil),            // 31: tapio.events.v1.EventBatch
	(*EventResponse)(nil),         // 32: tapio.events.v1.EventResponse
	nil,                           // 33: tapio.events.v1.UnifiedEvent.AttributesEntry
	nil,                           // 34: tapio.events.v1.UnifiedEvent.LabelsEntry
	nil,                           // 35: tapio.events.v1.EventSource.MetadataEntry
	nil,                           // 36: tapio.events.v1.ProcessInfo.EnvEntry
	nil,                           // 37: tapio.events.v1.ContainerInfo.LabelsEntry
	nil,                           // 38: tapio.events.v1.PodInfo.LabelsEntry
	nil,                           // 39: tapio.events.v1.PodInfo.AnnotationsEntry
	nil,                           // 40: tapio.events.v1.NodeInfo.LabelsEntry
	nil,                           // 41: tapio.events.v1.NetworkEvent.MetadataEntry
	nil,                           // 42: tapio.events.v1.MemoryEvent.MetadataEntry
	nil,                           // 43: tapio.events.v1.CPUEvent.MetadataEntry
	nil,                           // 44: tapio.events.v1.IOEvent.MetadataEntry
	nil,                           // 45: tapio.events.v1.SystemEvent.ParametersEntry
	nil,                           // 46: tapio.events.v1.SystemEvent.MetadataEntry
	nil,                           // 47: tapio.events.v1.ProcessEvent.MetadataEntry
	nil,                           // 48: tapio.events.v1.ContainerEvent.MetadataEntry
	nil,                           // 49: tapio.events.v1.KubernetesEvent.ObjectMetaEntry
	nil,                           // 50: tapio.events.v1.KubernetesEvent.MetadataEntry
	nil,                           // 51: tapio.events.v1.LogEvent.FieldsEntry
	nil,                           // 52: tapio.events.v1.LogEvent.MetadataEntry
	nil,                           // 53: tapio.events.v1.MetricEvent.LabelsEntry
	nil,                           // 54: tapio.events.v1.MetricEvent.MetadataEntry
	nil,                           // 55: tapio.events.v1.TraceEvent.AttributesEntry
	nil,                           // 56: tapio.events.v1.TraceEvent.MetadataEntry
	nil,                           // 57: tapio.events.v1.TraceLink.AttributesEntry
	nil,                           // 58: tapio.events.v1.EventResponse.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 59: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 60: google.protobuf.Struct
}
var file_proto_events_proto_depIdxs = []int32{
	59, // 0: tapio.events.v1.UnifiedEvent.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 1: tapio.events.v1.UnifiedEvent.metadata:type_name -> tapio.events.v1.EventMetadata
	6,  // 2: tapio.events.v1.UnifiedEvent.source:type_name -> tapio.events.v1.EventSource
	7,  // 3: tapio.events.v1.UnifiedEvent.entity:type_name -> tapio.events.v1.EntityContext
	16, // 4: tapio.events.v1.UnifiedEvent.network:type_name -> tapio.events.v1.NetworkEvent
	17, // 5: tapio.events.v1.UnifiedEvent.memory:type_name -> tapio.events.v1.MemoryEvent
	18, // 6: tapio.events.v1.UnifiedEvent.cpu:type_name -> tapio.events.v1.CPUEvent
	19, // 7: tapio.events.v1.UnifiedEvent.io:type_name -> tapio.events.v1.IOEvent
	20, // 8: tapio.events.v1.UnifiedEvent.system:type_name -> tapio.events.v1.SystemEvent
	21, // 9: tapio.events.v1.UnifiedEvent.process:type_name -> tapio.events.v1.ProcessEvent
	22, // 10: tapio.events.v1.UnifiedEvent.container:type_name -> tapio.events.v1.ContainerEvent
	23, // 11: tapio.events.v1.UnifiedEvent.kubernetes:type_name -> tapio.events.v1.KubernetesEvent
	24, // 12: tapio.events.v1.UnifiedEvent.log:type_name -> tapio.events.v1.LogEvent
	25, // 13: tapio.events.v1.UnifiedEvent.metric:type_name -> tapio.events.v1.MetricEvent
	26, // 14: tapio.events.v1.UnifiedEvent.trace:type_name -> tapio.events.v1.TraceEvent
	60, // 15: tapio.events.v1.UnifiedEvent.generic:type_name -> google.protobuf.Struct
	33, // 16: tapio.events.v1.UnifiedEvent.attributes:type_name -> tapio.events.v1.UnifiedEvent.AttributesEntry
	34, // 17: tapio.events.v1.UnifiedEvent.labels:type_name -> tapio.events.v1.UnifiedEvent.LabelsEntry
	13, // 18: tapio.events.v1.UnifiedEvent.correlation:type_name -> tapio.events.v1.CorrelationContext
	14, // 19: tapio.events.v1.UnifiedEvent.quality:type_name -> tapio.events.v1.QualityMetadata
	0,  // 20: tapio.events.v1.EventMetadata.category:type_name -> tapio.events.v1.EventCategory
	1,  // 21: tapio.events.v1.EventMetadata.severity:type_name -> tapio.events.v1.EventSeverity
	35, // 22: tapio.events.v1.EventSource.metadata:type_name -> tapio.events.v1.EventSource.MetadataEntry
	2,  // 23: tapio.events.v1.EntityContext.type:type_name -> tapio.events.v1.EntityType
	8,  // 24: tapio.events.v1.EntityContext.parent:type_name -> tapio.events.v1.EntityReference
	9,  // 25: tapio.events.v1.EntityContext.process:type_name -> tapio.events.v1.ProcessInfo
	10, // 26: tapio.events.v1.EntityContext.container:type_name -> tapio.events.v1.ContainerInfo
	11, // 27: tapio.events.v1.EntityContext.pod:type_name -> tapio.events.v1.PodInfo
	12, // 28: tapio.events.v1.EntityContext.node:type_name -> tapio.events.v1.NodeInfo
	2,  // 29: tapio.events.v1.EntityReference.type:type_name -> tapio.events.v1.EntityType
	36, // 30: tapio.events.v1.ProcessInfo.env:type_name -> tapio.events.v1.ProcessInfo.EnvEntry
	37, // 31: tapio.events.v1.ContainerInfo.labels:type_name -> tapio.events.v1.ContainerInfo.LabelsEntry
	38, // 32: tapio.events.v1.PodInfo.labels:type_name -> tapio.events.v1.PodInfo.LabelsEntry
	39, // 33: tapio.events.v1.PodInfo.annotations:type_name -> tapio.events.v1.PodInfo.AnnotationsEntry
	10, // 34: tapio.events.v1.PodInfo.containers:type_name -> tapio.events.v1.ContainerInfo
	40, // 35: tapio.events.v1.NodeInfo.labels:type_name -> tapio.events.v1.NodeInfo.LabelsEntry
	59, // 36: tapio.events.v1.AttributeValue.timestamp_value:type_name -> google.protobuf.Timestamp
	60, // 37: tapio.events.v1.AttributeValue.struct_value:type_name -> google.protobuf.Struct
	41, // 38: tapio.events.v1.NetworkEvent.metadata:type_name -> tapio.events.v1.NetworkEvent.MetadataEntry
	42, // 39: tapio.events.v1.MemoryEvent.metadata:type_name -> tapio.events.v1.MemoryEvent.MetadataEntry
	43, // 40: tapio.events.v1.CPUEvent.metadata:type_name -> tapio.events.v1.CPUEvent.MetadataEntry
	44, // 41: tapio.events.v1.IOEvent.metadata:type_name -> tapio.events.v1.IOEvent.MetadataEntry
	45, // 42: tapio.events.v1.SystemEvent.parameters:type_name -> tapio.events.v1.SystemEvent.ParametersEntry
	46, // 43: tapio.events.v1.SystemEvent.metadata:type_name -> tapio.events.v1.SystemEvent.MetadataEntry
	47, // 44: tapio.events.v1.ProcessEvent.metadata:type_name -> tapio.events.v1.ProcessEvent.MetadataEntry
	48, // 45: tapio.events.v1.ContainerEvent.metadata:type_name -> tapio.events.v1.ContainerEvent.MetadataEntry
	49, // 46: tapio.events.v1.KubernetesEvent.object_meta:type_name -> tapio.events.v1.KubernetesEvent.ObjectMetaEntry
	60, // 47: tapio.events.v1.KubernetesEvent.object_spec:type_name -> google.protobuf.Struct
	60, // 48: tapio.events.v1.KubernetesEvent.object_status:type_name -> google.protobuf.Struct
	50, // 49: tapio.events.v1.KubernetesEvent.metadata:type_name -> tapio.events.v1.KubernetesEvent.MetadataEntry
	51, // 50: tapio.events.v1.LogEvent.fields:type_name -> tapio.events.v1.LogEvent.FieldsEntry
	52, // 51: tapio.events.v1.LogEvent.metadata:type_name -> tapio.events.v1.LogEvent.MetadataEntry
	27, // 52: tapio.events.v1.MetricEvent.histogram:type_name -> tapio.events.v1.HistogramValue
	28, // 53: tapio.events.v1.MetricEvent.summary:type_name -> tapio.events.v1.SummaryValue
	53, // 54: tapio.events.v1.MetricEvent.labels:type_name -> tapio.events.v1.MetricEvent.LabelsEntry
	54, // 55: tapio.events.v1.MetricEvent.metadata:type_name -> tapio.events.v1.MetricEvent.MetadataEntry
	59, // 56: tapio.events.v1.TraceEvent.start_time:type_name -> google.protobuf.Timestamp
	59, // 57: tapio.events.v1.TraceEvent.end_time:type_name -> google.protobuf.Timestamp
	55, // 58: tapio.events.v1.TraceEvent.attributes:type_name -> tapio.events.v1.TraceEvent.AttributesEntry
	30, // 59: tapio.events.v1.TraceEvent.links:type_name -> tapio.events.v1.TraceLink
	56, // 60: tapio.events.v1.TraceEvent.metadata:type_name -> tapio.events.v1.TraceEvent.MetadataEntry
	29, // 61: tapio.events.v1.SummaryValue.quantiles:type_name -> tapio.events.v1.Quantile
	57, // 62: tapio.events.v1.TraceLink.attributes:type_name -> tapio.events.v1.TraceLink.AttributesEntry
	4,  // 63: tapio.events.v1.EventBatch.events:type_name -> tapio.events.v1.UnifiedEvent
	59, // 64: tapio.events.v1.EventBatch.created_at:type_name -> google.protobuf.Timestamp
	3,  // 65: tapio.events.v1.EventBatch.compression:type_name -> tapio.events.v1.CompressionType
	58, // 66: tapio.events.v1.EventResponse.metadata:type_name -> tapio.events.v1.EventResponse.MetadataEntry
	15, // 67: tapio.events.v1.UnifiedEvent.AttributesEntry.value:type_name -> tapio.events.v1.AttributeValue
	15, // 68: tapio.events.v1.TraceEvent.AttributesEntry.value:type_name -> tapio.events.v1.AttributeValue
	15, // 69: tapio.events.v1.TraceLink.AttributesEntry.value:type_name -> tapio.events.v1.AttributeValue
	4,  // 70: tapio.events.v1.EventService.SendEvent:input_type -> tapio.events.v1.UnifiedEvent
	31, // 71: tapio.events.v1.EventService.SendEventBatch:input_type -> tapio.events.v1.EventBatch
	4,  // 72: tapio.events.v1.EventService.StreamEvents:input_type -> tapio.events.v1.UnifiedEvent
	4,  // 73: tapio.events.v1.EventService.ProcessEventStream:input_type -> tapio.events.v1.UnifiedEvent
	32, // 74: tapio.events.v1.EventService.SendEvent:output_type -> tapio.events.v1.EventResponse
	32, // 75: tapio.events.v1.EventService.SendEventBatch:output_type -> tapio.events.v1.EventResponse
	32, // 76: tapio.events.v1.EventService.StreamEvents:output_type -> tapio.events.v1.EventResponse
	32, // 77: tapio.events.v1.EventService.ProcessEventStream:output_type -> tapio.events.v1.EventResponse
	74, // [74:78] is the sub-list for method output_type
	70, // [70:74] is the sub-list for method input_type
	70, // [70:70] is the sub-list for extension type_name
	70, // [70:70] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() { file_proto_events_proto_init() }
func file_proto_events_proto_init() {
	if File_proto_events_proto != nil {
		return
	}
	file_proto_events_proto_msgTypes[0].OneofWrappers = []any{
		(*UnifiedEvent_Network)(nil),
		(*UnifiedEvent_Memory)(nil),
		(*UnifiedEvent_Cpu)(nil),
		(*UnifiedEvent_Io)(nil),
		(*UnifiedEvent_System)(nil),
		(*UnifiedEvent_Process)(nil),
		(*UnifiedEvent_Container)(nil),
		(*UnifiedEvent_Kubernetes)(nil),
		(*UnifiedEvent_Log)(nil),
		(*UnifiedEvent_Metric)(nil),
		(*UnifiedEvent_Trace)(nil),
		(*UnifiedEvent_Generic)(nil),
		(*UnifiedEvent_Raw)(nil),
	}
	file_proto_events_proto_msgTypes[11].OneofWrappers = []any{
		(*AttributeValue_StringValue)(nil),
		(*AttributeValue_IntValue)(nil),
		(*AttributeValue_DoubleValue)(nil),
		(*AttributeValue_BoolValue)(nil),
		(*AttributeValue_BytesValue)(nil),
		(*AttributeValue_TimestampValue)(nil),
		(*AttributeValue_StructValue)(nil),
	}
	file_proto_events_proto_msgTypes[21].OneofWrappers = []any{
		(*MetricEvent_Gauge)(nil),
		(*MetricEvent_Counter)(nil),
		(*MetricEvent_Histogram)(nil),
		(*MetricEvent_Summary)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_proto_rawDesc), len(file_proto_events_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_events_proto_goTypes,
		DependencyIndexes: file_proto_events_proto_depIdxs,
		EnumInfos:         file_proto_events_proto_enumTypes,
		MessageInfos:      file_proto_events_proto_msgTypes,
	}.Build()
	File_proto_events_proto = out.File
	file_proto_events_proto_goTypes = nil
	file_proto_events_proto_depIdxs = nil
}
