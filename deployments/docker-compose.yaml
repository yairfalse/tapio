# Tapio Development Environment
version: '3.8'

services:
  # Tapio Engine - Core correlation engine
  tapio-engine:
    build:
      context: ..
      dockerfile: deployments/engine/Dockerfile
    container_name: tapio-engine
    ports:
      - "9090:9090"  # gRPC
      - "8080:8080"  # REST API
      - "9091:9091"  # Metrics
    environment:
      - TAPIO_ENGINE_CONFIG=/etc/tapio/config.yaml
      - TAPIO_ENGINE_LOG_LEVEL=info
    volumes:
      - ./engine/config.yaml:/etc/tapio/config.yaml:ro
      - tapio-data:/var/lib/tapio/data
      - tapio-logs:/var/log/tapio
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      - prometheus
      - jaeger
    networks:
      - tapio
    restart: unless-stopped

  # Tapio Collector - Data collection agent
  tapio-collector:
    build:
      context: ..
      dockerfile: deployments/collector/Dockerfile
    container_name: tapio-collector
    environment:
      - TAPIO_COLLECTOR_SERVER=tapio-engine:9090
      - TAPIO_COLLECTOR_CONFIG=/etc/tapio/config.yaml
    volumes:
      - ./collector/config.yaml:/etc/tapio/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - tapio-engine
    networks:
      - tapio
    restart: unless-stopped

  # Tapio GUI - Desktop application backend
  tapio-gui:
    build:
      context: ..
      dockerfile: deployments/gui/Dockerfile
    container_name: tapio-gui
    ports:
      - "3000:3000"  # GUI web interface
    environment:
      - TAPIO_GUI_ENGINE_ENDPOINT=tapio-engine:9090
      - TAPIO_GUI_CONFIG=/etc/tapio/config.yaml
    volumes:
      - ./gui/config.yaml:/etc/tapio/config.yaml:ro
    depends_on:
      - tapio-engine
    networks:
      - tapio
    restart: unless-stopped

  # OTEL Plugin - OpenTelemetry export
  tapio-otel-plugin:
    build:
      context: ..
      dockerfile: deployments/plugins/otel/Dockerfile
    container_name: tapio-otel-plugin
    environment:
      - TAPIO_OTEL_ENDPOINT=jaeger:14250
      - TAPIO_OTEL_SERVICE_NAME=tapio-otel-plugin
      - TAPIO_OTEL_DEBUG=false
    depends_on:
      - jaeger
    networks:
      - tapio
    restart: unless-stopped

  # Prometheus Plugin - Metrics export
  tapio-prometheus-plugin:
    build:
      context: ..
      dockerfile: deployments/plugins/prometheus/Dockerfile
    container_name: tapio-prometheus-plugin
    environment:
      - TAPIO_PROMETHEUS_ENDPOINT=prometheus:9090
      - TAPIO_PROMETHEUS_PUSHGATEWAY=pushgateway:9091
    depends_on:
      - prometheus
    networks:
      - tapio
    restart: unless-stopped

  # Supporting Services
  
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9092:9090"  # Avoid conflict with tapio-engine
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    networks:
      - tapio
    restart: unless-stopped

  # Jaeger - Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - tapio
    restart: unless-stopped

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"  # Avoid conflict with tapio-gui
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - tapio
    restart: unless-stopped

  # Redis - Caching (optional)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - tapio
    restart: unless-stopped

# Networks
networks:
  tapio:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  tapio-data:
    driver: local
  tapio-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  redis-data:
    driver: local