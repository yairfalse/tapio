# Tapio Engine Kubernetes Deployment
apiVersion: v1
kind: Namespace
metadata:
  name: tapio-system
  labels:
    name: tapio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tapio-engine
  namespace: tapio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tapio-engine
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets", "nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tapio-engine
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tapio-engine
subjects:
- kind: ServiceAccount
  name: tapio-engine
  namespace: tapio-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tapio-engine-config
  namespace: tapio-system
data:
  config.yaml: |
    log_level: info
    kubernetes:
      kubeconfig: ""
      namespace: ""
    event_collector:
      buffer_size: 10000
      timeout: 5s
    pattern_detector:
      patterns_dir: "/var/lib/tapio/patterns"
      enabled: true
    plugins:
      plugin_dirs:
        - "/var/lib/tapio/plugins"
      enabled: true
    grpc:
      address: "0.0.0.0"
      port: 9090
      tls: false
    rest:
      address: "0.0.0.0"
      port: 8080
      tls: false
    metrics:
      enabled: true
      port: 9091
      path: "/metrics"
    storage:
      data_dir: "/var/lib/tapio/data"
      retention: "7d"
    performance:
      max_memory_mb: 500
      max_cpu_milli: 500
      max_events_per_sec: 165000
      correlation_workers: 8
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tapio-engine
  namespace: tapio-system
  labels:
    app: tapio-engine
    component: engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tapio-engine
  template:
    metadata:
      labels:
        app: tapio-engine
        component: engine
    spec:
      serviceAccountName: tapio-engine
      containers:
      - name: tapio-engine
        image: tapio/engine:latest
        ports:
        - containerPort: 9090
          name: grpc
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9091
          name: metrics
          protocol: TCP
        env:
        - name: TAPIO_ENGINE_CONFIG
          value: "/etc/tapio/config.yaml"
        - name: TAPIO_ENGINE_DATA_DIR
          value: "/var/lib/tapio/data"
        - name: TAPIO_ENGINE_LOG_DIR
          value: "/var/log/tapio"
        volumeMounts:
        - name: config
          mountPath: /etc/tapio
          readOnly: true
        - name: data
          mountPath: /var/lib/tapio/data
        - name: logs
          mountPath: /var/log/tapio
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: tapio-engine-config
      - name: data
        emptyDir: {}
      - name: logs
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: tapio-engine-grpc
  namespace: tapio-system
  labels:
    app: tapio-engine
    component: engine
spec:
  selector:
    app: tapio-engine
  ports:
  - name: grpc
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tapio-engine-http
  namespace: tapio-system
  labels:
    app: tapio-engine
    component: engine
spec:
  selector:
    app: tapio-engine
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tapio-engine-metrics
  namespace: tapio-system
  labels:
    app: tapio-engine
    component: engine
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: tapio-engine
  ports:
  - name: metrics
    port: 9091
    targetPort: 9091
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tapio-engine-network-policy
  namespace: tapio-system
spec:
  podSelector:
    matchLabels:
      app: tapio-engine
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: tapio-system
    - podSelector:
        matchLabels:
          app: tapio-collector
    - podSelector:
        matchLabels:
          app: tapio-cli
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9091
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53