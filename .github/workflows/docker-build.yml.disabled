name: Docker Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            tags: ""
            suffix: ""
          - os: linux
            arch: amd64
            tags: "ebpf"
            suffix: "-ebpf"
          - os: darwin
            arch: amd64
            tags: ""
            suffix: ""
          - os: darwin
            arch: arm64
            tags: ""
            suffix: ""
          - os: windows
            arch: amd64
            tags: ""
            suffix: ".exe"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build binary
      run: |
        mkdir -p bin
        docker build --target go-builder \
          --build-arg TARGETOS=${{ matrix.os }} \
          --build-arg TARGETARCH=${{ matrix.arch }} \
          --build-arg BUILD_TAGS="${{ matrix.tags }}" \
          --output type=local,dest=./bin \
          .
        mv bin/tapio bin/tapio-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: tapio-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}
        path: bin/tapio-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}

  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    needs: build-binaries
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: bin/

    - name: Create checksums
      run: |
        cd bin
        sha256sum tapio-* > checksums.txt

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/tapio-*
          bin/checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}