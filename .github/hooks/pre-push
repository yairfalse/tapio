#!/bin/bash

# Pre-push hook to prevent large files from being pushed
# Install with: cp .github/hooks/pre-push .git/hooks/ && chmod +x .git/hooks/pre-push

RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Maximum file size in bytes (10MB)
MAX_FILE_SIZE=10485760

# Check for large files
large_files=""
while read local_ref local_sha remote_ref remote_sha; do
    # Get list of files being pushed
    files=$(git diff --name-only $remote_sha $local_sha 2>/dev/null || git ls-files)
    
    for file in $files; do
        if [ -f "$file" ]; then
            file_size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo 0)
            
            if [ "$file_size" -gt "$MAX_FILE_SIZE" ]; then
                size_mb=$((file_size / 1048576))
                large_files="$large_files\n  - $file (${size_mb}MB)"
            fi
        fi
    done
done

if [ -n "$large_files" ]; then
    echo -e "${RED}❌ Push rejected: Large files detected${NC}"
    echo -e "${RED}The following files exceed 10MB:${NC}"
    echo -e "$large_files"
    echo ""
    echo -e "${YELLOW}Solutions:${NC}"
    echo "1. Remove the file from git: git rm --cached <file>"
    echo "2. Add to .gitignore: echo '<file>' >> .gitignore"
    echo "3. Use Git LFS for large files that must be tracked"
    echo ""
    echo -e "${YELLOW}To remove from history completely:${NC}"
    echo "git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch <file>' --prune-empty --tag-name-filter cat -- --all"
    exit 1
fi

echo -e "${GREEN}✅ No large files detected${NC}"